# @uses dtca_cycles_dbl


h : V
h_ : V
i : V
j : V
_between : V * V * V -> bool

delete_head := program([
    i := h ; j := null ;
    while $i != h | j = null$ {$I$} (
       j := i ;
       i := i.n1
    ) ;
	if $i = j$ then
	  h := null
	else (
	  h.n2 := null ;
	  h := h.n1 ;
	  j.n1 := h ;
  	  h.n2 := j 
	)
 ])
 
P := h_ = h & 
	  on_cycle1(h) &
 	  forall u v w (_between(u,v,w) <-> between1(u,v,w)) &
 	  legal_prev

I := h_ = h & on_cycle1(h) & n1*(h,i) &
      ite(j = null, i = h, n1*(h,j) & n1tot_(j,i)) &
 	  forall u v w (_between(u,v,w) <-> between1(u,v,w)) &
 	  legal_prev

Q := ite(h = null, forall u (_between(h_,u,u) <-> h_ = u),
     forall u v ((_between(h_,u,v) & h_ != u & h_ != v) -> between1(h,u,v)) &
     forall u v ((between1(h,u,v) & h != v) -> _between(h_,u,v)) &
 	 forall u v w (n1*(h,u) & n1*(h,v) & n1*(h,w) -> (between1(u,v,w) <-> between2(w,v,u))) & 
	 forall u (n1*(h,u) -> (self_loop1(u) <-> self_loop2(u)))
	 & on_cycle1(h) & ~n1*(h,h_))


lemma(P -> wp(delete_head,Q))