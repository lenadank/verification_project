# @uses dtcc1_ea

(k*0 : V * V -> bool) -> (k* : V * V -> bool)

h : V
(i0 : V) -> (i : V)
(j0 : V) -> (j : V)
(k0 : V) -> (k : V)

(ms0 : V) -> (ms : V)
(mt0 : V) -> (mt : V)

# ghost structures
_k* : V * V -> bool
_ms : V
_mt : V

dtcc1(k*,ms,mt)
dtcc1(k*0,ms0,mt0)
dtcc1(_k*,_ms,_mt)


init     :=  on_cycle(h) & i = h & j = null & 
             eqrel(_k*, k*) & _ms = ms & _mt = mt

program := program([
	while $i != h | j = null$ {$I$} (
        k := i.n;
        i.n := j;
        j := i;
        i := k
    ) ;
    i.n := j
 ])

_n*(u,v) := n*(_k*,_ms,_mt,u,v)

between(k*,ms,mt,u,v,w) := (k*(u,v) & k*(v,w)) |
  ms != null & ~(k*(u,w) & u!=w) & (k*(u,ms) & k*(mt,v) & k*(v,w)  |  k*(u,v) & k*(v,ms) & k*(mt, w))

post := forall u (n*(h,u) <-> _n*(h,u))  & 
        forall u v (_n*(h,u) & _n*(h,v) -> (between(k*,ms,mt,h,u,v) <-> between(_k*,_ms,_mt,h,v,u)))


# valid
# * The inferred formula is an inductive invariant!
# (31 clauses)
# (12 universal clauses)
# PDR: 884.22s
# N = 9
# 166 iterations
# 1857 calls to SAT
# csll-reverse.imp[univ]
