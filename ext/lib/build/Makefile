# Automatically generated file.
include config.mk
all: shell api_dll java
	@echo Z3 was successfully built.
	@echo "Z3Py scripts can already be executed in the 'build' directory."
	@echo "Z3Py scripts stored in arbitrary directories can be also executed if 'build' directory is added to the PYTHONPATH environment variable."
	@echo Use the following command to install Z3 at prefix $(PREFIX).
	@echo "    sudo make install"
examples: _ex_cpp_example _ex_iz3 _ex_z3_tptp _ex_c_example _ex_maxsat _ex_java_example _ex_py_example
	@echo Z3 examples were successfully built.
includes_0 =
util/approx_nat.h.node: ../src/util/approx_nat.h
	@echo done > util/approx_nat.h.node
util/approx_nat$(OBJ_EXT): ../src/util/approx_nat.cpp util/approx_nat.h.node
	@echo src/util/approx_nat.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/approx_nat$(OBJ_EXT) ../src/util/approx_nat.cpp
util/error_codes.h.node: ../src/util/error_codes.h
	@echo done > util/error_codes.h.node
util/warning.h.node: ../src/util/warning.h
	@echo done > util/warning.h.node
util/debug.h.node: ../src/util/debug.h util/error_codes.h.node util/warning.h.node
	@echo done > util/debug.h.node
util/approx_set.h.node: ../src/util/approx_set.h util/debug.h.node
	@echo done > util/approx_set.h.node
util/approx_set$(OBJ_EXT): ../src/util/approx_set.cpp util/approx_set.h.node
	@echo src/util/approx_set.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/approx_set$(OBJ_EXT) ../src/util/approx_set.cpp
util/bit_util.h.node: ../src/util/bit_util.h
	@echo done > util/bit_util.h.node
util/z3_exception.h.node: ../src/util/z3_exception.h
	@echo done > util/z3_exception.h.node
util/memory_manager.h.node: ../src/util/memory_manager.h util/z3_exception.h.node
	@echo done > util/memory_manager.h.node
util/util.h.node: ../src/util/util.h util/debug.h.node util/memory_manager.h.node
	@echo done > util/util.h.node
util/bit_util$(OBJ_EXT): ../src/util/bit_util.cpp util/bit_util.h.node util/util.h.node util/debug.h.node
	@echo src/util/bit_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/bit_util$(OBJ_EXT) ../src/util/bit_util.cpp
util/hash.h.node: ../src/util/hash.h util/util.h.node
	@echo done > util/hash.h.node
util/vector.h.node: ../src/util/vector.h util/debug.h.node util/memory_manager.h.node util/hash.h.node util/z3_exception.h.node
	@echo done > util/vector.h.node
util/bit_vector.h.node: ../src/util/bit_vector.h util/debug.h.node util/vector.h.node util/memory_manager.h.node
	@echo done > util/bit_vector.h.node
util/trace.h.node: ../src/util/trace.h
	@echo done > util/trace.h.node
util/bit_vector$(OBJ_EXT): ../src/util/bit_vector.cpp util/bit_vector.h.node util/trace.h.node
	@echo src/util/bit_vector.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/bit_vector$(OBJ_EXT) ../src/util/bit_vector.cpp
util/machine.h.node: ../src/util/machine.h
	@echo done > util/machine.h.node
util/tptr.h.node: ../src/util/tptr.h util/machine.h.node
	@echo done > util/tptr.h.node
util/string_buffer.h.node: ../src/util/string_buffer.h util/util.h.node util/memory_manager.h.node
	@echo done > util/string_buffer.h.node
util/symbol.h.node: ../src/util/symbol.h util/util.h.node util/tptr.h.node util/string_buffer.h.node
	@echo done > util/symbol.h.node
util/cmd_context_types.h.node: ../src/util/cmd_context_types.h util/symbol.h.node util/z3_exception.h.node
	@echo done > util/cmd_context_types.h.node
util/cmd_context_types$(OBJ_EXT): ../src/util/cmd_context_types.cpp util/cmd_context_types.h.node
	@echo src/util/cmd_context_types.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/cmd_context_types$(OBJ_EXT) ../src/util/cmd_context_types.cpp
util/common_msgs.h.node: ../src/util/common_msgs.h
	@echo done > util/common_msgs.h.node
util/common_msgs$(OBJ_EXT): ../src/util/common_msgs.cpp util/common_msgs.h.node
	@echo src/util/common_msgs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/common_msgs$(OBJ_EXT) ../src/util/common_msgs.cpp
util/cooperate.h.node: ../src/util/cooperate.h
	@echo done > util/cooperate.h.node
util/z3_omp.h.node: ../src/util/z3_omp.h
	@echo done > util/z3_omp.h.node
util/cooperate$(OBJ_EXT): ../src/util/cooperate.cpp util/cooperate.h.node util/trace.h.node util/debug.h.node util/z3_omp.h.node
	@echo src/util/cooperate.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/cooperate$(OBJ_EXT) ../src/util/cooperate.cpp
util/hashtable.h.node: ../src/util/hashtable.h util/debug.h.node util/util.h.node util/memory_manager.h.node util/hash.h.node
	@echo done > util/hashtable.h.node
util/str_hashtable.h.node: ../src/util/str_hashtable.h util/hashtable.h.node util/hash.h.node
	@echo done > util/str_hashtable.h.node
util/debug$(OBJ_EXT): ../src/util/debug.cpp util/str_hashtable.h.node util/z3_exception.h.node
	@echo src/util/debug.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/debug$(OBJ_EXT) ../src/util/debug.cpp
util/env_params.h.node: ../src/util/env_params.h
	@echo done > util/env_params.h.node
util/params.h.node: ../src/util/params.h util/cmd_context_types.h.node util/vector.h.node
	@echo done > util/params.h.node
util/gparams.h.node: ../src/util/gparams.h util/params.h.node
	@echo done > util/gparams.h.node
util/env_params$(OBJ_EXT): ../src/util/env_params.cpp util/env_params.h.node util/params.h.node util/gparams.h.node util/util.h.node util/memory_manager.h.node
	@echo src/util/env_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/env_params$(OBJ_EXT) ../src/util/env_params.cpp
util/map.h.node: ../src/util/map.h util/hashtable.h.node
	@echo done > util/map.h.node
util/dictionary.h.node: ../src/util/dictionary.h util/map.h.node util/symbol.h.node
	@echo done > util/dictionary.h.node
util/gparams$(OBJ_EXT): ../src/util/gparams.cpp util/gparams.h.node util/dictionary.h.node util/trace.h.node
	@echo src/util/gparams.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/gparams$(OBJ_EXT) ../src/util/gparams.cpp
util/hash$(OBJ_EXT): ../src/util/hash.cpp util/debug.h.node util/hash.h.node
	@echo src/util/hash.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/hash$(OBJ_EXT) ../src/util/hash.cpp
util/small_object_allocator.h.node: ../src/util/small_object_allocator.h util/machine.h.node util/debug.h.node
	@echo done > util/small_object_allocator.h.node
util/scoped_numeral.h.node: ../src/util/scoped_numeral.h
	@echo done > util/scoped_numeral.h.node
util/scoped_numeral_vector.h.node: ../src/util/scoped_numeral_vector.h util/vector.h.node
	@echo done > util/scoped_numeral_vector.h.node
util/mpz.h.node: ../src/util/mpz.h util/util.h.node util/small_object_allocator.h.node util/trace.h.node util/scoped_numeral.h.node util/scoped_numeral_vector.h.node util/z3_omp.h.node
	@echo done > util/mpz.h.node
util/mpq.h.node: ../src/util/mpq.h util/mpz.h.node util/trace.h.node
	@echo done > util/mpq.h.node
util/mpf.h.node: ../src/util/mpf.h util/mpz.h.node util/mpq.h.node util/map.h.node util/scoped_numeral.h.node util/scoped_numeral_vector.h.node util/hash.h.node
	@echo done > util/mpf.h.node
util/hwf.h.node: ../src/util/hwf.h util/mpz.h.node util/mpq.h.node util/mpf.h.node
	@echo done > util/hwf.h.node
util/hwf$(OBJ_EXT): ../src/util/hwf.cpp util/hwf.h.node
	@echo src/util/hwf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/hwf$(OBJ_EXT) ../src/util/hwf.cpp
util/rational.h.node: ../src/util/rational.h util/mpq.h.node
	@echo done > util/rational.h.node
util/inf_int_rational.h.node: ../src/util/inf_int_rational.h util/debug.h.node util/vector.h.node util/rational.h.node
	@echo done > util/inf_int_rational.h.node
util/inf_int_rational$(OBJ_EXT): ../src/util/inf_int_rational.cpp util/inf_int_rational.h.node
	@echo src/util/inf_int_rational.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/inf_int_rational$(OBJ_EXT) ../src/util/inf_int_rational.cpp
util/inf_rational.h.node: ../src/util/inf_rational.h util/debug.h.node util/vector.h.node util/rational.h.node
	@echo done > util/inf_rational.h.node
util/inf_rational$(OBJ_EXT): ../src/util/inf_rational.cpp util/inf_rational.h.node
	@echo src/util/inf_rational.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/inf_rational$(OBJ_EXT) ../src/util/inf_rational.cpp
util/s_integer.h.node: ../src/util/s_integer.h util/rational.h.node
	@echo done > util/s_integer.h.node
util/inf_s_integer.h.node: ../src/util/inf_s_integer.h util/s_integer.h.node util/rational.h.node
	@echo done > util/inf_s_integer.h.node
util/inf_s_integer$(OBJ_EXT): ../src/util/inf_s_integer.cpp util/inf_s_integer.h.node
	@echo src/util/inf_s_integer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/inf_s_integer$(OBJ_EXT) ../src/util/inf_s_integer.cpp
util/lbool.h.node: ../src/util/lbool.h util/util.h.node
	@echo done > util/lbool.h.node
util/lbool$(OBJ_EXT): ../src/util/lbool.cpp util/lbool.h.node
	@echo src/util/lbool.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/lbool$(OBJ_EXT) ../src/util/lbool.cpp
util/luby$(OBJ_EXT): ../src/util/luby.cpp
	@echo src/util/luby.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/luby$(OBJ_EXT) ../src/util/luby.cpp
util/memory_manager$(OBJ_EXT): ../src/util/memory_manager.cpp util/trace.h.node util/memory_manager.h.node util/error_codes.h.node util/z3_omp.h.node
	@echo src/util/memory_manager.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/memory_manager$(OBJ_EXT) ../src/util/memory_manager.cpp
util/mpbq.h.node: ../src/util/mpbq.h util/mpq.h.node util/rational.h.node util/vector.h.node
	@echo done > util/mpbq.h.node
util/mpbq$(OBJ_EXT): ../src/util/mpbq.cpp util/mpbq.h.node
	@echo src/util/mpbq.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/mpbq$(OBJ_EXT) ../src/util/mpbq.cpp
util/mpf$(OBJ_EXT): ../src/util/mpf.cpp util/mpf.h.node
	@echo src/util/mpf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/mpf$(OBJ_EXT) ../src/util/mpf.cpp
util/id_gen.h.node: ../src/util/id_gen.h util/vector.h.node util/util.h.node
	@echo done > util/id_gen.h.node
util/mpff.h.node: ../src/util/mpff.h util/id_gen.h.node util/util.h.node util/vector.h.node util/z3_exception.h.node util/scoped_numeral.h.node util/scoped_numeral_vector.h.node
	@echo done > util/mpff.h.node
util/buffer.h.node: ../src/util/buffer.h util/memory_manager.h.node
	@echo done > util/buffer.h.node
util/mpn.h.node: ../src/util/mpn.h util/util.h.node util/buffer.h.node
	@echo done > util/mpn.h.node
util/mpff$(OBJ_EXT): ../src/util/mpff.cpp util/mpff.h.node util/mpn.h.node util/mpz.h.node util/mpq.h.node util/bit_util.h.node util/trace.h.node
	@echo src/util/mpff.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/mpff$(OBJ_EXT) ../src/util/mpff.cpp
util/mpfx.h.node: ../src/util/mpfx.h util/id_gen.h.node util/util.h.node util/vector.h.node util/z3_exception.h.node util/scoped_numeral.h.node util/scoped_numeral_vector.h.node
	@echo done > util/mpfx.h.node
util/mpfx$(OBJ_EXT): ../src/util/mpfx.cpp util/mpfx.h.node util/mpn.h.node util/mpz.h.node util/mpq.h.node util/bit_util.h.node util/trace.h.node
	@echo src/util/mpfx.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/mpfx$(OBJ_EXT) ../src/util/mpfx.cpp
util/mpn$(OBJ_EXT): ../src/util/mpn.cpp util/debug.h.node util/trace.h.node util/buffer.h.node util/mpn.h.node
	@echo src/util/mpn.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/mpn$(OBJ_EXT) ../src/util/mpn.cpp
util/mpq$(OBJ_EXT): ../src/util/mpq.cpp util/mpq.h.node util/warning.h.node util/z3_exception.h.node
	@echo src/util/mpq.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/mpq$(OBJ_EXT) ../src/util/mpq.cpp
util/mpq_inf.h.node: ../src/util/mpq_inf.h util/mpq.h.node util/hash.h.node
	@echo done > util/mpq_inf.h.node
util/mpq_inf$(OBJ_EXT): ../src/util/mpq_inf.cpp util/mpq_inf.h.node
	@echo src/util/mpq_inf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/mpq_inf$(OBJ_EXT) ../src/util/mpq_inf.cpp
util/mpz$(OBJ_EXT): ../src/util/mpz.cpp util/mpz.h.node util/buffer.h.node util/trace.h.node util/hash.h.node util/bit_util.h.node util/mpn.h.node
	@echo src/util/mpz.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/mpz$(OBJ_EXT) ../src/util/mpz.cpp
util/page.h.node: ../src/util/page.h util/memory_manager.h.node
	@echo done > util/page.h.node
util/page$(OBJ_EXT): ../src/util/page.cpp util/page.h.node util/debug.h.node
	@echo src/util/page.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/page$(OBJ_EXT) ../src/util/page.cpp
util/params$(OBJ_EXT): ../src/util/params.cpp util/params.h.node util/rational.h.node util/symbol.h.node util/dictionary.h.node
	@echo src/util/params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/params$(OBJ_EXT) ../src/util/params.cpp
util/permutation.h.node: ../src/util/permutation.h util/vector.h.node
	@echo done > util/permutation.h.node
util/permutation$(OBJ_EXT): ../src/util/permutation.cpp util/permutation.h.node
	@echo src/util/permutation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/permutation$(OBJ_EXT) ../src/util/permutation.cpp
util/prime_generator.h.node: ../src/util/prime_generator.h util/vector.h.node util/z3_exception.h.node util/util.h.node
	@echo done > util/prime_generator.h.node
util/prime_generator$(OBJ_EXT): ../src/util/prime_generator.cpp util/prime_generator.h.node
	@echo src/util/prime_generator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/prime_generator$(OBJ_EXT) ../src/util/prime_generator.cpp
util/rational$(OBJ_EXT): ../src/util/rational.cpp util/util.h.node util/rational.h.node
	@echo src/util/rational.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/rational$(OBJ_EXT) ../src/util/rational.cpp
util/region.h.node: ../src/util/region.h util/vector.h.node
	@echo done > util/region.h.node
util/region$(OBJ_EXT): ../src/util/region.cpp util/region.h.node util/tptr.h.node util/debug.h.node util/memory_manager.h.node util/page.h.node
	@echo src/util/region.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/region$(OBJ_EXT) ../src/util/region.cpp
util/s_integer$(OBJ_EXT): ../src/util/s_integer.cpp util/s_integer.h.node
	@echo src/util/s_integer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/s_integer$(OBJ_EXT) ../src/util/s_integer.cpp
util/event_handler.h.node: ../src/util/event_handler.h
	@echo done > util/event_handler.h.node
util/scoped_ctrl_c.h.node: ../src/util/scoped_ctrl_c.h util/event_handler.h.node
	@echo done > util/scoped_ctrl_c.h.node
util/scoped_ctrl_c$(OBJ_EXT): ../src/util/scoped_ctrl_c.cpp util/scoped_ctrl_c.h.node
	@echo src/util/scoped_ctrl_c.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/scoped_ctrl_c$(OBJ_EXT) ../src/util/scoped_ctrl_c.cpp
util/scoped_timer.h.node: ../src/util/scoped_timer.h util/event_handler.h.node
	@echo done > util/scoped_timer.h.node
util/scoped_timer$(OBJ_EXT): ../src/util/scoped_timer.cpp util/z3_exception.h.node util/z3_omp.h.node util/warning.h.node util/scoped_timer.h.node util/util.h.node util/z3_omp.h.node
	@echo src/util/scoped_timer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/scoped_timer$(OBJ_EXT) ../src/util/scoped_timer.cpp
util/obj_ref.h.node: ../src/util/obj_ref.h
	@echo done > util/obj_ref.h.node
util/ref_vector.h.node: ../src/util/ref_vector.h util/vector.h.node util/obj_ref.h.node
	@echo done > util/ref_vector.h.node
util/sexpr.h.node: ../src/util/sexpr.h util/rational.h.node util/symbol.h.node util/obj_ref.h.node util/ref_vector.h.node
	@echo done > util/sexpr.h.node
util/sexpr$(OBJ_EXT): ../src/util/sexpr.cpp util/sexpr.h.node util/vector.h.node util/buffer.h.node
	@echo src/util/sexpr.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/sexpr$(OBJ_EXT) ../src/util/sexpr.cpp
util/small_object_allocator$(OBJ_EXT): ../src/util/small_object_allocator.cpp util/memory_manager.h.node util/small_object_allocator.h.node util/debug.h.node util/util.h.node util/vector.h.node
	@echo src/util/small_object_allocator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/small_object_allocator$(OBJ_EXT) ../src/util/small_object_allocator.cpp
util/smt2_util.h.node: ../src/util/smt2_util.h util/symbol.h.node
	@echo done > util/smt2_util.h.node
util/smt2_util$(OBJ_EXT): ../src/util/smt2_util.cpp util/smt2_util.h.node
	@echo src/util/smt2_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/smt2_util$(OBJ_EXT) ../src/util/smt2_util.cpp
util/stack.h.node: ../src/util/stack.h util/page.h.node util/debug.h.node
	@echo done > util/stack.h.node
util/stack$(OBJ_EXT): ../src/util/stack.cpp util/stack.h.node util/page.h.node util/tptr.h.node
	@echo src/util/stack.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/stack$(OBJ_EXT) ../src/util/stack.cpp
util/statistics.h.node: ../src/util/statistics.h util/vector.h.node
	@echo done > util/statistics.h.node
util/statistics$(OBJ_EXT): ../src/util/statistics.cpp util/statistics.h.node util/map.h.node util/str_hashtable.h.node util/buffer.h.node util/smt2_util.h.node
	@echo src/util/statistics.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/statistics$(OBJ_EXT) ../src/util/statistics.cpp
util/symbol$(OBJ_EXT): ../src/util/symbol.cpp util/symbol.h.node util/str_hashtable.h.node util/region.h.node util/string_buffer.h.node util/z3_omp.h.node
	@echo src/util/symbol.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/symbol$(OBJ_EXT) ../src/util/symbol.cpp
util/timeit.h.node: ../src/util/timeit.h
	@echo done > util/timeit.h.node
util/stopwatch.h.node: ../src/util/stopwatch.h
	@echo done > util/stopwatch.h.node
util/timeit$(OBJ_EXT): ../src/util/timeit.cpp util/timeit.h.node util/memory_manager.h.node util/stopwatch.h.node
	@echo src/util/timeit.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/timeit$(OBJ_EXT) ../src/util/timeit.cpp
util/timeout.h.node: ../src/util/timeout.h
	@echo done > util/timeout.h.node
util/timeout$(OBJ_EXT): ../src/util/timeout.cpp util/z3_omp.h.node util/util.h.node util/timeout.h.node util/error_codes.h.node util/event_handler.h.node util/scoped_timer.h.node
	@echo src/util/timeout.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/timeout$(OBJ_EXT) ../src/util/timeout.cpp
util/timer.h.node: ../src/util/timer.h
	@echo done > util/timer.h.node
util/timer$(OBJ_EXT): ../src/util/timer.cpp util/util.h.node util/memory_manager.h.node util/stopwatch.h.node util/timer.h.node
	@echo src/util/timer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/timer$(OBJ_EXT) ../src/util/timer.cpp
util/trace$(OBJ_EXT): ../src/util/trace.cpp util/trace.h.node util/str_hashtable.h.node
	@echo src/util/trace.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/trace$(OBJ_EXT) ../src/util/trace.cpp
util/util$(OBJ_EXT): ../src/util/util.cpp util/util.h.node
	@echo src/util/util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/util$(OBJ_EXT) ../src/util/util.cpp
util/warning$(OBJ_EXT): ../src/util/warning.cpp util/error_codes.h.node util/util.h.node util/buffer.h.node util/vector.h.node
	@echo src/util/warning.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/warning$(OBJ_EXT) ../src/util/warning.cpp
util/z3_exception$(OBJ_EXT): ../src/util/z3_exception.cpp util/z3_exception.h.node util/warning.h.node util/error_codes.h.node util/debug.h.node
	@echo src/util/z3_exception.cpp
	@$(CXX) $(CXXFLAGS) $(includes_0) $(CXX_OUT_FLAG)util/z3_exception$(OBJ_EXT) ../src/util/z3_exception.cpp
util/util$(LIB_EXT): util/approx_nat$(OBJ_EXT) util/approx_set$(OBJ_EXT) util/bit_util$(OBJ_EXT) util/bit_vector$(OBJ_EXT) util/cmd_context_types$(OBJ_EXT) util/common_msgs$(OBJ_EXT) util/cooperate$(OBJ_EXT) util/debug$(OBJ_EXT) util/env_params$(OBJ_EXT) util/gparams$(OBJ_EXT) util/hash$(OBJ_EXT) util/hwf$(OBJ_EXT) util/inf_int_rational$(OBJ_EXT) util/inf_rational$(OBJ_EXT) util/inf_s_integer$(OBJ_EXT) util/lbool$(OBJ_EXT) util/luby$(OBJ_EXT) util/memory_manager$(OBJ_EXT) util/mpbq$(OBJ_EXT) util/mpf$(OBJ_EXT) util/mpff$(OBJ_EXT) util/mpfx$(OBJ_EXT) util/mpn$(OBJ_EXT) util/mpq$(OBJ_EXT) util/mpq_inf$(OBJ_EXT) util/mpz$(OBJ_EXT) util/page$(OBJ_EXT) util/params$(OBJ_EXT) util/permutation$(OBJ_EXT) util/prime_generator$(OBJ_EXT) util/rational$(OBJ_EXT) util/region$(OBJ_EXT) util/s_integer$(OBJ_EXT) util/scoped_ctrl_c$(OBJ_EXT) util/scoped_timer$(OBJ_EXT) util/sexpr$(OBJ_EXT) util/small_object_allocator$(OBJ_EXT) util/smt2_util$(OBJ_EXT) util/stack$(OBJ_EXT) util/statistics$(OBJ_EXT) util/symbol$(OBJ_EXT) util/timeit$(OBJ_EXT) util/timeout$(OBJ_EXT) util/timer$(OBJ_EXT) util/trace$(OBJ_EXT) util/util$(OBJ_EXT) util/warning$(OBJ_EXT) util/z3_exception$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)util/util$(LIB_EXT) util/approx_nat$(OBJ_EXT) util/approx_set$(OBJ_EXT) util/bit_util$(OBJ_EXT) util/bit_vector$(OBJ_EXT) util/cmd_context_types$(OBJ_EXT) util/common_msgs$(OBJ_EXT) util/cooperate$(OBJ_EXT) util/debug$(OBJ_EXT) util/env_params$(OBJ_EXT) util/gparams$(OBJ_EXT) util/hash$(OBJ_EXT) util/hwf$(OBJ_EXT) util/inf_int_rational$(OBJ_EXT) util/inf_rational$(OBJ_EXT) util/inf_s_integer$(OBJ_EXT) util/lbool$(OBJ_EXT) util/luby$(OBJ_EXT) util/memory_manager$(OBJ_EXT) util/mpbq$(OBJ_EXT) util/mpf$(OBJ_EXT) util/mpff$(OBJ_EXT) util/mpfx$(OBJ_EXT) util/mpn$(OBJ_EXT) util/mpq$(OBJ_EXT) util/mpq_inf$(OBJ_EXT) util/mpz$(OBJ_EXT) util/page$(OBJ_EXT) util/params$(OBJ_EXT) util/permutation$(OBJ_EXT) util/prime_generator$(OBJ_EXT) util/rational$(OBJ_EXT) util/region$(OBJ_EXT) util/s_integer$(OBJ_EXT) util/scoped_ctrl_c$(OBJ_EXT) util/scoped_timer$(OBJ_EXT) util/sexpr$(OBJ_EXT) util/small_object_allocator$(OBJ_EXT) util/smt2_util$(OBJ_EXT) util/stack$(OBJ_EXT) util/statistics$(OBJ_EXT) util/symbol$(OBJ_EXT) util/timeit$(OBJ_EXT) util/timeout$(OBJ_EXT) util/timer$(OBJ_EXT) util/trace$(OBJ_EXT) util/util$(OBJ_EXT) util/warning$(OBJ_EXT) util/z3_exception$(OBJ_EXT)
util: util/util$(LIB_EXT)

includes_1 = -I../src/util
util/basic_interval.h.node: ../src/util/basic_interval.h
	@echo done > util/basic_interval.h.node
util/mpbqi.h.node: ../src/util/mpbqi.h util/mpbq.h.node util/basic_interval.h.node
	@echo done > util/mpbqi.h.node
math/polynomial/polynomial.h.node: ../src/math/polynomial/polynomial.h util/mpz.h.node util/rational.h.node util/obj_ref.h.node util/ref_vector.h.node util/z3_exception.h.node util/scoped_numeral.h.node util/scoped_numeral_vector.h.node util/params.h.node util/mpbqi.h.node
	@echo done > math/polynomial/polynomial.h.node
math/polynomial/algebraic_numbers.h.node: ../src/math/polynomial/algebraic_numbers.h util/rational.h.node util/mpq.h.node math/polynomial/polynomial.h.node util/z3_exception.h.node util/scoped_numeral.h.node util/scoped_numeral_vector.h.node util/tptr.h.node util/statistics.h.node util/params.h.node
	@echo done > math/polynomial/algebraic_numbers.h.node
util/mpzzp.h.node: ../src/util/mpzzp.h util/mpz.h.node
	@echo done > util/mpzzp.h.node
math/polynomial/upolynomial.h.node: ../src/math/polynomial/upolynomial.h util/mpzzp.h.node util/rational.h.node math/polynomial/polynomial.h.node util/z3_exception.h.node util/mpbq.h.node
	@echo done > math/polynomial/upolynomial.h.node
math/polynomial/sexpr2upolynomial.h.node: ../src/math/polynomial/sexpr2upolynomial.h math/polynomial/upolynomial.h.node util/cmd_context_types.h.node
	@echo done > math/polynomial/sexpr2upolynomial.h.node
util/scoped_ptr_vector.h.node: ../src/util/scoped_ptr_vector.h util/vector.h.node util/util.h.node
	@echo done > util/scoped_ptr_vector.h.node
math/polynomial/algebraic_params.hpp.node: ../src/math/polynomial/algebraic_params.hpp util/params.h.node util/gparams.h.node
	@echo done > math/polynomial/algebraic_params.hpp.node
math/polynomial/algebraic_numbers$(OBJ_EXT): ../src/math/polynomial/algebraic_numbers.cpp math/polynomial/algebraic_numbers.h.node math/polynomial/upolynomial.h.node util/mpbq.h.node util/basic_interval.h.node util/cooperate.h.node math/polynomial/sexpr2upolynomial.h.node util/scoped_ptr_vector.h.node util/mpbqi.h.node util/timeit.h.node math/polynomial/algebraic_params.hpp.node
	@echo src/math/polynomial/algebraic_numbers.cpp
	@$(CXX) $(CXXFLAGS) $(includes_1) $(CXX_OUT_FLAG)math/polynomial/algebraic_numbers$(OBJ_EXT) ../src/math/polynomial/algebraic_numbers.cpp
util/chashtable.h.node: ../src/util/chashtable.h util/memory_manager.h.node util/debug.h.node util/trace.h.node util/hashtable.h.node
	@echo done > util/chashtable.h.node
math/polynomial/upolynomial_factorization.h.node: ../src/math/polynomial/upolynomial_factorization.h math/polynomial/upolynomial.h.node math/polynomial/polynomial.h.node util/bit_vector.h.node util/z3_exception.h.node
	@echo done > math/polynomial/upolynomial_factorization.h.node
math/polynomial/polynomial_factorization.h.node: ../src/math/polynomial/polynomial_factorization.h math/polynomial/polynomial.h.node math/polynomial/upolynomial.h.node util/bit_vector.h.node util/z3_exception.h.node
	@echo done > math/polynomial/polynomial_factorization.h.node
math/polynomial/polynomial_primes.h.node: ../src/math/polynomial/polynomial_primes.h
	@echo done > math/polynomial/polynomial_primes.h.node
math/polynomial/linear_eq_solver.h.node: ../src/math/polynomial/linear_eq_solver.h
	@echo done > math/polynomial/linear_eq_solver.h.node
util/scoped_numeral_buffer.h.node: ../src/util/scoped_numeral_buffer.h util/buffer.h.node
	@echo done > util/scoped_numeral_buffer.h.node
util/ref_buffer.h.node: ../src/util/ref_buffer.h util/buffer.h.node util/obj_ref.h.node util/ref_vector.h.node
	@echo done > util/ref_buffer.h.node
math/polynomial/polynomial$(OBJ_EXT): ../src/math/polynomial/polynomial.cpp math/polynomial/polynomial.h.node util/vector.h.node util/chashtable.h.node util/small_object_allocator.h.node util/id_gen.h.node util/buffer.h.node util/scoped_ptr_vector.h.node util/cooperate.h.node math/polynomial/upolynomial_factorization.h.node math/polynomial/polynomial_factorization.h.node math/polynomial/polynomial_primes.h.node util/permutation.h.node math/polynomial/algebraic_numbers.h.node util/mpzzp.h.node util/timeit.h.node math/polynomial/linear_eq_solver.h.node util/scoped_numeral_buffer.h.node util/ref_buffer.h.node
	@echo src/math/polynomial/polynomial.cpp
	@$(CXX) $(CXXFLAGS) $(includes_1) $(CXX_OUT_FLAG)math/polynomial/polynomial$(OBJ_EXT) ../src/math/polynomial/polynomial.cpp
math/polynomial/polynomial_cache.h.node: ../src/math/polynomial/polynomial_cache.h math/polynomial/polynomial.h.node
	@echo done > math/polynomial/polynomial_cache.h.node
math/polynomial/polynomial_cache$(OBJ_EXT): ../src/math/polynomial/polynomial_cache.cpp math/polynomial/polynomial_cache.h.node util/chashtable.h.node
	@echo src/math/polynomial/polynomial_cache.cpp
	@$(CXX) $(CXXFLAGS) $(includes_1) $(CXX_OUT_FLAG)math/polynomial/polynomial_cache$(OBJ_EXT) ../src/math/polynomial/polynomial_cache.cpp
math/polynomial/upolynomial_factorization_int.h.node: ../src/math/polynomial/upolynomial_factorization_int.h math/polynomial/upolynomial_factorization.h.node
	@echo done > math/polynomial/upolynomial_factorization_int.h.node
math/polynomial/polynomial_factorization$(OBJ_EXT): ../src/math/polynomial/polynomial_factorization.cpp util/trace.h.node util/util.h.node math/polynomial/polynomial_factorization.h.node math/polynomial/upolynomial_factorization_int.h.node util/prime_generator.h.node
	@echo src/math/polynomial/polynomial_factorization.cpp
	@$(CXX) $(CXXFLAGS) $(includes_1) $(CXX_OUT_FLAG)math/polynomial/polynomial_factorization$(OBJ_EXT) ../src/math/polynomial/polynomial_factorization.cpp
math/polynomial/rpolynomial.h.node: ../src/math/polynomial/rpolynomial.h util/mpz.h.node util/rational.h.node util/obj_ref.h.node util/ref_vector.h.node util/z3_exception.h.node math/polynomial/polynomial.h.node
	@echo done > math/polynomial/rpolynomial.h.node
math/polynomial/rpolynomial$(OBJ_EXT): ../src/math/polynomial/rpolynomial.cpp math/polynomial/rpolynomial.h.node util/tptr.h.node util/buffer.h.node
	@echo src/math/polynomial/rpolynomial.cpp
	@$(CXX) $(CXXFLAGS) $(includes_1) $(CXX_OUT_FLAG)math/polynomial/rpolynomial$(OBJ_EXT) ../src/math/polynomial/rpolynomial.cpp
math/polynomial/sexpr2upolynomial$(OBJ_EXT): ../src/math/polynomial/sexpr2upolynomial.cpp math/polynomial/sexpr2upolynomial.h.node util/sexpr.h.node
	@echo src/math/polynomial/sexpr2upolynomial.cpp
	@$(CXX) $(CXXFLAGS) $(includes_1) $(CXX_OUT_FLAG)math/polynomial/sexpr2upolynomial$(OBJ_EXT) ../src/math/polynomial/sexpr2upolynomial.cpp
math/polynomial/upolynomial$(OBJ_EXT): ../src/math/polynomial/upolynomial.cpp math/polynomial/upolynomial.h.node math/polynomial/upolynomial_factorization.h.node math/polynomial/polynomial_primes.h.node util/buffer.h.node util/cooperate.h.node
	@echo src/math/polynomial/upolynomial.cpp
	@$(CXX) $(CXXFLAGS) $(includes_1) $(CXX_OUT_FLAG)math/polynomial/upolynomial$(OBJ_EXT) ../src/math/polynomial/upolynomial.cpp
math/polynomial/upolynomial_factorization$(OBJ_EXT): ../src/math/polynomial/upolynomial_factorization.cpp util/trace.h.node util/util.h.node math/polynomial/upolynomial_factorization_int.h.node util/prime_generator.h.node
	@echo src/math/polynomial/upolynomial_factorization.cpp
	@$(CXX) $(CXXFLAGS) $(includes_1) $(CXX_OUT_FLAG)math/polynomial/upolynomial_factorization$(OBJ_EXT) ../src/math/polynomial/upolynomial_factorization.cpp
math/polynomial/polynomial$(LIB_EXT): math/polynomial/algebraic_numbers$(OBJ_EXT) math/polynomial/polynomial$(OBJ_EXT) math/polynomial/polynomial_cache$(OBJ_EXT) math/polynomial/polynomial_factorization$(OBJ_EXT) math/polynomial/rpolynomial$(OBJ_EXT) math/polynomial/sexpr2upolynomial$(OBJ_EXT) math/polynomial/upolynomial$(OBJ_EXT) math/polynomial/upolynomial_factorization$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)math/polynomial/polynomial$(LIB_EXT) math/polynomial/algebraic_numbers$(OBJ_EXT) math/polynomial/polynomial$(OBJ_EXT) math/polynomial/polynomial_cache$(OBJ_EXT) math/polynomial/polynomial_factorization$(OBJ_EXT) math/polynomial/rpolynomial$(OBJ_EXT) math/polynomial/sexpr2upolynomial$(OBJ_EXT) math/polynomial/upolynomial$(OBJ_EXT) math/polynomial/upolynomial_factorization$(OBJ_EXT)
polynomial: math/polynomial/polynomial$(LIB_EXT)

includes_2 = -I../src/util
sat/sat_types.h.node: ../src/sat/sat_types.h util/debug.h.node util/approx_set.h.node util/lbool.h.node util/z3_exception.h.node util/common_msgs.h.node util/vector.h.node
	@echo done > sat/sat_types.h.node
sat/dimacs.h.node: ../src/sat/dimacs.h sat/sat_types.h.node
	@echo done > sat/dimacs.h.node
sat/sat_clause.h.node: ../src/sat/sat_clause.h sat/sat_types.h.node util/small_object_allocator.h.node util/id_gen.h.node
	@echo done > sat/sat_clause.h.node
sat/sat_watched.h.node: ../src/sat/sat_watched.h sat/sat_types.h.node util/vector.h.node
	@echo done > sat/sat_watched.h.node
sat/sat_justification.h.node: ../src/sat/sat_justification.h
	@echo done > sat/sat_justification.h.node
util/heap.h.node: ../src/util/heap.h util/vector.h.node util/debug.h.node
	@echo done > util/heap.h.node
sat/sat_var_queue.h.node: ../src/sat/sat_var_queue.h util/heap.h.node sat/sat_types.h.node
	@echo done > sat/sat_var_queue.h.node
sat/sat_extension.h.node: ../src/sat/sat_extension.h sat/sat_types.h.node util/params.h.node
	@echo done > sat/sat_extension.h.node
sat/sat_config.h.node: ../src/sat/sat_config.h util/params.h.node
	@echo done > sat/sat_config.h.node
sat/sat_cleaner.h.node: ../src/sat/sat_cleaner.h sat/sat_types.h.node util/statistics.h.node
	@echo done > sat/sat_cleaner.h.node
sat/sat_clause_set.h.node: ../src/sat/sat_clause_set.h sat/sat_clause.h.node
	@echo done > sat/sat_clause_set.h.node
sat/sat_clause_use_list.h.node: ../src/sat/sat_clause_use_list.h sat/sat_types.h.node util/trace.h.node
	@echo done > sat/sat_clause_use_list.h.node
sat/sat_model_converter.h.node: ../src/sat/sat_model_converter.h sat/sat_types.h.node
	@echo done > sat/sat_model_converter.h.node
sat/sat_simplifier.h.node: ../src/sat/sat_simplifier.h sat/sat_types.h.node sat/sat_clause.h.node sat/sat_clause_set.h.node sat/sat_clause_use_list.h.node sat/sat_watched.h.node sat/sat_model_converter.h.node util/heap.h.node util/statistics.h.node util/params.h.node
	@echo done > sat/sat_simplifier.h.node
sat/sat_scc.h.node: ../src/sat/sat_scc.h sat/sat_types.h.node util/statistics.h.node util/params.h.node
	@echo done > sat/sat_scc.h.node
sat/sat_asymm_branch.h.node: ../src/sat/sat_asymm_branch.h sat/sat_types.h.node util/statistics.h.node util/params.h.node
	@echo done > sat/sat_asymm_branch.h.node
sat/sat_iff3_finder.h.node: ../src/sat/sat_iff3_finder.h sat/sat_types.h.node
	@echo done > sat/sat_iff3_finder.h.node
sat/sat_probing.h.node: ../src/sat/sat_probing.h sat/sat_types.h.node util/params.h.node util/statistics.h.node
	@echo done > sat/sat_probing.h.node
sat/sat_solver.h.node: ../src/sat/sat_solver.h sat/sat_types.h.node sat/sat_clause.h.node sat/sat_watched.h.node sat/sat_justification.h.node sat/sat_var_queue.h.node sat/sat_extension.h.node sat/sat_config.h.node sat/sat_cleaner.h.node sat/sat_simplifier.h.node sat/sat_scc.h.node sat/sat_asymm_branch.h.node sat/sat_iff3_finder.h.node sat/sat_probing.h.node util/params.h.node util/statistics.h.node util/stopwatch.h.node util/trace.h.node
	@echo done > sat/sat_solver.h.node
sat/dimacs$(OBJ_EXT): ../src/sat/dimacs.cpp sat/dimacs.h.node sat/sat_solver.h.node
	@echo src/sat/dimacs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/dimacs$(OBJ_EXT) ../src/sat/dimacs.cpp
sat/sat_asymm_branch_params.hpp.node: ../src/sat/sat_asymm_branch_params.hpp util/params.h.node util/gparams.h.node
	@echo done > sat/sat_asymm_branch_params.hpp.node
sat/sat_asymm_branch$(OBJ_EXT): ../src/sat/sat_asymm_branch.cpp sat/sat_asymm_branch.h.node sat/sat_asymm_branch_params.hpp.node sat/sat_solver.h.node util/stopwatch.h.node util/trace.h.node
	@echo src/sat/sat_asymm_branch.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_asymm_branch$(OBJ_EXT) ../src/sat/sat_asymm_branch.cpp
sat/sat_clause$(OBJ_EXT): ../src/sat/sat_clause.cpp sat/sat_clause.h.node util/z3_exception.h.node
	@echo src/sat/sat_clause.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_clause$(OBJ_EXT) ../src/sat/sat_clause.cpp
sat/sat_clause_set$(OBJ_EXT): ../src/sat/sat_clause_set.cpp sat/sat_clause_set.h.node
	@echo src/sat/sat_clause_set.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_clause_set$(OBJ_EXT) ../src/sat/sat_clause_set.cpp
sat/sat_clause_use_list$(OBJ_EXT): ../src/sat/sat_clause_use_list.cpp sat/sat_clause.h.node sat/sat_clause_use_list.h.node
	@echo src/sat/sat_clause_use_list.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_clause_use_list$(OBJ_EXT) ../src/sat/sat_clause_use_list.cpp
sat/sat_cleaner$(OBJ_EXT): ../src/sat/sat_cleaner.cpp sat/sat_cleaner.h.node sat/sat_solver.h.node util/trace.h.node util/stopwatch.h.node
	@echo src/sat/sat_cleaner.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_cleaner$(OBJ_EXT) ../src/sat/sat_cleaner.cpp
sat/sat_params.hpp.node: ../src/sat/sat_params.hpp util/params.h.node util/gparams.h.node
	@echo done > sat/sat_params.hpp.node
sat/sat_config$(OBJ_EXT): ../src/sat/sat_config.cpp sat/sat_config.h.node sat/sat_types.h.node sat/sat_params.hpp.node
	@echo src/sat/sat_config.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_config$(OBJ_EXT) ../src/sat/sat_config.cpp
sat/sat_elim_eqs.h.node: ../src/sat/sat_elim_eqs.h sat/sat_types.h.node
	@echo done > sat/sat_elim_eqs.h.node
sat/sat_elim_eqs$(OBJ_EXT): ../src/sat/sat_elim_eqs.cpp sat/sat_elim_eqs.h.node sat/sat_solver.h.node util/trace.h.node
	@echo src/sat/sat_elim_eqs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_elim_eqs$(OBJ_EXT) ../src/sat/sat_elim_eqs.cpp
sat/sat_iff3_finder$(OBJ_EXT): ../src/sat/sat_iff3_finder.cpp sat/sat_iff3_finder.h.node sat/sat_solver.h.node
	@echo src/sat/sat_iff3_finder.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_iff3_finder$(OBJ_EXT) ../src/sat/sat_iff3_finder.cpp
sat/sat_integrity_checker.h.node: ../src/sat/sat_integrity_checker.h sat/sat_types.h.node
	@echo done > sat/sat_integrity_checker.h.node
sat/sat_integrity_checker$(OBJ_EXT): ../src/sat/sat_integrity_checker.cpp sat/sat_integrity_checker.h.node sat/sat_solver.h.node util/trace.h.node
	@echo src/sat/sat_integrity_checker.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_integrity_checker$(OBJ_EXT) ../src/sat/sat_integrity_checker.cpp
sat/sat_model_converter$(OBJ_EXT): ../src/sat/sat_model_converter.cpp sat/sat_model_converter.h.node sat/sat_clause.h.node util/trace.h.node
	@echo src/sat/sat_model_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_model_converter$(OBJ_EXT) ../src/sat/sat_model_converter.cpp
sat/sat_probing$(OBJ_EXT): ../src/sat/sat_probing.cpp sat/sat_probing.h.node sat/sat_solver.h.node
	@echo src/sat/sat_probing.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_probing$(OBJ_EXT) ../src/sat/sat_probing.cpp
sat/sat_scc_params.hpp.node: ../src/sat/sat_scc_params.hpp util/params.h.node util/gparams.h.node
	@echo done > sat/sat_scc_params.hpp.node
sat/sat_scc$(OBJ_EXT): ../src/sat/sat_scc.cpp sat/sat_scc.h.node sat/sat_solver.h.node sat/sat_elim_eqs.h.node util/stopwatch.h.node util/trace.h.node sat/sat_scc_params.hpp.node
	@echo src/sat/sat_scc.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_scc$(OBJ_EXT) ../src/sat/sat_scc.cpp
sat/sat_simplifier_params.hpp.node: ../src/sat/sat_simplifier_params.hpp util/params.h.node util/gparams.h.node
	@echo done > sat/sat_simplifier_params.hpp.node
sat/sat_simplifier$(OBJ_EXT): ../src/sat/sat_simplifier.cpp sat/sat_simplifier.h.node sat/sat_simplifier_params.hpp.node sat/sat_solver.h.node util/stopwatch.h.node util/trace.h.node
	@echo src/sat/sat_simplifier.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_simplifier$(OBJ_EXT) ../src/sat/sat_simplifier.cpp
util/luby.h.node: ../src/util/luby.h
	@echo done > util/luby.h.node
sat/sat_solver$(OBJ_EXT): ../src/sat/sat_solver.cpp sat/sat_solver.h.node sat/sat_integrity_checker.h.node util/luby.h.node util/trace.h.node
	@echo src/sat/sat_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_solver$(OBJ_EXT) ../src/sat/sat_solver.cpp
sat/sat_watched$(OBJ_EXT): ../src/sat/sat_watched.cpp sat/sat_watched.h.node sat/sat_clause.h.node
	@echo src/sat/sat_watched.cpp
	@$(CXX) $(CXXFLAGS) $(includes_2) $(CXX_OUT_FLAG)sat/sat_watched$(OBJ_EXT) ../src/sat/sat_watched.cpp
sat/sat$(LIB_EXT): sat/dimacs$(OBJ_EXT) sat/sat_asymm_branch$(OBJ_EXT) sat/sat_clause$(OBJ_EXT) sat/sat_clause_set$(OBJ_EXT) sat/sat_clause_use_list$(OBJ_EXT) sat/sat_cleaner$(OBJ_EXT) sat/sat_config$(OBJ_EXT) sat/sat_elim_eqs$(OBJ_EXT) sat/sat_iff3_finder$(OBJ_EXT) sat/sat_integrity_checker$(OBJ_EXT) sat/sat_model_converter$(OBJ_EXT) sat/sat_probing$(OBJ_EXT) sat/sat_scc$(OBJ_EXT) sat/sat_simplifier$(OBJ_EXT) sat/sat_solver$(OBJ_EXT) sat/sat_watched$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)sat/sat$(LIB_EXT) sat/dimacs$(OBJ_EXT) sat/sat_asymm_branch$(OBJ_EXT) sat/sat_clause$(OBJ_EXT) sat/sat_clause_set$(OBJ_EXT) sat/sat_clause_use_list$(OBJ_EXT) sat/sat_cleaner$(OBJ_EXT) sat/sat_config$(OBJ_EXT) sat/sat_elim_eqs$(OBJ_EXT) sat/sat_iff3_finder$(OBJ_EXT) sat/sat_integrity_checker$(OBJ_EXT) sat/sat_model_converter$(OBJ_EXT) sat/sat_probing$(OBJ_EXT) sat/sat_scc$(OBJ_EXT) sat/sat_simplifier$(OBJ_EXT) sat/sat_solver$(OBJ_EXT) sat/sat_watched$(OBJ_EXT)
sat: sat/sat$(LIB_EXT)

includes_3 = -I../src/math/polynomial -I../src/util -I../src/sat
nlsat/nlsat_types.h.node: ../src/nlsat/nlsat_types.h math/polynomial/polynomial.h.node util/buffer.h.node sat/sat_types.h.node util/z3_exception.h.node
	@echo done > nlsat/nlsat_types.h.node
nlsat/nlsat_clause.h.node: ../src/nlsat/nlsat_clause.h nlsat/nlsat_types.h.node util/vector.h.node
	@echo done > nlsat/nlsat_clause.h.node
nlsat/nlsat_clause$(OBJ_EXT): ../src/nlsat/nlsat_clause.cpp nlsat/nlsat_clause.h.node
	@echo src/nlsat/nlsat_clause.cpp
	@$(CXX) $(CXXFLAGS) $(includes_3) $(CXX_OUT_FLAG)nlsat/nlsat_clause$(OBJ_EXT) ../src/nlsat/nlsat_clause.cpp
nlsat/nlsat_assignment.h.node: ../src/nlsat/nlsat_assignment.h nlsat/nlsat_types.h.node math/polynomial/algebraic_numbers.h.node
	@echo done > nlsat/nlsat_assignment.h.node
nlsat/nlsat_interval_set.h.node: ../src/nlsat/nlsat_interval_set.h nlsat/nlsat_types.h.node
	@echo done > nlsat/nlsat_interval_set.h.node
nlsat/nlsat_evaluator.h.node: ../src/nlsat/nlsat_evaluator.h nlsat/nlsat_types.h.node nlsat/nlsat_assignment.h.node nlsat/nlsat_interval_set.h.node
	@echo done > nlsat/nlsat_evaluator.h.node
nlsat/nlsat_evaluator$(OBJ_EXT): ../src/nlsat/nlsat_evaluator.cpp nlsat/nlsat_evaluator.h.node
	@echo src/nlsat/nlsat_evaluator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_3) $(CXX_OUT_FLAG)nlsat/nlsat_evaluator$(OBJ_EXT) ../src/nlsat/nlsat_evaluator.cpp
nlsat/nlsat_solver.h.node: ../src/nlsat/nlsat_solver.h nlsat/nlsat_types.h.node util/params.h.node util/statistics.h.node
	@echo done > nlsat/nlsat_solver.h.node
nlsat/nlsat_scoped_literal_vector.h.node: ../src/nlsat/nlsat_scoped_literal_vector.h nlsat/nlsat_solver.h.node
	@echo done > nlsat/nlsat_scoped_literal_vector.h.node
nlsat/nlsat_explain.h.node: ../src/nlsat/nlsat_explain.h nlsat/nlsat_solver.h.node nlsat/nlsat_scoped_literal_vector.h.node math/polynomial/polynomial_cache.h.node
	@echo done > nlsat/nlsat_explain.h.node
nlsat/nlsat_explain$(OBJ_EXT): ../src/nlsat/nlsat_explain.cpp nlsat/nlsat_explain.h.node nlsat/nlsat_assignment.h.node nlsat/nlsat_evaluator.h.node math/polynomial/algebraic_numbers.h.node util/ref_buffer.h.node
	@echo src/nlsat/nlsat_explain.cpp
	@$(CXX) $(CXXFLAGS) $(includes_3) $(CXX_OUT_FLAG)nlsat/nlsat_explain$(OBJ_EXT) ../src/nlsat/nlsat_explain.cpp
nlsat/nlsat_interval_set$(OBJ_EXT): ../src/nlsat/nlsat_interval_set.cpp nlsat/nlsat_interval_set.h.node math/polynomial/algebraic_numbers.h.node util/buffer.h.node
	@echo src/nlsat/nlsat_interval_set.cpp
	@$(CXX) $(CXXFLAGS) $(includes_3) $(CXX_OUT_FLAG)nlsat/nlsat_interval_set$(OBJ_EXT) ../src/nlsat/nlsat_interval_set.cpp
nlsat/nlsat_justification.h.node: ../src/nlsat/nlsat_justification.h nlsat/nlsat_types.h.node util/tptr.h.node
	@echo done > nlsat/nlsat_justification.h.node
util/dependency.h.node: ../src/util/dependency.h util/vector.h.node util/region.h.node
	@echo done > util/dependency.h.node
nlsat/nlsat_params.hpp.node: ../src/nlsat/nlsat_params.hpp util/params.h.node util/gparams.h.node
	@echo done > nlsat/nlsat_params.hpp.node
nlsat/nlsat_solver$(OBJ_EXT): ../src/nlsat/nlsat_solver.cpp nlsat/nlsat_solver.h.node nlsat/nlsat_clause.h.node nlsat/nlsat_assignment.h.node nlsat/nlsat_justification.h.node nlsat/nlsat_evaluator.h.node nlsat/nlsat_explain.h.node math/polynomial/algebraic_numbers.h.node util/z3_exception.h.node util/chashtable.h.node util/id_gen.h.node util/dependency.h.node math/polynomial/polynomial_cache.h.node util/permutation.h.node nlsat/nlsat_params.hpp.node
	@echo src/nlsat/nlsat_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_3) $(CXX_OUT_FLAG)nlsat/nlsat_solver$(OBJ_EXT) ../src/nlsat/nlsat_solver.cpp
nlsat/nlsat_types$(OBJ_EXT): ../src/nlsat/nlsat_types.cpp nlsat/nlsat_types.h.node util/debug.h.node util/hash.h.node math/polynomial/polynomial.h.node
	@echo src/nlsat/nlsat_types.cpp
	@$(CXX) $(CXXFLAGS) $(includes_3) $(CXX_OUT_FLAG)nlsat/nlsat_types$(OBJ_EXT) ../src/nlsat/nlsat_types.cpp
nlsat/nlsat$(LIB_EXT): nlsat/nlsat_clause$(OBJ_EXT) nlsat/nlsat_evaluator$(OBJ_EXT) nlsat/nlsat_explain$(OBJ_EXT) nlsat/nlsat_interval_set$(OBJ_EXT) nlsat/nlsat_solver$(OBJ_EXT) nlsat/nlsat_types$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)nlsat/nlsat$(LIB_EXT) nlsat/nlsat_clause$(OBJ_EXT) nlsat/nlsat_evaluator$(OBJ_EXT) nlsat/nlsat_explain$(OBJ_EXT) nlsat/nlsat_interval_set$(OBJ_EXT) nlsat/nlsat_solver$(OBJ_EXT) nlsat/nlsat_types$(OBJ_EXT)
nlsat: nlsat/nlsat$(LIB_EXT)

includes_4 = -I../src/util
util/checked_int64.h.node: ../src/util/checked_int64.h util/z3_exception.h.node util/rational.h.node
	@echo done > util/checked_int64.h.node
math/hilbert/hilbert_basis.h.node: ../src/math/hilbert/hilbert_basis.h util/rational.h.node util/lbool.h.node util/statistics.h.node util/checked_int64.h.node
	@echo done > math/hilbert/hilbert_basis.h.node
math/hilbert/heap_trie.h.node: ../src/math/hilbert/heap_trie.h util/map.h.node util/vector.h.node util/buffer.h.node util/statistics.h.node util/small_object_allocator.h.node
	@echo done > math/hilbert/heap_trie.h.node
math/hilbert/hilbert_basis$(OBJ_EXT): ../src/math/hilbert/hilbert_basis.cpp math/hilbert/hilbert_basis.h.node util/heap.h.node util/map.h.node math/hilbert/heap_trie.h.node util/stopwatch.h.node
	@echo src/math/hilbert/hilbert_basis.cpp
	@$(CXX) $(CXXFLAGS) $(includes_4) $(CXX_OUT_FLAG)math/hilbert/hilbert_basis$(OBJ_EXT) ../src/math/hilbert/hilbert_basis.cpp
math/hilbert/hilbert$(LIB_EXT): math/hilbert/hilbert_basis$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)math/hilbert/hilbert$(LIB_EXT) math/hilbert/hilbert_basis$(OBJ_EXT)
hilbert: math/hilbert/hilbert$(LIB_EXT)

includes_5 = -I../src/util
util/ext_numeral.h.node: ../src/util/ext_numeral.h util/debug.h.node
	@echo done > util/ext_numeral.h.node
math/interval/interval.h.node: ../src/math/interval/interval.h util/mpq.h.node util/ext_numeral.h.node
	@echo done > math/interval/interval.h.node
math/interval/interval_def.h.node: ../src/math/interval/interval_def.h math/interval/interval.h.node util/debug.h.node util/trace.h.node util/scoped_numeral.h.node util/cooperate.h.node
	@echo done > math/interval/interval_def.h.node
math/interval/interval_mpq$(OBJ_EXT): ../src/math/interval/interval_mpq.cpp math/interval/interval_def.h.node
	@echo src/math/interval/interval_mpq.cpp
	@$(CXX) $(CXXFLAGS) $(includes_5) $(CXX_OUT_FLAG)math/interval/interval_mpq$(OBJ_EXT) ../src/math/interval/interval_mpq.cpp
math/interval/interval$(LIB_EXT): math/interval/interval_mpq$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)math/interval/interval$(LIB_EXT) math/interval/interval_mpq$(OBJ_EXT)
interval: math/interval/interval$(LIB_EXT)

includes_6 = -I../src/math/interval -I../src/util
math/realclosure/mpz_matrix.h.node: ../src/math/realclosure/mpz_matrix.h util/mpz.h.node
	@echo done > math/realclosure/mpz_matrix.h.node
math/realclosure/mpz_matrix$(OBJ_EXT): ../src/math/realclosure/mpz_matrix.cpp math/realclosure/mpz_matrix.h.node util/buffer.h.node
	@echo src/math/realclosure/mpz_matrix.cpp
	@$(CXX) $(CXXFLAGS) $(includes_6) $(CXX_OUT_FLAG)math/realclosure/mpz_matrix$(OBJ_EXT) ../src/math/realclosure/mpz_matrix.cpp
math/realclosure/realclosure.h.node: ../src/math/realclosure/realclosure.h util/mpq.h.node util/params.h.node util/scoped_numeral.h.node util/scoped_numeral_vector.h.node math/interval/interval.h.node util/z3_exception.h.node
	@echo done > math/realclosure/realclosure.h.node
math/realclosure/rcf_params.hpp.node: ../src/math/realclosure/rcf_params.hpp util/params.h.node util/gparams.h.node
	@echo done > math/realclosure/rcf_params.hpp.node
util/array.h.node: ../src/util/array.h
	@echo done > util/array.h.node
math/realclosure/realclosure$(OBJ_EXT): ../src/math/realclosure/realclosure.cpp math/realclosure/realclosure.h.node math/realclosure/rcf_params.hpp.node util/array.h.node util/mpbq.h.node math/realclosure/mpz_matrix.h.node math/interval/interval_def.h.node util/obj_ref.h.node util/ref_vector.h.node util/ref_buffer.h.node util/cooperate.h.node
	@echo src/math/realclosure/realclosure.cpp
	@$(CXX) $(CXXFLAGS) $(includes_6) $(CXX_OUT_FLAG)math/realclosure/realclosure$(OBJ_EXT) ../src/math/realclosure/realclosure.cpp
math/realclosure/realclosure$(LIB_EXT): math/realclosure/mpz_matrix$(OBJ_EXT) math/realclosure/realclosure$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)math/realclosure/realclosure$(LIB_EXT) math/realclosure/mpz_matrix$(OBJ_EXT) math/realclosure/realclosure$(OBJ_EXT)
realclosure: math/realclosure/realclosure$(LIB_EXT)

includes_7 = -I../src/math/interval -I../src/util
math/subpaving/subpaving_types.h.node: ../src/math/subpaving/subpaving_types.h
	@echo done > math/subpaving/subpaving_types.h.node
math/subpaving/subpaving.h.node: ../src/math/subpaving/subpaving.h util/mpq.h.node math/subpaving/subpaving_types.h.node util/params.h.node util/statistics.h.node
	@echo done > math/subpaving/subpaving.h.node
util/parray.h.node: ../src/util/parray.h util/vector.h.node util/trace.h.node
	@echo done > util/parray.h.node
math/subpaving/subpaving_t.h.node: ../src/math/subpaving/subpaving_t.h util/tptr.h.node util/small_object_allocator.h.node util/chashtable.h.node util/parray.h.node math/interval/interval.h.node util/scoped_numeral_vector.h.node math/subpaving/subpaving_types.h.node util/params.h.node util/statistics.h.node util/lbool.h.node util/id_gen.h.node
	@echo done > math/subpaving/subpaving_t.h.node
math/subpaving/subpaving_mpq.h.node: ../src/math/subpaving/subpaving_mpq.h math/subpaving/subpaving_t.h.node util/mpq.h.node
	@echo done > math/subpaving/subpaving_mpq.h.node
util/f2n.h.node: ../src/util/f2n.h util/mpf.h.node
	@echo done > util/f2n.h.node
math/subpaving/subpaving_mpf.h.node: ../src/math/subpaving/subpaving_mpf.h math/subpaving/subpaving_t.h.node util/mpf.h.node util/f2n.h.node
	@echo done > math/subpaving/subpaving_mpf.h.node
math/subpaving/subpaving_hwf.h.node: ../src/math/subpaving/subpaving_hwf.h math/subpaving/subpaving_t.h.node util/f2n.h.node util/hwf.h.node
	@echo done > math/subpaving/subpaving_hwf.h.node
math/subpaving/subpaving_mpff.h.node: ../src/math/subpaving/subpaving_mpff.h math/subpaving/subpaving_t.h.node util/mpff.h.node
	@echo done > math/subpaving/subpaving_mpff.h.node
math/subpaving/subpaving_mpfx.h.node: ../src/math/subpaving/subpaving_mpfx.h math/subpaving/subpaving_t.h.node util/mpfx.h.node
	@echo done > math/subpaving/subpaving_mpfx.h.node
math/subpaving/subpaving$(OBJ_EXT): ../src/math/subpaving/subpaving.cpp math/subpaving/subpaving.h.node math/subpaving/subpaving_types.h.node math/subpaving/subpaving_mpq.h.node math/subpaving/subpaving_mpf.h.node math/subpaving/subpaving_hwf.h.node math/subpaving/subpaving_mpff.h.node math/subpaving/subpaving_mpfx.h.node
	@echo src/math/subpaving/subpaving.cpp
	@$(CXX) $(CXXFLAGS) $(includes_7) $(CXX_OUT_FLAG)math/subpaving/subpaving$(OBJ_EXT) ../src/math/subpaving/subpaving.cpp
math/subpaving/subpaving_t_def.h.node: ../src/math/subpaving/subpaving_t_def.h math/subpaving/subpaving_t.h.node math/interval/interval_def.h.node util/buffer.h.node util/cooperate.h.node util/z3_exception.h.node util/common_msgs.h.node
	@echo done > math/subpaving/subpaving_t_def.h.node
math/subpaving/subpaving_hwf$(OBJ_EXT): ../src/math/subpaving/subpaving_hwf.cpp math/subpaving/subpaving_hwf.h.node math/subpaving/subpaving_t_def.h.node
	@echo src/math/subpaving/subpaving_hwf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_7) $(CXX_OUT_FLAG)math/subpaving/subpaving_hwf$(OBJ_EXT) ../src/math/subpaving/subpaving_hwf.cpp
math/subpaving/subpaving_mpf$(OBJ_EXT): ../src/math/subpaving/subpaving_mpf.cpp math/subpaving/subpaving_mpf.h.node math/subpaving/subpaving_t_def.h.node
	@echo src/math/subpaving/subpaving_mpf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_7) $(CXX_OUT_FLAG)math/subpaving/subpaving_mpf$(OBJ_EXT) ../src/math/subpaving/subpaving_mpf.cpp
math/subpaving/subpaving_mpff$(OBJ_EXT): ../src/math/subpaving/subpaving_mpff.cpp math/subpaving/subpaving_mpff.h.node math/subpaving/subpaving_t_def.h.node
	@echo src/math/subpaving/subpaving_mpff.cpp
	@$(CXX) $(CXXFLAGS) $(includes_7) $(CXX_OUT_FLAG)math/subpaving/subpaving_mpff$(OBJ_EXT) ../src/math/subpaving/subpaving_mpff.cpp
math/subpaving/subpaving_mpfx$(OBJ_EXT): ../src/math/subpaving/subpaving_mpfx.cpp math/subpaving/subpaving_mpfx.h.node math/subpaving/subpaving_t_def.h.node
	@echo src/math/subpaving/subpaving_mpfx.cpp
	@$(CXX) $(CXXFLAGS) $(includes_7) $(CXX_OUT_FLAG)math/subpaving/subpaving_mpfx$(OBJ_EXT) ../src/math/subpaving/subpaving_mpfx.cpp
math/subpaving/subpaving_mpq$(OBJ_EXT): ../src/math/subpaving/subpaving_mpq.cpp math/subpaving/subpaving_mpq.h.node math/subpaving/subpaving_t_def.h.node
	@echo src/math/subpaving/subpaving_mpq.cpp
	@$(CXX) $(CXXFLAGS) $(includes_7) $(CXX_OUT_FLAG)math/subpaving/subpaving_mpq$(OBJ_EXT) ../src/math/subpaving/subpaving_mpq.cpp
math/subpaving/subpaving$(LIB_EXT): math/subpaving/subpaving$(OBJ_EXT) math/subpaving/subpaving_hwf$(OBJ_EXT) math/subpaving/subpaving_mpf$(OBJ_EXT) math/subpaving/subpaving_mpff$(OBJ_EXT) math/subpaving/subpaving_mpfx$(OBJ_EXT) math/subpaving/subpaving_mpq$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)math/subpaving/subpaving$(LIB_EXT) math/subpaving/subpaving$(OBJ_EXT) math/subpaving/subpaving_hwf$(OBJ_EXT) math/subpaving/subpaving_mpf$(OBJ_EXT) math/subpaving/subpaving_mpff$(OBJ_EXT) math/subpaving/subpaving_mpfx$(OBJ_EXT) math/subpaving/subpaving_mpq$(OBJ_EXT)
subpaving: math/subpaving/subpaving$(LIB_EXT)

includes_8 = -I../src/util -I../src/math/polynomial
util/optional.h.node: ../src/util/optional.h
	@echo done > util/optional.h.node
util/symbol_table.h.node: ../src/util/symbol_table.h util/vector.h.node util/hashtable.h.node util/hash.h.node util/symbol.h.node
	@echo done > util/symbol_table.h.node
util/obj_mark.h.node: ../src/util/obj_mark.h util/bit_vector.h.node
	@echo done > util/obj_mark.h.node
util/obj_hashtable.h.node: ../src/util/obj_hashtable.h util/hash.h.node util/hashtable.h.node
	@echo done > util/obj_hashtable.h.node
ast/ast.h.node: ../src/ast/ast.h util/vector.h.node util/hashtable.h.node util/buffer.h.node util/symbol.h.node util/rational.h.node util/hash.h.node util/optional.h.node util/trace.h.node util/bit_vector.h.node util/symbol_table.h.node util/tptr.h.node util/memory_manager.h.node util/small_object_allocator.h.node util/obj_ref.h.node util/ref_vector.h.node util/ref_buffer.h.node util/obj_mark.h.node util/obj_hashtable.h.node util/id_gen.h.node util/map.h.node util/parray.h.node util/dictionary.h.node util/chashtable.h.node util/z3_exception.h.node util/dependency.h.node
	@echo done > ast/ast.h.node
ast/act_cache.h.node: ../src/ast/act_cache.h ast/ast.h.node util/obj_hashtable.h.node util/chashtable.h.node
	@echo done > ast/act_cache.h.node
ast/act_cache$(OBJ_EXT): ../src/ast/act_cache.cpp ast/act_cache.h.node
	@echo src/ast/act_cache.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/act_cache$(OBJ_EXT) ../src/ast/act_cache.cpp
ast/arith_decl_plugin.h.node: ../src/ast/arith_decl_plugin.h ast/ast.h.node
	@echo done > ast/arith_decl_plugin.h.node
ast/format.h.node: ../src/ast/format.h ast/ast.h.node
	@echo done > ast/format.h.node
ast/bv_decl_plugin.h.node: ../src/ast/bv_decl_plugin.h ast/ast.h.node
	@echo done > ast/bv_decl_plugin.h.node
ast/array_decl_plugin.h.node: ../src/ast/array_decl_plugin.h ast/ast.h.node
	@echo done > ast/array_decl_plugin.h.node
ast/float_decl_plugin.h.node: ../src/ast/float_decl_plugin.h ast/ast.h.node util/id_gen.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node util/mpf.h.node
	@echo done > ast/float_decl_plugin.h.node
ast/dl_decl_plugin.h.node: ../src/ast/dl_decl_plugin.h ast/ast.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node
	@echo done > ast/dl_decl_plugin.h.node
ast/ast_smt2_pp.h.node: ../src/ast/ast_smt2_pp.h ast/format.h.node util/params.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node ast/float_decl_plugin.h.node ast/dl_decl_plugin.h.node util/smt2_util.h.node
	@echo done > ast/ast_smt2_pp.h.node
ast/arith_decl_plugin$(OBJ_EXT): ../src/ast/arith_decl_plugin.cpp ast/arith_decl_plugin.h.node util/warning.h.node math/polynomial/algebraic_numbers.h.node util/id_gen.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/arith_decl_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/arith_decl_plugin$(OBJ_EXT) ../src/ast/arith_decl_plugin.cpp
ast/ast_pp.h.node: ../src/ast/ast_pp.h ast/ast_smt2_pp.h.node
	@echo done > ast/ast_pp.h.node
ast/ast_ll_pp.h.node: ../src/ast/ast_ll_pp.h ast/ast.h.node
	@echo done > ast/ast_ll_pp.h.node
ast/array_decl_plugin$(OBJ_EXT): ../src/ast/array_decl_plugin.cpp ast/array_decl_plugin.h.node util/warning.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node
	@echo src/ast/array_decl_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/array_decl_plugin$(OBJ_EXT) ../src/ast/array_decl_plugin.cpp
ast/ast_util.h.node: ../src/ast/ast_util.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > ast/ast_util.h.node
ast/ast$(OBJ_EXT): ../src/ast/ast.cpp ast/ast.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node util/buffer.h.node util/warning.h.node util/string_buffer.h.node ast/ast_util.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/ast.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/ast$(OBJ_EXT) ../src/ast/ast.cpp
ast/for_each_ast.h.node: ../src/ast/for_each_ast.h ast/ast.h.node util/trace.h.node util/map.h.node
	@echo done > ast/for_each_ast.h.node
ast/ast_ll_pp$(OBJ_EXT): ../src/ast/ast_ll_pp.cpp ast/for_each_ast.h.node ast/arith_decl_plugin.h.node
	@echo src/ast/ast_ll_pp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/ast_ll_pp$(OBJ_EXT) ../src/ast/ast_ll_pp.cpp
ast/ast_lt$(OBJ_EXT): ../src/ast/ast_lt.cpp ast/ast.h.node
	@echo src/ast/ast_lt.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/ast_lt$(OBJ_EXT) ../src/ast/ast_lt.cpp
ast/ast_printer.h.node: ../src/ast/ast_printer.h ast/ast.h.node ast/ast_smt2_pp.h.node
	@echo done > ast/ast_printer.h.node
ast/pp.h.node: ../src/ast/pp.h ast/format.h.node util/params.h.node
	@echo done > ast/pp.h.node
ast/ast_printer$(OBJ_EXT): ../src/ast/ast_printer.cpp ast/ast_printer.h.node ast/pp.h.node
	@echo src/ast/ast_printer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/ast_printer$(OBJ_EXT) ../src/ast/ast_printer.cpp
ast/shared_occs.h.node: ../src/ast/shared_occs.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > ast/shared_occs.h.node
ast/pp_params.hpp.node: ../src/ast/pp_params.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/pp_params.hpp.node
ast/ast_smt2_pp$(OBJ_EXT): ../src/ast/ast_smt2_pp.cpp ast/ast_smt2_pp.h.node ast/shared_occs.h.node ast/pp.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node math/polynomial/algebraic_numbers.h.node ast/pp_params.hpp.node
	@echo src/ast/ast_smt2_pp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/ast_smt2_pp$(OBJ_EXT) ../src/ast/ast_smt2_pp.cpp
ast/ast_smt_pp.h.node: ../src/ast/ast_smt_pp.h ast/ast.h.node util/map.h.node
	@echo done > ast/ast_smt_pp.h.node
ast/datatype_decl_plugin.h.node: ../src/ast/datatype_decl_plugin.h ast/ast.h.node util/tptr.h.node util/buffer.h.node util/obj_hashtable.h.node
	@echo done > ast/datatype_decl_plugin.h.node
ast/decl_collector.h.node: ../src/ast/decl_collector.h ast/ast.h.node
	@echo done > ast/decl_collector.h.node
ast/ast_smt_pp$(OBJ_EXT): ../src/ast/ast_smt_pp.cpp ast/ast_smt_pp.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node ast/datatype_decl_plugin.h.node util/vector.h.node ast/for_each_ast.h.node ast/decl_collector.h.node util/smt2_util.h.node
	@echo src/ast/ast_smt_pp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/ast_smt_pp$(OBJ_EXT) ../src/ast/ast_smt_pp.cpp
ast/ast_translation.h.node: ../src/ast/ast_translation.h ast/ast.h.node
	@echo done > ast/ast_translation.h.node
ast/ast_translation$(OBJ_EXT): ../src/ast/ast_translation.cpp ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/datatype_decl_plugin.h.node ast/array_decl_plugin.h.node ast/format.h.node ast/ast_translation.h.node ast/ast_ll_pp.h.node
	@echo src/ast/ast_translation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/ast_translation$(OBJ_EXT) ../src/ast/ast_translation.cpp
ast/ast_util$(OBJ_EXT): ../src/ast/ast_util.cpp ast/ast_util.h.node
	@echo src/ast/ast_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/ast_util$(OBJ_EXT) ../src/ast/ast_util.cpp
ast/bv_decl_plugin$(OBJ_EXT): ../src/ast/bv_decl_plugin.cpp ast/bv_decl_plugin.h.node ast/arith_decl_plugin.h.node util/warning.h.node ast/ast_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/bv_decl_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/bv_decl_plugin$(OBJ_EXT) ../src/ast/bv_decl_plugin.cpp
ast/datatype_decl_plugin$(OBJ_EXT): ../src/ast/datatype_decl_plugin.cpp ast/datatype_decl_plugin.h.node util/warning.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/datatype_decl_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/datatype_decl_plugin$(OBJ_EXT) ../src/ast/datatype_decl_plugin.cpp
ast/decl_collector$(OBJ_EXT): ../src/ast/decl_collector.cpp ast/decl_collector.h.node
	@echo src/ast/decl_collector.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/decl_collector$(OBJ_EXT) ../src/ast/decl_collector.cpp
ast/reg_decl_plugins.h.node: ../src/ast/reg_decl_plugins.h
	@echo done > ast/reg_decl_plugins.h.node
ast/dl_decl_plugin$(OBJ_EXT): ../src/ast/dl_decl_plugin.cpp ast/ast_pp.h.node ast/array_decl_plugin.h.node ast/datatype_decl_plugin.h.node ast/dl_decl_plugin.h.node util/warning.h.node ast/reg_decl_plugins.h.node
	@echo src/ast/dl_decl_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/dl_decl_plugin$(OBJ_EXT) ../src/ast/dl_decl_plugin.cpp
ast/expr2polynomial.h.node: ../src/ast/expr2polynomial.h ast/ast.h.node math/polynomial/polynomial.h.node
	@echo done > ast/expr2polynomial.h.node
ast/expr2var.h.node: ../src/ast/expr2var.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > ast/expr2var.h.node
ast/expr2polynomial$(OBJ_EXT): ../src/ast/expr2polynomial.cpp ast/expr2polynomial.h.node ast/expr2var.h.node ast/arith_decl_plugin.h.node ast/ast_smt2_pp.h.node util/z3_exception.h.node util/cooperate.h.node
	@echo src/ast/expr2polynomial.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/expr2polynomial$(OBJ_EXT) ../src/ast/expr2polynomial.cpp
util/ref_util.h.node: ../src/util/ref_util.h
	@echo done > util/ref_util.h.node
ast/expr2var$(OBJ_EXT): ../src/ast/expr2var.cpp ast/expr2var.h.node ast/ast_smt2_pp.h.node util/ref_util.h.node
	@echo src/ast/expr2var.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/expr2var$(OBJ_EXT) ../src/ast/expr2var.cpp
ast/expr_abstract.h.node: ../src/ast/expr_abstract.h ast/ast.h.node
	@echo done > ast/expr_abstract.h.node
ast/expr_abstract$(OBJ_EXT): ../src/ast/expr_abstract.cpp ast/expr_abstract.h.node util/map.h.node
	@echo src/ast/expr_abstract.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/expr_abstract$(OBJ_EXT) ../src/ast/expr_abstract.cpp
ast/expr_map.h.node: ../src/ast/expr_map.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > ast/expr_map.h.node
ast/expr_functors.h.node: ../src/ast/expr_functors.h ast/ast.h.node ast/expr_map.h.node
	@echo done > ast/expr_functors.h.node
ast/expr_functors$(OBJ_EXT): ../src/ast/expr_functors.cpp ast/expr_functors.h.node
	@echo src/ast/expr_functors.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/expr_functors$(OBJ_EXT) ../src/ast/expr_functors.cpp
util/dec_ref_util.h.node: ../src/util/dec_ref_util.h
	@echo done > util/dec_ref_util.h.node
ast/expr_map$(OBJ_EXT): ../src/ast/expr_map.cpp ast/expr_map.h.node util/dec_ref_util.h.node
	@echo src/ast/expr_map.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/expr_map$(OBJ_EXT) ../src/ast/expr_map.cpp
ast/for_each_expr.h.node: ../src/ast/for_each_expr.h ast/ast.h.node util/trace.h.node
	@echo done > ast/for_each_expr.h.node
ast/expr_stat.h.node: ../src/ast/expr_stat.h
	@echo done > ast/expr_stat.h.node
ast/expr_stat$(OBJ_EXT): ../src/ast/expr_stat.cpp ast/for_each_expr.h.node ast/expr_stat.h.node
	@echo src/ast/expr_stat.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/expr_stat$(OBJ_EXT) ../src/ast/expr_stat.cpp
ast/expr_substitution.h.node: ../src/ast/expr_substitution.h ast/ast.h.node
	@echo done > ast/expr_substitution.h.node
ast/expr_substitution$(OBJ_EXT): ../src/ast/expr_substitution.cpp ast/expr_substitution.h.node util/ref_util.h.node
	@echo src/ast/expr_substitution.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/expr_substitution$(OBJ_EXT) ../src/ast/expr_substitution.cpp
ast/float_decl_plugin$(OBJ_EXT): ../src/ast/float_decl_plugin.cpp ast/float_decl_plugin.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node
	@echo src/ast/float_decl_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/float_decl_plugin$(OBJ_EXT) ../src/ast/float_decl_plugin.cpp
ast/for_each_ast$(OBJ_EXT): ../src/ast/for_each_ast.cpp ast/for_each_ast.h.node
	@echo src/ast/for_each_ast.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/for_each_ast$(OBJ_EXT) ../src/ast/for_each_ast.cpp
ast/for_each_expr$(OBJ_EXT): ../src/ast/for_each_expr.cpp ast/for_each_expr.h.node
	@echo src/ast/for_each_expr.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/for_each_expr$(OBJ_EXT) ../src/ast/for_each_expr.cpp
ast/recurse_expr.h.node: ../src/ast/recurse_expr.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > ast/recurse_expr.h.node
ast/recurse_expr_def.h.node: ../src/ast/recurse_expr_def.h ast/recurse_expr.h.node
	@echo done > ast/recurse_expr_def.h.node
ast/format$(OBJ_EXT): ../src/ast/format.cpp ast/format.h.node ast/recurse_expr_def.h.node
	@echo src/ast/format.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/format$(OBJ_EXT) ../src/ast/format.cpp
ast/func_decl_dependencies.h.node: ../src/ast/func_decl_dependencies.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > ast/func_decl_dependencies.h.node
ast/func_decl_dependencies$(OBJ_EXT): ../src/ast/func_decl_dependencies.cpp ast/func_decl_dependencies.h.node ast/for_each_expr.h.node ast/ast_util.h.node
	@echo src/ast/func_decl_dependencies.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/func_decl_dependencies$(OBJ_EXT) ../src/ast/func_decl_dependencies.cpp
ast/expr_delta_pair.h.node: ../src/ast/expr_delta_pair.h
	@echo done > ast/expr_delta_pair.h.node
ast/has_free_vars$(OBJ_EXT): ../src/ast/has_free_vars.cpp ast/ast.h.node ast/expr_delta_pair.h.node util/hashtable.h.node
	@echo src/ast/has_free_vars.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/has_free_vars$(OBJ_EXT) ../src/ast/has_free_vars.cpp
ast/macro_substitution.h.node: ../src/ast/macro_substitution.h ast/ast.h.node
	@echo done > ast/macro_substitution.h.node
ast/macro_substitution$(OBJ_EXT): ../src/ast/macro_substitution.cpp ast/macro_substitution.h.node util/ref_util.h.node
	@echo src/ast/macro_substitution.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/macro_substitution$(OBJ_EXT) ../src/ast/macro_substitution.cpp
ast/num_occurs.h.node: ../src/ast/num_occurs.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > ast/num_occurs.h.node
ast/num_occurs$(OBJ_EXT): ../src/ast/num_occurs.cpp ast/num_occurs.h.node
	@echo src/ast/num_occurs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/num_occurs$(OBJ_EXT) ../src/ast/num_occurs.cpp
ast/occurs.h.node: ../src/ast/occurs.h
	@echo done > ast/occurs.h.node
ast/occurs$(OBJ_EXT): ../src/ast/occurs.cpp ast/occurs.h.node ast/for_each_expr.h.node
	@echo src/ast/occurs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/occurs$(OBJ_EXT) ../src/ast/occurs.cpp
ast/pp$(OBJ_EXT): ../src/ast/pp.cpp ast/pp.h.node ast/pp_params.hpp.node
	@echo src/ast/pp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/pp$(OBJ_EXT) ../src/ast/pp.cpp
ast/seq_decl_plugin.h.node: ../src/ast/seq_decl_plugin.h ast/ast.h.node
	@echo done > ast/seq_decl_plugin.h.node
ast/reg_decl_plugins$(OBJ_EXT): ../src/ast/reg_decl_plugins.cpp ast/ast.h.node ast/arith_decl_plugin.h.node ast/array_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/datatype_decl_plugin.h.node ast/dl_decl_plugin.h.node ast/seq_decl_plugin.h.node ast/float_decl_plugin.h.node
	@echo src/ast/reg_decl_plugins.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/reg_decl_plugins$(OBJ_EXT) ../src/ast/reg_decl_plugins.cpp
ast/seq_decl_plugin$(OBJ_EXT): ../src/ast/seq_decl_plugin.cpp ast/seq_decl_plugin.h.node ast/arith_decl_plugin.h.node ast/array_decl_plugin.h.node
	@echo src/ast/seq_decl_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/seq_decl_plugin$(OBJ_EXT) ../src/ast/seq_decl_plugin.cpp
ast/shared_occs$(OBJ_EXT): ../src/ast/shared_occs.cpp ast/shared_occs.h.node ast/ast_smt2_pp.h.node util/ref_util.h.node
	@echo src/ast/shared_occs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/shared_occs$(OBJ_EXT) ../src/ast/shared_occs.cpp
ast/static_features.h.node: ../src/ast/static_features.h ast/ast.h.node ast/arith_decl_plugin.h.node util/map.h.node
	@echo done > ast/static_features.h.node
ast/static_features$(OBJ_EXT): ../src/ast/static_features.cpp ast/static_features.h.node ast/ast_pp.h.node
	@echo src/ast/static_features.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/static_features$(OBJ_EXT) ../src/ast/static_features.cpp
ast/used_vars.h.node: ../src/ast/used_vars.h ast/ast.h.node ast/expr_delta_pair.h.node
	@echo done > ast/used_vars.h.node
ast/used_vars$(OBJ_EXT): ../src/ast/used_vars.cpp ast/used_vars.h.node
	@echo src/ast/used_vars.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/used_vars$(OBJ_EXT) ../src/ast/used_vars.cpp
ast/well_sorted.h.node: ../src/ast/well_sorted.h
	@echo done > ast/well_sorted.h.node
ast/well_sorted$(OBJ_EXT): ../src/ast/well_sorted.cpp ast/for_each_expr.h.node ast/well_sorted.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node util/warning.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/well_sorted.cpp
	@$(CXX) $(CXXFLAGS) $(includes_8) $(CXX_OUT_FLAG)ast/well_sorted$(OBJ_EXT) ../src/ast/well_sorted.cpp
ast/ast$(LIB_EXT): ast/act_cache$(OBJ_EXT) ast/arith_decl_plugin$(OBJ_EXT) ast/array_decl_plugin$(OBJ_EXT) ast/ast$(OBJ_EXT) ast/ast_ll_pp$(OBJ_EXT) ast/ast_lt$(OBJ_EXT) ast/ast_printer$(OBJ_EXT) ast/ast_smt2_pp$(OBJ_EXT) ast/ast_smt_pp$(OBJ_EXT) ast/ast_translation$(OBJ_EXT) ast/ast_util$(OBJ_EXT) ast/bv_decl_plugin$(OBJ_EXT) ast/datatype_decl_plugin$(OBJ_EXT) ast/decl_collector$(OBJ_EXT) ast/dl_decl_plugin$(OBJ_EXT) ast/expr2polynomial$(OBJ_EXT) ast/expr2var$(OBJ_EXT) ast/expr_abstract$(OBJ_EXT) ast/expr_functors$(OBJ_EXT) ast/expr_map$(OBJ_EXT) ast/expr_stat$(OBJ_EXT) ast/expr_substitution$(OBJ_EXT) ast/float_decl_plugin$(OBJ_EXT) ast/for_each_ast$(OBJ_EXT) ast/for_each_expr$(OBJ_EXT) ast/format$(OBJ_EXT) ast/func_decl_dependencies$(OBJ_EXT) ast/has_free_vars$(OBJ_EXT) ast/macro_substitution$(OBJ_EXT) ast/num_occurs$(OBJ_EXT) ast/occurs$(OBJ_EXT) ast/pp$(OBJ_EXT) ast/reg_decl_plugins$(OBJ_EXT) ast/seq_decl_plugin$(OBJ_EXT) ast/shared_occs$(OBJ_EXT) ast/static_features$(OBJ_EXT) ast/used_vars$(OBJ_EXT) ast/well_sorted$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/ast$(LIB_EXT) ast/act_cache$(OBJ_EXT) ast/arith_decl_plugin$(OBJ_EXT) ast/array_decl_plugin$(OBJ_EXT) ast/ast$(OBJ_EXT) ast/ast_ll_pp$(OBJ_EXT) ast/ast_lt$(OBJ_EXT) ast/ast_printer$(OBJ_EXT) ast/ast_smt2_pp$(OBJ_EXT) ast/ast_smt_pp$(OBJ_EXT) ast/ast_translation$(OBJ_EXT) ast/ast_util$(OBJ_EXT) ast/bv_decl_plugin$(OBJ_EXT) ast/datatype_decl_plugin$(OBJ_EXT) ast/decl_collector$(OBJ_EXT) ast/dl_decl_plugin$(OBJ_EXT) ast/expr2polynomial$(OBJ_EXT) ast/expr2var$(OBJ_EXT) ast/expr_abstract$(OBJ_EXT) ast/expr_functors$(OBJ_EXT) ast/expr_map$(OBJ_EXT) ast/expr_stat$(OBJ_EXT) ast/expr_substitution$(OBJ_EXT) ast/float_decl_plugin$(OBJ_EXT) ast/for_each_ast$(OBJ_EXT) ast/for_each_expr$(OBJ_EXT) ast/format$(OBJ_EXT) ast/func_decl_dependencies$(OBJ_EXT) ast/has_free_vars$(OBJ_EXT) ast/macro_substitution$(OBJ_EXT) ast/num_occurs$(OBJ_EXT) ast/occurs$(OBJ_EXT) ast/pp$(OBJ_EXT) ast/reg_decl_plugins$(OBJ_EXT) ast/seq_decl_plugin$(OBJ_EXT) ast/shared_occs$(OBJ_EXT) ast/static_features$(OBJ_EXT) ast/used_vars$(OBJ_EXT) ast/well_sorted$(OBJ_EXT)
ast: ast/ast$(LIB_EXT)

includes_9 = -I../src/ast -I../src/util -I../src/math/polynomial
ast/rewriter/rewriter_types.h.node: ../src/ast/rewriter/rewriter_types.h util/z3_exception.h.node util/common_msgs.h.node
	@echo done > ast/rewriter/rewriter_types.h.node
ast/rewriter/poly_rewriter.h.node: ../src/ast/rewriter/poly_rewriter.h ast/ast.h.node util/obj_hashtable.h.node ast/rewriter/rewriter_types.h.node util/params.h.node
	@echo done > ast/rewriter/poly_rewriter.h.node
ast/rewriter/arith_rewriter.h.node: ../src/ast/rewriter/arith_rewriter.h ast/rewriter/poly_rewriter.h.node ast/arith_decl_plugin.h.node
	@echo done > ast/rewriter/arith_rewriter.h.node
ast/rewriter/arith_rewriter_params.hpp.node: ../src/ast/rewriter/arith_rewriter_params.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/rewriter/arith_rewriter_params.hpp.node
ast/rewriter/poly_rewriter_params.hpp.node: ../src/ast/rewriter/poly_rewriter_params.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/rewriter/poly_rewriter_params.hpp.node
ast/ast_lt.h.node: ../src/ast/ast_lt.h
	@echo done > ast/ast_lt.h.node
ast/rewriter/poly_rewriter_def.h.node: ../src/ast/rewriter/poly_rewriter_def.h ast/rewriter/poly_rewriter.h.node ast/rewriter/poly_rewriter_params.hpp.node ast/ast_lt.h.node ast/ast_ll_pp.h.node ast/ast_smt2_pp.h.node
	@echo done > ast/rewriter/poly_rewriter_def.h.node
ast/rewriter/arith_rewriter$(OBJ_EXT): ../src/ast/rewriter/arith_rewriter.cpp ast/rewriter/arith_rewriter.h.node ast/rewriter/arith_rewriter_params.hpp.node ast/rewriter/poly_rewriter_def.h.node math/polynomial/algebraic_numbers.h.node ast/ast_pp.h.node
	@echo src/ast/rewriter/arith_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/arith_rewriter$(OBJ_EXT) ../src/ast/rewriter/arith_rewriter.cpp
ast/rewriter/array_rewriter.h.node: ../src/ast/rewriter/array_rewriter.h ast/array_decl_plugin.h.node ast/rewriter/rewriter_types.h.node util/lbool.h.node util/params.h.node
	@echo done > ast/rewriter/array_rewriter.h.node
ast/rewriter/array_rewriter_params.hpp.node: ../src/ast/rewriter/array_rewriter_params.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/rewriter/array_rewriter_params.hpp.node
ast/rewriter/array_rewriter$(OBJ_EXT): ../src/ast/rewriter/array_rewriter.cpp ast/rewriter/array_rewriter.h.node ast/rewriter/array_rewriter_params.hpp.node ast/ast_lt.h.node ast/ast_pp.h.node
	@echo src/ast/rewriter/array_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/array_rewriter$(OBJ_EXT) ../src/ast/rewriter/array_rewriter.cpp
util/uint_set.h.node: ../src/util/uint_set.h util/util.h.node util/vector.h.node
	@echo done > util/uint_set.h.node
ast/rewriter/ast_counter.h.node: ../src/ast/rewriter/ast_counter.h ast/ast.h.node util/map.h.node util/uint_set.h.node
	@echo done > ast/rewriter/ast_counter.h.node
ast/rewriter/rewriter.h.node: ../src/ast/rewriter/rewriter.h ast/ast.h.node ast/rewriter/rewriter_types.h.node ast/act_cache.h.node
	@echo done > ast/rewriter/rewriter.h.node
ast/rewriter/var_subst.h.node: ../src/ast/rewriter/var_subst.h ast/rewriter/rewriter.h.node ast/used_vars.h.node
	@echo done > ast/rewriter/var_subst.h.node
ast/rewriter/ast_counter$(OBJ_EXT): ../src/ast/rewriter/ast_counter.cpp ast/rewriter/ast_counter.h.node ast/rewriter/var_subst.h.node
	@echo src/ast/rewriter/ast_counter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/ast_counter$(OBJ_EXT) ../src/ast/rewriter/ast_counter.cpp
ast/rewriter/bool_rewriter.h.node: ../src/ast/rewriter/bool_rewriter.h ast/ast.h.node ast/rewriter/rewriter.h.node util/params.h.node
	@echo done > ast/rewriter/bool_rewriter.h.node
ast/rewriter/bool_rewriter_params.hpp.node: ../src/ast/rewriter/bool_rewriter_params.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/rewriter/bool_rewriter_params.hpp.node
ast/rewriter/rewriter_def.h.node: ../src/ast/rewriter/rewriter_def.h ast/rewriter/rewriter.h.node ast/ast_smt2_pp.h.node
	@echo done > ast/rewriter/rewriter_def.h.node
ast/rewriter/bool_rewriter$(OBJ_EXT): ../src/ast/rewriter/bool_rewriter.cpp ast/rewriter/bool_rewriter.h.node ast/rewriter/bool_rewriter_params.hpp.node ast/rewriter/rewriter_def.h.node
	@echo src/ast/rewriter/bool_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/bool_rewriter$(OBJ_EXT) ../src/ast/rewriter/bool_rewriter.cpp
ast/rewriter/bv_rewriter.h.node: ../src/ast/rewriter/bv_rewriter.h ast/rewriter/poly_rewriter.h.node ast/bv_decl_plugin.h.node ast/arith_decl_plugin.h.node
	@echo done > ast/rewriter/bv_rewriter.h.node
ast/rewriter/bv_rewriter_params.hpp.node: ../src/ast/rewriter/bv_rewriter_params.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/rewriter/bv_rewriter_params.hpp.node
ast/rewriter/bv_rewriter$(OBJ_EXT): ../src/ast/rewriter/bv_rewriter.cpp ast/rewriter/bv_rewriter.h.node ast/rewriter/bv_rewriter_params.hpp.node ast/rewriter/poly_rewriter_def.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/rewriter/bv_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/bv_rewriter$(OBJ_EXT) ../src/ast/rewriter/bv_rewriter.cpp
ast/rewriter/datatype_rewriter.h.node: ../src/ast/rewriter/datatype_rewriter.h ast/datatype_decl_plugin.h.node ast/rewriter/rewriter_types.h.node
	@echo done > ast/rewriter/datatype_rewriter.h.node
ast/rewriter/datatype_rewriter$(OBJ_EXT): ../src/ast/rewriter/datatype_rewriter.cpp ast/rewriter/datatype_rewriter.h.node
	@echo src/ast/rewriter/datatype_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/datatype_rewriter$(OBJ_EXT) ../src/ast/rewriter/datatype_rewriter.cpp
ast/rewriter/der.h.node: ../src/ast/rewriter/der.h ast/ast.h.node ast/rewriter/var_subst.h.node
	@echo done > ast/rewriter/der.h.node
ast/rewriter/der$(OBJ_EXT): ../src/ast/rewriter/der.cpp ast/rewriter/der.h.node ast/occurs.h.node ast/for_each_expr.h.node ast/rewriter/rewriter_def.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/rewriter/der.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/der$(OBJ_EXT) ../src/ast/rewriter/der.cpp
ast/rewriter/dl_rewriter.h.node: ../src/ast/rewriter/dl_rewriter.h ast/dl_decl_plugin.h.node ast/rewriter/rewriter_types.h.node
	@echo done > ast/rewriter/dl_rewriter.h.node
ast/rewriter/dl_rewriter$(OBJ_EXT): ../src/ast/rewriter/dl_rewriter.cpp ast/rewriter/dl_rewriter.h.node
	@echo src/ast/rewriter/dl_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/dl_rewriter$(OBJ_EXT) ../src/ast/rewriter/dl_rewriter.cpp
ast/rewriter/expr_replacer.h.node: ../src/ast/rewriter/expr_replacer.h ast/ast.h.node ast/expr_substitution.h.node util/params.h.node
	@echo done > ast/rewriter/expr_replacer.h.node
ast/rewriter/th_rewriter.h.node: ../src/ast/rewriter/th_rewriter.h ast/ast.h.node ast/rewriter/rewriter_types.h.node util/params.h.node
	@echo done > ast/rewriter/th_rewriter.h.node
ast/rewriter/expr_replacer$(OBJ_EXT): ../src/ast/rewriter/expr_replacer.cpp ast/rewriter/expr_replacer.h.node ast/rewriter/rewriter_def.h.node ast/rewriter/th_rewriter.h.node util/cooperate.h.node
	@echo src/ast/rewriter/expr_replacer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/expr_replacer$(OBJ_EXT) ../src/ast/rewriter/expr_replacer.cpp
ast/rewriter/expr_safe_replace.h.node: ../src/ast/rewriter/expr_safe_replace.h ast/ast.h.node
	@echo done > ast/rewriter/expr_safe_replace.h.node
ast/rewriter/expr_safe_replace$(OBJ_EXT): ../src/ast/rewriter/expr_safe_replace.cpp ast/rewriter/expr_safe_replace.h.node ast/rewriter/rewriter.h.node
	@echo src/ast/rewriter/expr_safe_replace.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/expr_safe_replace$(OBJ_EXT) ../src/ast/rewriter/expr_safe_replace.cpp
ast/rewriter/factor_rewriter.h.node: ../src/ast/rewriter/factor_rewriter.h ast/ast.h.node ast/rewriter/rewriter.h.node ast/arith_decl_plugin.h.node
	@echo done > ast/rewriter/factor_rewriter.h.node
ast/rewriter/factor_rewriter$(OBJ_EXT): ../src/ast/rewriter/factor_rewriter.cpp ast/rewriter/factor_rewriter.h.node ast/ast_pp.h.node ast/rewriter/rewriter_def.h.node
	@echo src/ast/rewriter/factor_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/factor_rewriter$(OBJ_EXT) ../src/ast/rewriter/factor_rewriter.cpp
ast/rewriter/float_rewriter.h.node: ../src/ast/rewriter/float_rewriter.h ast/ast.h.node ast/rewriter/rewriter.h.node util/params.h.node ast/float_decl_plugin.h.node util/mpf.h.node
	@echo done > ast/rewriter/float_rewriter.h.node
ast/rewriter/float_rewriter$(OBJ_EXT): ../src/ast/rewriter/float_rewriter.cpp ast/rewriter/float_rewriter.h.node
	@echo src/ast/rewriter/float_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/float_rewriter$(OBJ_EXT) ../src/ast/rewriter/float_rewriter.cpp
ast/rewriter/mk_simplified_app.h.node: ../src/ast/rewriter/mk_simplified_app.h ast/ast.h.node util/params.h.node ast/rewriter/rewriter_types.h.node
	@echo done > ast/rewriter/mk_simplified_app.h.node
ast/rewriter/mk_simplified_app$(OBJ_EXT): ../src/ast/rewriter/mk_simplified_app.cpp ast/rewriter/mk_simplified_app.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/arith_rewriter.h.node ast/rewriter/bv_rewriter.h.node ast/rewriter/datatype_rewriter.h.node ast/rewriter/array_rewriter.h.node ast/rewriter/float_rewriter.h.node
	@echo src/ast/rewriter/mk_simplified_app.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/mk_simplified_app$(OBJ_EXT) ../src/ast/rewriter/mk_simplified_app.cpp
ast/rewriter/quant_hoist.h.node: ../src/ast/rewriter/quant_hoist.h ast/ast.h.node
	@echo done > ast/rewriter/quant_hoist.h.node
ast/rewriter/quant_hoist$(OBJ_EXT): ../src/ast/rewriter/quant_hoist.cpp ast/rewriter/quant_hoist.h.node ast/expr_functors.h.node ast/ast_smt_pp.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/var_subst.h.node ast/ast_pp.h.node ast/rewriter/ast_counter.h.node ast/rewriter/expr_safe_replace.h.node
	@echo src/ast/rewriter/quant_hoist.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/quant_hoist$(OBJ_EXT) ../src/ast/rewriter/quant_hoist.cpp
ast/rewriter/rewriter$(OBJ_EXT): ../src/ast/rewriter/rewriter.cpp ast/rewriter/rewriter_def.h.node ast/ast_ll_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/rewriter/rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/rewriter$(OBJ_EXT) ../src/ast/rewriter/rewriter.cpp
ast/rewriter/rewriter_params.hpp.node: ../src/ast/rewriter/rewriter_params.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/rewriter/rewriter_params.hpp.node
ast/rewriter/th_rewriter$(OBJ_EXT): ../src/ast/rewriter/th_rewriter.cpp ast/rewriter/th_rewriter.h.node ast/rewriter/rewriter_params.hpp.node ast/rewriter/bool_rewriter.h.node ast/rewriter/arith_rewriter.h.node ast/rewriter/bv_rewriter.h.node ast/rewriter/datatype_rewriter.h.node ast/rewriter/array_rewriter.h.node ast/rewriter/float_rewriter.h.node ast/rewriter/dl_rewriter.h.node ast/rewriter/rewriter_def.h.node ast/expr_substitution.h.node ast/ast_smt2_pp.h.node util/cooperate.h.node ast/rewriter/var_subst.h.node ast/ast_util.h.node ast/well_sorted.h.node
	@echo src/ast/rewriter/th_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/th_rewriter$(OBJ_EXT) ../src/ast/rewriter/th_rewriter.cpp
ast/rewriter/var_subst$(OBJ_EXT): ../src/ast/rewriter/var_subst.cpp ast/rewriter/var_subst.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/ast_smt2_pp.h.node ast/well_sorted.h.node ast/for_each_expr.h.node
	@echo src/ast/rewriter/var_subst.cpp
	@$(CXX) $(CXXFLAGS) $(includes_9) $(CXX_OUT_FLAG)ast/rewriter/var_subst$(OBJ_EXT) ../src/ast/rewriter/var_subst.cpp
ast/rewriter/rewriter$(LIB_EXT): ast/rewriter/arith_rewriter$(OBJ_EXT) ast/rewriter/array_rewriter$(OBJ_EXT) ast/rewriter/ast_counter$(OBJ_EXT) ast/rewriter/bool_rewriter$(OBJ_EXT) ast/rewriter/bv_rewriter$(OBJ_EXT) ast/rewriter/datatype_rewriter$(OBJ_EXT) ast/rewriter/der$(OBJ_EXT) ast/rewriter/dl_rewriter$(OBJ_EXT) ast/rewriter/expr_replacer$(OBJ_EXT) ast/rewriter/expr_safe_replace$(OBJ_EXT) ast/rewriter/factor_rewriter$(OBJ_EXT) ast/rewriter/float_rewriter$(OBJ_EXT) ast/rewriter/mk_simplified_app$(OBJ_EXT) ast/rewriter/quant_hoist$(OBJ_EXT) ast/rewriter/rewriter$(OBJ_EXT) ast/rewriter/th_rewriter$(OBJ_EXT) ast/rewriter/var_subst$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/rewriter/rewriter$(LIB_EXT) ast/rewriter/arith_rewriter$(OBJ_EXT) ast/rewriter/array_rewriter$(OBJ_EXT) ast/rewriter/ast_counter$(OBJ_EXT) ast/rewriter/bool_rewriter$(OBJ_EXT) ast/rewriter/bv_rewriter$(OBJ_EXT) ast/rewriter/datatype_rewriter$(OBJ_EXT) ast/rewriter/der$(OBJ_EXT) ast/rewriter/dl_rewriter$(OBJ_EXT) ast/rewriter/expr_replacer$(OBJ_EXT) ast/rewriter/expr_safe_replace$(OBJ_EXT) ast/rewriter/factor_rewriter$(OBJ_EXT) ast/rewriter/float_rewriter$(OBJ_EXT) ast/rewriter/mk_simplified_app$(OBJ_EXT) ast/rewriter/quant_hoist$(OBJ_EXT) ast/rewriter/rewriter$(OBJ_EXT) ast/rewriter/th_rewriter$(OBJ_EXT) ast/rewriter/var_subst$(OBJ_EXT)
rewriter: ast/rewriter/rewriter$(LIB_EXT)

includes_10 = -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial
ast/normal_forms/defined_names.h.node: ../src/ast/normal_forms/defined_names.h ast/ast.h.node
	@echo done > ast/normal_forms/defined_names.h.node
ast/normal_forms/defined_names$(OBJ_EXT): ../src/ast/normal_forms/defined_names.cpp ast/normal_forms/defined_names.h.node util/obj_hashtable.h.node ast/used_vars.h.node ast/rewriter/var_subst.h.node ast/ast_smt2_pp.h.node ast/ast_pp.h.node
	@echo src/ast/normal_forms/defined_names.cpp
	@$(CXX) $(CXXFLAGS) $(includes_10) $(CXX_OUT_FLAG)ast/normal_forms/defined_names$(OBJ_EXT) ../src/ast/normal_forms/defined_names.cpp
ast/normal_forms/name_exprs.h.node: ../src/ast/normal_forms/name_exprs.h ast/ast.h.node ast/normal_forms/defined_names.h.node
	@echo done > ast/normal_forms/name_exprs.h.node
ast/normal_forms/name_exprs$(OBJ_EXT): ../src/ast/normal_forms/name_exprs.cpp ast/normal_forms/name_exprs.h.node ast/rewriter/rewriter_def.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/normal_forms/name_exprs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_10) $(CXX_OUT_FLAG)ast/normal_forms/name_exprs$(OBJ_EXT) ../src/ast/normal_forms/name_exprs.cpp
ast/normal_forms/nnf.h.node: ../src/ast/normal_forms/nnf.h ast/ast.h.node util/params.h.node ast/normal_forms/defined_names.h.node
	@echo done > ast/normal_forms/nnf.h.node
ast/normal_forms/nnf_params.hpp.node: ../src/ast/normal_forms/nnf_params.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/normal_forms/nnf_params.hpp.node
ast/normal_forms/nnf$(OBJ_EXT): ../src/ast/normal_forms/nnf.cpp ast/normal_forms/nnf.h.node ast/normal_forms/nnf_params.hpp.node util/warning.h.node ast/used_vars.h.node ast/well_sorted.h.node ast/rewriter/var_subst.h.node ast/normal_forms/name_exprs.h.node ast/act_cache.h.node util/cooperate.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/normal_forms/nnf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_10) $(CXX_OUT_FLAG)ast/normal_forms/nnf$(OBJ_EXT) ../src/ast/normal_forms/nnf.cpp
ast/normal_forms/pull_quant.h.node: ../src/ast/normal_forms/pull_quant.h ast/ast.h.node
	@echo done > ast/normal_forms/pull_quant.h.node
ast/normal_forms/pull_quant$(OBJ_EXT): ../src/ast/normal_forms/pull_quant.cpp ast/normal_forms/pull_quant.h.node ast/rewriter/var_subst.h.node ast/rewriter/rewriter_def.h.node ast/ast_pp.h.node
	@echo src/ast/normal_forms/pull_quant.cpp
	@$(CXX) $(CXXFLAGS) $(includes_10) $(CXX_OUT_FLAG)ast/normal_forms/pull_quant$(OBJ_EXT) ../src/ast/normal_forms/pull_quant.cpp
ast/normal_forms/normal_forms$(LIB_EXT): ast/normal_forms/defined_names$(OBJ_EXT) ast/normal_forms/name_exprs$(OBJ_EXT) ast/normal_forms/nnf$(OBJ_EXT) ast/normal_forms/pull_quant$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/normal_forms/normal_forms$(LIB_EXT) ast/normal_forms/defined_names$(OBJ_EXT) ast/normal_forms/name_exprs$(OBJ_EXT) ast/normal_forms/nnf$(OBJ_EXT) ast/normal_forms/pull_quant$(OBJ_EXT)
normal_forms: ast/normal_forms/normal_forms$(LIB_EXT)

includes_11 = -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial
model/func_interp.h.node: ../src/model/func_interp.h ast/ast.h.node ast/ast_translation.h.node
	@echo done > model/func_interp.h.node
model/func_interp$(OBJ_EXT): ../src/model/func_interp.cpp model/func_interp.h.node ast/rewriter/var_subst.h.node util/obj_hashtable.h.node ast/ast_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/model/func_interp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_11) $(CXX_OUT_FLAG)model/func_interp$(OBJ_EXT) ../src/model/func_interp.cpp
model/model_core.h.node: ../src/model/model_core.h ast/ast.h.node util/obj_hashtable.h.node model/func_interp.h.node
	@echo done > model/model_core.h.node
util/ref.h.node: ../src/util/ref.h
	@echo done > util/ref.h.node
model/model.h.node: ../src/model/model.h model/model_core.h.node util/ref.h.node ast/ast_translation.h.node
	@echo done > model/model.h.node
ast/used_symbols.h.node: ../src/ast/used_symbols.h ast/ast.h.node util/hashtable.h.node util/obj_hashtable.h.node
	@echo done > ast/used_symbols.h.node
model/model_evaluator.h.node: ../src/model/model_evaluator.h ast/ast.h.node ast/rewriter/rewriter_types.h.node util/params.h.node
	@echo done > model/model_evaluator.h.node
model/model$(OBJ_EXT): ../src/model/model.cpp model/model.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/rewriter/var_subst.h.node ast/array_decl_plugin.h.node ast/well_sorted.h.node ast/used_symbols.h.node model/model_evaluator.h.node
	@echo src/model/model.cpp
	@$(CXX) $(CXXFLAGS) $(includes_11) $(CXX_OUT_FLAG)model/model$(OBJ_EXT) ../src/model/model.cpp
model/model2expr.h.node: ../src/model/model2expr.h model/model.h.node
	@echo done > model/model2expr.h.node
model/model2expr$(OBJ_EXT): ../src/model/model2expr.cpp model/model2expr.h.node ast/for_each_ast.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/var_subst.h.node
	@echo src/model/model2expr.cpp
	@$(CXX) $(CXXFLAGS) $(includes_11) $(CXX_OUT_FLAG)model/model2expr$(OBJ_EXT) ../src/model/model2expr.cpp
model/model_core$(OBJ_EXT): ../src/model/model_core.cpp model/model_core.h.node
	@echo src/model/model_core.cpp
	@$(CXX) $(CXXFLAGS) $(includes_11) $(CXX_OUT_FLAG)model/model_core$(OBJ_EXT) ../src/model/model_core.cpp
model/model_evaluator_params.hpp.node: ../src/model/model_evaluator_params.hpp util/params.h.node util/gparams.h.node
	@echo done > model/model_evaluator_params.hpp.node
model/model_evaluator$(OBJ_EXT): ../src/model/model_evaluator.cpp model/model.h.node model/model_evaluator_params.hpp.node ast/rewriter/rewriter_types.h.node model/model_evaluator.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/arith_rewriter.h.node ast/rewriter/bv_rewriter.h.node ast/rewriter/datatype_rewriter.h.node ast/rewriter/array_rewriter.h.node ast/rewriter/float_rewriter.h.node ast/rewriter/rewriter_def.h.node util/cooperate.h.node
	@echo src/model/model_evaluator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_11) $(CXX_OUT_FLAG)model/model_evaluator$(OBJ_EXT) ../src/model/model_evaluator.cpp
model/model_pp.h.node: ../src/model/model_pp.h
	@echo done > model/model_pp.h.node
model/model_pp$(OBJ_EXT): ../src/model/model_pp.cpp model/model_pp.h.node model/model_core.h.node ast/ast_pp.h.node ast/ast_smt2_pp.h.node ast/used_symbols.h.node ast/pp.h.node
	@echo src/model/model_pp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_11) $(CXX_OUT_FLAG)model/model_pp$(OBJ_EXT) ../src/model/model_pp.cpp
model/model_smt2_pp.h.node: ../src/model/model_smt2_pp.h ast/ast_printer.h.node model/model_core.h.node
	@echo done > model/model_smt2_pp.h.node
model/model_smt2_pp$(OBJ_EXT): ../src/model/model_smt2_pp.cpp model/model_smt2_pp.h.node ast/ast_smt2_pp.h.node ast/func_decl_dependencies.h.node ast/pp.h.node
	@echo src/model/model_smt2_pp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_11) $(CXX_OUT_FLAG)model/model_smt2_pp$(OBJ_EXT) ../src/model/model_smt2_pp.cpp
model/model_v2_pp.h.node: ../src/model/model_v2_pp.h
	@echo done > model/model_v2_pp.h.node
model/model_v2_pp$(OBJ_EXT): ../src/model/model_v2_pp.cpp model/model_v2_pp.h.node model/model_core.h.node ast/ast_pp.h.node
	@echo src/model/model_v2_pp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_11) $(CXX_OUT_FLAG)model/model_v2_pp$(OBJ_EXT) ../src/model/model_v2_pp.cpp
model/model$(LIB_EXT): model/func_interp$(OBJ_EXT) model/model$(OBJ_EXT) model/model2expr$(OBJ_EXT) model/model_core$(OBJ_EXT) model/model_evaluator$(OBJ_EXT) model/model_pp$(OBJ_EXT) model/model_smt2_pp$(OBJ_EXT) model/model_v2_pp$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)model/model$(LIB_EXT) model/func_interp$(OBJ_EXT) model/model$(OBJ_EXT) model/model2expr$(OBJ_EXT) model/model_core$(OBJ_EXT) model/model_evaluator$(OBJ_EXT) model/model_pp$(OBJ_EXT) model/model_smt2_pp$(OBJ_EXT) model/model_v2_pp$(OBJ_EXT)
model: model/model$(LIB_EXT)

includes_12 = -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter
tactic/converter.h.node: ../src/tactic/converter.h util/vector.h.node util/ref.h.node ast/ast_translation.h.node
	@echo done > tactic/converter.h.node
tactic/proof_converter.h.node: ../src/tactic/proof_converter.h ast/ast.h.node tactic/converter.h.node util/ref.h.node
	@echo done > tactic/proof_converter.h.node
tactic/replace_proof_converter.h.node: ../src/tactic/replace_proof_converter.h tactic/proof_converter.h.node
	@echo done > tactic/replace_proof_converter.h.node
tactic/equiv_proof_converter.h.node: ../src/tactic/equiv_proof_converter.h tactic/replace_proof_converter.h.node
	@echo done > tactic/equiv_proof_converter.h.node
ast/scoped_proof.h.node: ../src/ast/scoped_proof.h ast/ast.h.node
	@echo done > ast/scoped_proof.h.node
tactic/equiv_proof_converter$(OBJ_EXT): ../src/tactic/equiv_proof_converter.cpp tactic/equiv_proof_converter.h.node ast/ast_pp.h.node ast/scoped_proof.h.node
	@echo src/tactic/equiv_proof_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/equiv_proof_converter$(OBJ_EXT) ../src/tactic/equiv_proof_converter.cpp
tactic/model_converter.h.node: ../src/tactic/model_converter.h model/model.h.node tactic/converter.h.node util/ref.h.node
	@echo done > tactic/model_converter.h.node
tactic/extension_model_converter.h.node: ../src/tactic/extension_model_converter.h ast/ast.h.node tactic/model_converter.h.node
	@echo done > tactic/extension_model_converter.h.node
tactic/extension_model_converter$(OBJ_EXT): ../src/tactic/extension_model_converter.cpp tactic/extension_model_converter.h.node model/model_evaluator.h.node ast/ast_smt2_pp.h.node model/model_v2_pp.h.node ast/ast_pp.h.node
	@echo src/tactic/extension_model_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/extension_model_converter$(OBJ_EXT) ../src/tactic/extension_model_converter.cpp
tactic/filter_model_converter.h.node: ../src/tactic/filter_model_converter.h tactic/model_converter.h.node
	@echo done > tactic/filter_model_converter.h.node
tactic/filter_model_converter$(OBJ_EXT): ../src/tactic/filter_model_converter.cpp tactic/filter_model_converter.h.node model/model_v2_pp.h.node
	@echo src/tactic/filter_model_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/filter_model_converter$(OBJ_EXT) ../src/tactic/filter_model_converter.cpp
tactic/goal.h.node: ../src/tactic/goal.h ast/ast.h.node ast/ast_translation.h.node ast/ast_printer.h.node ast/for_each_expr.h.node util/ref.h.node util/ref_vector.h.node util/ref_buffer.h.node
	@echo done > tactic/goal.h.node
tactic/goal$(OBJ_EXT): ../src/tactic/goal.cpp tactic/goal.h.node ast/ast_ll_pp.h.node ast/ast_smt2_pp.h.node ast/for_each_expr.h.node ast/well_sorted.h.node
	@echo src/tactic/goal.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/goal$(OBJ_EXT) ../src/tactic/goal.cpp
tactic/goal_num_occurs.h.node: ../src/tactic/goal_num_occurs.h ast/num_occurs.h.node
	@echo done > tactic/goal_num_occurs.h.node
tactic/goal_num_occurs$(OBJ_EXT): ../src/tactic/goal_num_occurs.cpp tactic/goal_num_occurs.h.node tactic/goal.h.node
	@echo src/tactic/goal_num_occurs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/goal_num_occurs$(OBJ_EXT) ../src/tactic/goal_num_occurs.cpp
tactic/goal_shared_occs.h.node: ../src/tactic/goal_shared_occs.h tactic/goal.h.node ast/shared_occs.h.node
	@echo done > tactic/goal_shared_occs.h.node
tactic/goal_shared_occs$(OBJ_EXT): ../src/tactic/goal_shared_occs.cpp tactic/goal_shared_occs.h.node
	@echo src/tactic/goal_shared_occs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/goal_shared_occs$(OBJ_EXT) ../src/tactic/goal_shared_occs.cpp
tactic/goal_util.h.node: ../src/tactic/goal_util.h
	@echo done > tactic/goal_util.h.node
tactic/goal_util$(OBJ_EXT): ../src/tactic/goal_util.cpp tactic/goal_util.h.node tactic/goal.h.node
	@echo src/tactic/goal_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/goal_util$(OBJ_EXT) ../src/tactic/goal_util.cpp
tactic/horn_subsume_model_converter.h.node: ../src/tactic/horn_subsume_model_converter.h tactic/model_converter.h.node ast/rewriter/th_rewriter.h.node
	@echo done > tactic/horn_subsume_model_converter.h.node
tactic/horn_subsume_model_converter$(OBJ_EXT): ../src/tactic/horn_subsume_model_converter.cpp tactic/horn_subsume_model_converter.h.node ast/rewriter/var_subst.h.node ast/ast_pp.h.node model/model_smt2_pp.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/th_rewriter.h.node ast/for_each_expr.h.node ast/well_sorted.h.node
	@echo src/tactic/horn_subsume_model_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/horn_subsume_model_converter$(OBJ_EXT) ../src/tactic/horn_subsume_model_converter.cpp
tactic/model_converter$(OBJ_EXT): ../src/tactic/model_converter.cpp tactic/model_converter.h.node model/model_v2_pp.h.node
	@echo src/tactic/model_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/model_converter$(OBJ_EXT) ../src/tactic/model_converter.cpp
tactic/probe.h.node: ../src/tactic/probe.h tactic/goal.h.node
	@echo done > tactic/probe.h.node
tactic/probe$(OBJ_EXT): ../src/tactic/probe.cpp tactic/probe.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node tactic/goal_util.h.node
	@echo src/tactic/probe.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/probe$(OBJ_EXT) ../src/tactic/probe.cpp
tactic/proof_converter$(OBJ_EXT): ../src/tactic/proof_converter.cpp tactic/proof_converter.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/proof_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/proof_converter$(OBJ_EXT) ../src/tactic/proof_converter.cpp
tactic/replace_proof_converter$(OBJ_EXT): ../src/tactic/replace_proof_converter.cpp tactic/replace_proof_converter.h.node ast/expr_functors.h.node ast/ast_pp.h.node ast/for_each_expr.h.node
	@echo src/tactic/replace_proof_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/replace_proof_converter$(OBJ_EXT) ../src/tactic/replace_proof_converter.cpp
tactic/tactic_exception.h.node: ../src/tactic/tactic_exception.h util/z3_exception.h.node util/common_msgs.h.node
	@echo done > tactic/tactic_exception.h.node
tactic/tactic.h.node: ../src/tactic/tactic.h tactic/goal.h.node util/params.h.node util/statistics.h.node tactic/model_converter.h.node tactic/proof_converter.h.node tactic/tactic_exception.h.node util/lbool.h.node
	@echo done > tactic/tactic.h.node
tactic/tactic$(OBJ_EXT): ../src/tactic/tactic.cpp tactic/tactic.h.node tactic/probe.h.node util/stopwatch.h.node model/model_v2_pp.h.node
	@echo src/tactic/tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/tactic$(OBJ_EXT) ../src/tactic/tactic.cpp
tactic/tactical.h.node: ../src/tactic/tactical.h tactic/tactic.h.node tactic/probe.h.node
	@echo done > tactic/tactical.h.node
util/cancel_eh.h.node: ../src/util/cancel_eh.h util/event_handler.h.node
	@echo done > util/cancel_eh.h.node
tactic/tactical$(OBJ_EXT): ../src/tactic/tactical.cpp tactic/tactical.h.node util/scoped_timer.h.node util/cancel_eh.h.node util/cooperate.h.node util/scoped_ptr_vector.h.node util/z3_omp.h.node
	@echo src/tactic/tactical.cpp
	@$(CXX) $(CXXFLAGS) $(includes_12) $(CXX_OUT_FLAG)tactic/tactical$(OBJ_EXT) ../src/tactic/tactical.cpp
tactic/tactic$(LIB_EXT): tactic/equiv_proof_converter$(OBJ_EXT) tactic/extension_model_converter$(OBJ_EXT) tactic/filter_model_converter$(OBJ_EXT) tactic/goal$(OBJ_EXT) tactic/goal_num_occurs$(OBJ_EXT) tactic/goal_shared_occs$(OBJ_EXT) tactic/goal_util$(OBJ_EXT) tactic/horn_subsume_model_converter$(OBJ_EXT) tactic/model_converter$(OBJ_EXT) tactic/probe$(OBJ_EXT) tactic/proof_converter$(OBJ_EXT) tactic/replace_proof_converter$(OBJ_EXT) tactic/tactic$(OBJ_EXT) tactic/tactical$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/tactic$(LIB_EXT) tactic/equiv_proof_converter$(OBJ_EXT) tactic/extension_model_converter$(OBJ_EXT) tactic/filter_model_converter$(OBJ_EXT) tactic/goal$(OBJ_EXT) tactic/goal_num_occurs$(OBJ_EXT) tactic/goal_shared_occs$(OBJ_EXT) tactic/goal_util$(OBJ_EXT) tactic/horn_subsume_model_converter$(OBJ_EXT) tactic/model_converter$(OBJ_EXT) tactic/probe$(OBJ_EXT) tactic/proof_converter$(OBJ_EXT) tactic/replace_proof_converter$(OBJ_EXT) tactic/tactic$(OBJ_EXT) tactic/tactical$(OBJ_EXT)
tactic: tactic/tactic$(LIB_EXT)

includes_13 = -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/rewriter
ast/substitution/expr_offset.h.node: ../src/ast/substitution/expr_offset.h ast/ast.h.node
	@echo done > ast/substitution/expr_offset.h.node
ast/substitution/expr_offset_map.h.node: ../src/ast/substitution/expr_offset_map.h ast/substitution/expr_offset.h.node util/vector.h.node
	@echo done > ast/substitution/expr_offset_map.h.node
ast/substitution/var_offset_map.h.node: ../src/ast/substitution/var_offset_map.h ast/ast.h.node util/vector.h.node
	@echo done > ast/substitution/var_offset_map.h.node
ast/substitution/substitution.h.node: ../src/ast/substitution/substitution.h ast/substitution/expr_offset_map.h.node ast/substitution/var_offset_map.h.node ast/ast_pp.h.node
	@echo done > ast/substitution/substitution.h.node
ast/substitution/matcher.h.node: ../src/ast/substitution/matcher.h ast/substitution/substitution.h.node util/hashtable.h.node
	@echo done > ast/substitution/matcher.h.node
ast/substitution/matcher$(OBJ_EXT): ../src/ast/substitution/matcher.cpp ast/substitution/matcher.h.node
	@echo src/ast/substitution/matcher.cpp
	@$(CXX) $(CXXFLAGS) $(includes_13) $(CXX_OUT_FLAG)ast/substitution/matcher$(OBJ_EXT) ../src/ast/substitution/matcher.cpp
ast/substitution/substitution$(OBJ_EXT): ../src/ast/substitution/substitution.cpp ast/substitution/substitution.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/rewriter/rewriter.h.node
	@echo src/ast/substitution/substitution.cpp
	@$(CXX) $(CXXFLAGS) $(includes_13) $(CXX_OUT_FLAG)ast/substitution/substitution$(OBJ_EXT) ../src/ast/substitution/substitution.cpp
ast/substitution/substitution_tree.h.node: ../src/ast/substitution/substitution_tree.h ast/ast.h.node ast/substitution/substitution.h.node
	@echo done > ast/substitution/substitution_tree.h.node
ast/substitution/substitution_tree$(OBJ_EXT): ../src/ast/substitution/substitution_tree.cpp ast/substitution/substitution_tree.h.node ast/ast_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/substitution/substitution_tree.cpp
	@$(CXX) $(CXXFLAGS) $(includes_13) $(CXX_OUT_FLAG)ast/substitution/substitution_tree$(OBJ_EXT) ../src/ast/substitution/substitution_tree.cpp
ast/substitution/unifier.h.node: ../src/ast/substitution/unifier.h ast/ast.h.node ast/substitution/substitution.h.node
	@echo done > ast/substitution/unifier.h.node
ast/substitution/unifier$(OBJ_EXT): ../src/ast/substitution/unifier.cpp ast/substitution/unifier.h.node ast/ast_pp.h.node
	@echo src/ast/substitution/unifier.cpp
	@$(CXX) $(CXXFLAGS) $(includes_13) $(CXX_OUT_FLAG)ast/substitution/unifier$(OBJ_EXT) ../src/ast/substitution/unifier.cpp
ast/substitution/substitution$(LIB_EXT): ast/substitution/matcher$(OBJ_EXT) ast/substitution/substitution$(OBJ_EXT) ast/substitution/substitution_tree$(OBJ_EXT) ast/substitution/unifier$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/substitution/substitution$(LIB_EXT) ast/substitution/matcher$(OBJ_EXT) ast/substitution/substitution$(OBJ_EXT) ast/substitution/substitution_tree$(OBJ_EXT) ast/substitution/unifier$(OBJ_EXT)
substitution: ast/substitution/substitution$(LIB_EXT)

includes_14 = -I../src/ast -I../src/util -I../src/math/polynomial
parsers/util/simple_parser.h.node: ../src/parsers/util/simple_parser.h ast/ast.h.node util/map.h.node
	@echo done > parsers/util/simple_parser.h.node
parsers/util/cost_parser.h.node: ../src/parsers/util/cost_parser.h parsers/util/simple_parser.h.node ast/arith_decl_plugin.h.node
	@echo done > parsers/util/cost_parser.h.node
parsers/util/cost_parser$(OBJ_EXT): ../src/parsers/util/cost_parser.cpp parsers/util/cost_parser.h.node
	@echo src/parsers/util/cost_parser.cpp
	@$(CXX) $(CXXFLAGS) $(includes_14) $(CXX_OUT_FLAG)parsers/util/cost_parser$(OBJ_EXT) ../src/parsers/util/cost_parser.cpp
parsers/util/pattern_validation.h.node: ../src/parsers/util/pattern_validation.h ast/ast.h.node util/uint_set.h.node util/vector.h.node
	@echo done > parsers/util/pattern_validation.h.node
parsers/util/pattern_validation$(OBJ_EXT): ../src/parsers/util/pattern_validation.cpp parsers/util/pattern_validation.h.node ast/for_each_expr.h.node util/warning.h.node ast/ast_pp.h.node
	@echo src/parsers/util/pattern_validation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_14) $(CXX_OUT_FLAG)parsers/util/pattern_validation$(OBJ_EXT) ../src/parsers/util/pattern_validation.cpp
parsers/util/scanner.h.node: ../src/parsers/util/scanner.h ast/ast.h.node
	@echo done > parsers/util/scanner.h.node
parsers/util/scanner$(OBJ_EXT): ../src/parsers/util/scanner.cpp parsers/util/scanner.h.node
	@echo src/parsers/util/scanner.cpp
	@$(CXX) $(CXXFLAGS) $(includes_14) $(CXX_OUT_FLAG)parsers/util/scanner$(OBJ_EXT) ../src/parsers/util/scanner.cpp
parsers/util/simple_parser$(OBJ_EXT): ../src/parsers/util/simple_parser.cpp parsers/util/simple_parser.h.node util/warning.h.node parsers/util/scanner.h.node
	@echo src/parsers/util/simple_parser.cpp
	@$(CXX) $(CXXFLAGS) $(includes_14) $(CXX_OUT_FLAG)parsers/util/simple_parser$(OBJ_EXT) ../src/parsers/util/simple_parser.cpp
parsers/util/parser_util$(LIB_EXT): parsers/util/cost_parser$(OBJ_EXT) parsers/util/pattern_validation$(OBJ_EXT) parsers/util/scanner$(OBJ_EXT) parsers/util/simple_parser$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)parsers/util/parser_util$(LIB_EXT) parsers/util/cost_parser$(OBJ_EXT) parsers/util/pattern_validation$(OBJ_EXT) parsers/util/scanner$(OBJ_EXT) parsers/util/simple_parser$(OBJ_EXT)
parser_util: parsers/util/parser_util$(LIB_EXT)

includes_15 = -I../src/ast -I../src/util -I../src/math/polynomial
math/grobner/grobner.h.node: ../src/math/grobner/grobner.h ast/ast.h.node ast/arith_decl_plugin.h.node util/heap.h.node util/obj_hashtable.h.node util/region.h.node util/dependency.h.node
	@echo done > math/grobner/grobner.h.node
math/grobner/grobner$(OBJ_EXT): ../src/math/grobner/grobner.cpp math/grobner/grobner.h.node ast/ast_pp.h.node util/ref_util.h.node
	@echo src/math/grobner/grobner.cpp
	@$(CXX) $(CXXFLAGS) $(includes_15) $(CXX_OUT_FLAG)math/grobner/grobner$(OBJ_EXT) ../src/math/grobner/grobner.cpp
math/grobner/grobner$(LIB_EXT): math/grobner/grobner$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)math/grobner/grobner$(LIB_EXT) math/grobner/grobner$(OBJ_EXT)
grobner: math/grobner/grobner$(LIB_EXT)

includes_16 = -I../src/util
math/euclid/euclidean_solver.h.node: ../src/math/euclid/euclidean_solver.h util/mpq.h.node util/vector.h.node
	@echo done > math/euclid/euclidean_solver.h.node
util/numeral_buffer.h.node: ../src/util/numeral_buffer.h util/vector.h.node
	@echo done > util/numeral_buffer.h.node
math/euclid/euclidean_solver$(OBJ_EXT): ../src/math/euclid/euclidean_solver.cpp math/euclid/euclidean_solver.h.node util/numeral_buffer.h.node util/heap.h.node
	@echo src/math/euclid/euclidean_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_16) $(CXX_OUT_FLAG)math/euclid/euclidean_solver$(OBJ_EXT) ../src/math/euclid/euclidean_solver.cpp
math/euclid/euclid$(LIB_EXT): math/euclid/euclidean_solver$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)math/euclid/euclid$(LIB_EXT) math/euclid/euclidean_solver$(OBJ_EXT)
euclid: math/euclid/euclid$(LIB_EXT)

includes_17 = -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms
tactic/core/cofactor_elim_term_ite.h.node: ../src/tactic/core/cofactor_elim_term_ite.h ast/ast.h.node util/params.h.node
	@echo done > tactic/core/cofactor_elim_term_ite.h.node
tactic/core/cofactor_elim_term_ite$(OBJ_EXT): ../src/tactic/core/cofactor_elim_term_ite.cpp tactic/core/cofactor_elim_term_ite.h.node ast/rewriter/mk_simplified_app.h.node ast/rewriter/rewriter_def.h.node util/cooperate.h.node ast/for_each_expr.h.node ast/ast_smt2_pp.h.node ast/ast_ll_pp.h.node tactic/tactic.h.node
	@echo src/tactic/core/cofactor_elim_term_ite.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/cofactor_elim_term_ite$(OBJ_EXT) ../src/tactic/core/cofactor_elim_term_ite.cpp
tactic/core/cofactor_term_ite_tactic$(OBJ_EXT): ../src/tactic/core/cofactor_term_ite_tactic.cpp tactic/tactical.h.node tactic/core/cofactor_elim_term_ite.h.node
	@echo src/tactic/core/cofactor_term_ite_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/cofactor_term_ite_tactic$(OBJ_EXT) ../src/tactic/core/cofactor_term_ite_tactic.cpp
tactic/core/ctx_simplify_tactic.h.node: ../src/tactic/core/ctx_simplify_tactic.h tactic/tactical.h.node
	@echo done > tactic/core/ctx_simplify_tactic.h.node
tactic/core/ctx_simplify_tactic$(OBJ_EXT): ../src/tactic/core/ctx_simplify_tactic.cpp tactic/core/ctx_simplify_tactic.h.node ast/rewriter/mk_simplified_app.h.node tactic/goal_num_occurs.h.node util/cooperate.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node
	@echo src/tactic/core/ctx_simplify_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/ctx_simplify_tactic$(OBJ_EXT) ../src/tactic/core/ctx_simplify_tactic.cpp
tactic/core/der_tactic$(OBJ_EXT): ../src/tactic/core/der_tactic.cpp ast/rewriter/der.h.node tactic/tactical.h.node
	@echo src/tactic/core/der_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/der_tactic$(OBJ_EXT) ../src/tactic/core/der_tactic.cpp
tactic/core/distribute_forall_tactic$(OBJ_EXT): ../src/tactic/core/distribute_forall_tactic.cpp tactic/tactical.h.node ast/rewriter/rewriter_def.h.node ast/rewriter/var_subst.h.node
	@echo src/tactic/core/distribute_forall_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/distribute_forall_tactic$(OBJ_EXT) ../src/tactic/core/distribute_forall_tactic.cpp
tactic/core/elim_term_ite_tactic$(OBJ_EXT): ../src/tactic/core/elim_term_ite_tactic.cpp tactic/tactical.h.node ast/normal_forms/defined_names.h.node ast/rewriter/rewriter_def.h.node tactic/filter_model_converter.h.node util/cooperate.h.node
	@echo src/tactic/core/elim_term_ite_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/elim_term_ite_tactic$(OBJ_EXT) ../src/tactic/core/elim_term_ite_tactic.cpp
tactic/core/elim_uncnstr_tactic$(OBJ_EXT): ../src/tactic/core/elim_uncnstr_tactic.cpp tactic/tactical.h.node tactic/extension_model_converter.h.node tactic/filter_model_converter.h.node ast/rewriter/rewriter_def.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node ast/datatype_decl_plugin.h.node util/cooperate.h.node ast/ast_smt2_pp.h.node ast/ast_ll_pp.h.node
	@echo src/tactic/core/elim_uncnstr_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/elim_uncnstr_tactic$(OBJ_EXT) ../src/tactic/core/elim_uncnstr_tactic.cpp
tactic/core/nnf_tactic$(OBJ_EXT): ../src/tactic/core/nnf_tactic.cpp ast/normal_forms/nnf.h.node tactic/tactical.h.node tactic/filter_model_converter.h.node
	@echo src/tactic/core/nnf_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/nnf_tactic$(OBJ_EXT) ../src/tactic/core/nnf_tactic.cpp
tactic/core/occf_tactic.h.node: ../src/tactic/core/occf_tactic.h util/params.h.node
	@echo done > tactic/core/occf_tactic.h.node
tactic/core/occf_tactic$(OBJ_EXT): ../src/tactic/core/occf_tactic.cpp tactic/tactical.h.node tactic/core/occf_tactic.h.node tactic/filter_model_converter.h.node util/cooperate.h.node
	@echo src/tactic/core/occf_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/occf_tactic$(OBJ_EXT) ../src/tactic/core/occf_tactic.cpp
tactic/core/propagate_values_tactic.h.node: ../src/tactic/core/propagate_values_tactic.h util/params.h.node
	@echo done > tactic/core/propagate_values_tactic.h.node
tactic/core/propagate_values_tactic$(OBJ_EXT): ../src/tactic/core/propagate_values_tactic.cpp tactic/tactical.h.node tactic/core/propagate_values_tactic.h.node ast/rewriter/th_rewriter.h.node ast/ast_smt2_pp.h.node ast/expr_substitution.h.node tactic/goal_shared_occs.h.node
	@echo src/tactic/core/propagate_values_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/propagate_values_tactic$(OBJ_EXT) ../src/tactic/core/propagate_values_tactic.cpp
tactic/core/reduce_args_tactic$(OBJ_EXT): ../src/tactic/core/reduce_args_tactic.cpp tactic/tactical.h.node util/cooperate.h.node ast/ast_smt2_pp.h.node util/map.h.node ast/rewriter/rewriter_def.h.node tactic/extension_model_converter.h.node tactic/filter_model_converter.h.node
	@echo src/tactic/core/reduce_args_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/reduce_args_tactic$(OBJ_EXT) ../src/tactic/core/reduce_args_tactic.cpp
tactic/core/simplify_tactic.h.node: ../src/tactic/core/simplify_tactic.h tactic/tactic.h.node tactic/tactical.h.node
	@echo done > tactic/core/simplify_tactic.h.node
tactic/core/simplify_tactic$(OBJ_EXT): ../src/tactic/core/simplify_tactic.cpp tactic/core/simplify_tactic.h.node ast/rewriter/th_rewriter.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/core/simplify_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/simplify_tactic$(OBJ_EXT) ../src/tactic/core/simplify_tactic.cpp
tactic/core/solve_eqs_tactic$(OBJ_EXT): ../src/tactic/core/solve_eqs_tactic.cpp tactic/tactical.h.node ast/rewriter/expr_replacer.h.node tactic/extension_model_converter.h.node ast/occurs.h.node util/cooperate.h.node tactic/goal_shared_occs.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/core/solve_eqs_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/solve_eqs_tactic$(OBJ_EXT) ../src/tactic/core/solve_eqs_tactic.cpp
tactic/core/split_clause_tactic.h.node: ../src/tactic/core/split_clause_tactic.h util/params.h.node
	@echo done > tactic/core/split_clause_tactic.h.node
tactic/core/split_clause_tactic$(OBJ_EXT): ../src/tactic/core/split_clause_tactic.cpp tactic/tactical.h.node tactic/core/split_clause_tactic.h.node
	@echo src/tactic/core/split_clause_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/split_clause_tactic$(OBJ_EXT) ../src/tactic/core/split_clause_tactic.cpp
tactic/core/symmetry_reduce_tactic$(OBJ_EXT): ../src/tactic/core/symmetry_reduce_tactic.cpp tactic/tactical.h.node ast/for_each_expr.h.node util/map.h.node ast/rewriter/expr_replacer.h.node ast/rewriter/rewriter_def.h.node ast/ast_pp.h.node
	@echo src/tactic/core/symmetry_reduce_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/symmetry_reduce_tactic$(OBJ_EXT) ../src/tactic/core/symmetry_reduce_tactic.cpp
tactic/core/tseitin_cnf_tactic$(OBJ_EXT): ../src/tactic/core/tseitin_cnf_tactic.cpp tactic/tactical.h.node tactic/goal_shared_occs.h.node tactic/filter_model_converter.h.node ast/rewriter/bool_rewriter.h.node tactic/core/simplify_tactic.h.node util/cooperate.h.node
	@echo src/tactic/core/tseitin_cnf_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_17) $(CXX_OUT_FLAG)tactic/core/tseitin_cnf_tactic$(OBJ_EXT) ../src/tactic/core/tseitin_cnf_tactic.cpp
tactic/core/core_tactics$(LIB_EXT): tactic/core/cofactor_elim_term_ite$(OBJ_EXT) tactic/core/cofactor_term_ite_tactic$(OBJ_EXT) tactic/core/ctx_simplify_tactic$(OBJ_EXT) tactic/core/der_tactic$(OBJ_EXT) tactic/core/distribute_forall_tactic$(OBJ_EXT) tactic/core/elim_term_ite_tactic$(OBJ_EXT) tactic/core/elim_uncnstr_tactic$(OBJ_EXT) tactic/core/nnf_tactic$(OBJ_EXT) tactic/core/occf_tactic$(OBJ_EXT) tactic/core/propagate_values_tactic$(OBJ_EXT) tactic/core/reduce_args_tactic$(OBJ_EXT) tactic/core/simplify_tactic$(OBJ_EXT) tactic/core/solve_eqs_tactic$(OBJ_EXT) tactic/core/split_clause_tactic$(OBJ_EXT) tactic/core/symmetry_reduce_tactic$(OBJ_EXT) tactic/core/tseitin_cnf_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/core/core_tactics$(LIB_EXT) tactic/core/cofactor_elim_term_ite$(OBJ_EXT) tactic/core/cofactor_term_ite_tactic$(OBJ_EXT) tactic/core/ctx_simplify_tactic$(OBJ_EXT) tactic/core/der_tactic$(OBJ_EXT) tactic/core/distribute_forall_tactic$(OBJ_EXT) tactic/core/elim_term_ite_tactic$(OBJ_EXT) tactic/core/elim_uncnstr_tactic$(OBJ_EXT) tactic/core/nnf_tactic$(OBJ_EXT) tactic/core/occf_tactic$(OBJ_EXT) tactic/core/propagate_values_tactic$(OBJ_EXT) tactic/core/reduce_args_tactic$(OBJ_EXT) tactic/core/simplify_tactic$(OBJ_EXT) tactic/core/solve_eqs_tactic$(OBJ_EXT) tactic/core/split_clause_tactic$(OBJ_EXT) tactic/core/symmetry_reduce_tactic$(OBJ_EXT) tactic/core/tseitin_cnf_tactic$(OBJ_EXT)
core_tactics: tactic/core/core_tactics$(LIB_EXT)

includes_18 = -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/sat
sat/tactic/atom2bool_var.h.node: ../src/sat/tactic/atom2bool_var.h ast/expr2var.h.node sat/sat_types.h.node
	@echo done > sat/tactic/atom2bool_var.h.node
sat/tactic/atom2bool_var$(OBJ_EXT): ../src/sat/tactic/atom2bool_var.cpp sat/tactic/atom2bool_var.h.node ast/ast_smt2_pp.h.node util/ref_util.h.node tactic/goal.h.node
	@echo src/sat/tactic/atom2bool_var.cpp
	@$(CXX) $(CXXFLAGS) $(includes_18) $(CXX_OUT_FLAG)sat/tactic/atom2bool_var$(OBJ_EXT) ../src/sat/tactic/atom2bool_var.cpp
sat/tactic/goal2sat.h.node: ../src/sat/tactic/goal2sat.h tactic/goal.h.node sat/sat_solver.h.node tactic/model_converter.h.node sat/tactic/atom2bool_var.h.node
	@echo done > sat/tactic/goal2sat.h.node
sat/tactic/goal2sat$(OBJ_EXT): ../src/sat/tactic/goal2sat.cpp sat/tactic/goal2sat.h.node ast/ast_smt2_pp.h.node util/ref_util.h.node util/cooperate.h.node tactic/filter_model_converter.h.node model/model_evaluator.h.node ast/for_each_expr.h.node model/model_v2_pp.h.node tactic/tactic.h.node
	@echo src/sat/tactic/goal2sat.cpp
	@$(CXX) $(CXXFLAGS) $(includes_18) $(CXX_OUT_FLAG)sat/tactic/goal2sat$(OBJ_EXT) ../src/sat/tactic/goal2sat.cpp
sat/tactic/sat_tactic$(OBJ_EXT): ../src/sat/tactic/sat_tactic.cpp tactic/tactical.h.node sat/tactic/goal2sat.h.node sat/sat_solver.h.node tactic/filter_model_converter.h.node ast/ast_smt2_pp.h.node model/model_v2_pp.h.node
	@echo src/sat/tactic/sat_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_18) $(CXX_OUT_FLAG)sat/tactic/sat_tactic$(OBJ_EXT) ../src/sat/tactic/sat_tactic.cpp
sat/tactic/sat_tactic$(LIB_EXT): sat/tactic/atom2bool_var$(OBJ_EXT) sat/tactic/goal2sat$(OBJ_EXT) sat/tactic/sat_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)sat/tactic/sat_tactic$(LIB_EXT) sat/tactic/atom2bool_var$(OBJ_EXT) sat/tactic/goal2sat$(OBJ_EXT) sat/tactic/sat_tactic$(OBJ_EXT)
sat_tactic: sat/tactic/sat_tactic$(LIB_EXT)

includes_19 = -I../src/tactic/core -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/sat
tactic/arith/bound_manager.h.node: ../src/tactic/arith/bound_manager.h ast/ast.h.node ast/arith_decl_plugin.h.node
	@echo done > tactic/arith/bound_manager.h.node
tactic/arith/add_bounds_tactic$(OBJ_EXT): ../src/tactic/arith/add_bounds_tactic.cpp tactic/tactical.h.node ast/arith_decl_plugin.h.node ast/ast_smt2_pp.h.node tactic/arith/bound_manager.h.node
	@echo src/tactic/arith/add_bounds_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/add_bounds_tactic$(OBJ_EXT) ../src/tactic/arith/add_bounds_tactic.cpp
tactic/arith/arith_bounds_tactic.h.node: ../src/tactic/arith/arith_bounds_tactic.h tactic/tactic.h.node
	@echo done > tactic/arith/arith_bounds_tactic.h.node
tactic/arith/arith_bounds_tactic$(OBJ_EXT): ../src/tactic/arith/arith_bounds_tactic.cpp tactic/arith/arith_bounds_tactic.h.node ast/arith_decl_plugin.h.node
	@echo src/tactic/arith/arith_bounds_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/arith_bounds_tactic$(OBJ_EXT) ../src/tactic/arith/arith_bounds_tactic.cpp
tactic/arith/bound_manager$(OBJ_EXT): ../src/tactic/arith/bound_manager.cpp tactic/arith/bound_manager.h.node ast/ast_smt2_pp.h.node tactic/goal.h.node
	@echo src/tactic/arith/bound_manager.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/bound_manager$(OBJ_EXT) ../src/tactic/arith/bound_manager.cpp
util/double_manager.h.node: ../src/util/double_manager.h util/util.h.node util/debug.h.node util/hash.h.node util/params.h.node
	@echo done > util/double_manager.h.node
tactic/arith/linear_equation.h.node: ../src/tactic/arith/linear_equation.h util/mpq.h.node util/small_object_allocator.h.node util/numeral_buffer.h.node util/double_manager.h.node
	@echo done > tactic/arith/linear_equation.h.node
tactic/arith/bound_propagator.h.node: ../src/tactic/arith/bound_propagator.h util/mpq.h.node util/vector.h.node util/params.h.node util/statistics.h.node util/numeral_buffer.h.node tactic/arith/linear_equation.h.node
	@echo done > tactic/arith/bound_propagator.h.node
tactic/arith/bound_propagator$(OBJ_EXT): ../src/tactic/arith/bound_propagator.cpp tactic/arith/bound_propagator.h.node
	@echo src/tactic/arith/bound_propagator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/bound_propagator$(OBJ_EXT) ../src/tactic/arith/bound_propagator.cpp
tactic/arith/bv2int_rewriter.h.node: ../src/tactic/arith/bv2int_rewriter.h ast/ast.h.node ast/rewriter/rewriter.h.node ast/bv_decl_plugin.h.node ast/arith_decl_plugin.h.node util/params.h.node tactic/goal.h.node
	@echo done > tactic/arith/bv2int_rewriter.h.node
tactic/arith/bv2int_rewriter$(OBJ_EXT): ../src/tactic/arith/bv2int_rewriter.cpp tactic/arith/bv2int_rewriter.h.node ast/rewriter/rewriter_def.h.node ast/ast_pp.h.node
	@echo src/tactic/arith/bv2int_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/bv2int_rewriter$(OBJ_EXT) ../src/tactic/arith/bv2int_rewriter.cpp
tactic/arith/bv2real_rewriter.h.node: ../src/tactic/arith/bv2real_rewriter.h ast/ast.h.node ast/rewriter/rewriter.h.node ast/bv_decl_plugin.h.node ast/arith_decl_plugin.h.node
	@echo done > tactic/arith/bv2real_rewriter.h.node
tactic/arith/bv2real_rewriter$(OBJ_EXT): ../src/tactic/arith/bv2real_rewriter.cpp tactic/arith/bv2real_rewriter.h.node ast/rewriter/rewriter_def.h.node ast/ast_pp.h.node ast/for_each_expr.h.node
	@echo src/tactic/arith/bv2real_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/bv2real_rewriter$(OBJ_EXT) ../src/tactic/arith/bv2real_rewriter.cpp
tactic/arith/degree_shift_tactic$(OBJ_EXT): ../src/tactic/arith/degree_shift_tactic.cpp tactic/tactical.h.node tactic/filter_model_converter.h.node tactic/extension_model_converter.h.node util/cooperate.h.node ast/arith_decl_plugin.h.node tactic/core/simplify_tactic.h.node ast/ast_smt2_pp.h.node ast/rewriter/rewriter_def.h.node
	@echo src/tactic/arith/degree_shift_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/degree_shift_tactic$(OBJ_EXT) ../src/tactic/arith/degree_shift_tactic.cpp
tactic/arith/diff_neq_tactic$(OBJ_EXT): ../src/tactic/arith/diff_neq_tactic.cpp tactic/tactical.h.node ast/arith_decl_plugin.h.node ast/ast_smt2_pp.h.node model/model.h.node
	@echo src/tactic/arith/diff_neq_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/diff_neq_tactic$(OBJ_EXT) ../src/tactic/arith/diff_neq_tactic.cpp
tactic/arith/factor_tactic$(OBJ_EXT): ../src/tactic/arith/factor_tactic.cpp tactic/tactical.h.node ast/expr2polynomial.h.node ast/rewriter/rewriter_def.h.node
	@echo src/tactic/arith/factor_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/factor_tactic$(OBJ_EXT) ../src/tactic/arith/factor_tactic.cpp
tactic/arith/fix_dl_var_tactic$(OBJ_EXT): ../src/tactic/arith/fix_dl_var_tactic.cpp tactic/tactical.h.node ast/rewriter/th_rewriter.h.node tactic/extension_model_converter.h.node ast/arith_decl_plugin.h.node ast/expr_substitution.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/arith/fix_dl_var_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/fix_dl_var_tactic$(OBJ_EXT) ../src/tactic/arith/fix_dl_var_tactic.cpp
tactic/arith/fm_tactic.h.node: ../src/tactic/arith/fm_tactic.h util/params.h.node
	@echo done > tactic/arith/fm_tactic.h.node
tactic/arith/fm_tactic$(OBJ_EXT): ../src/tactic/arith/fm_tactic.cpp tactic/arith/fm_tactic.h.node tactic/tactical.h.node ast/arith_decl_plugin.h.node ast/for_each_expr.h.node util/cooperate.h.node ast/ast_smt2_pp.h.node ast/ast_pp.h.node util/id_gen.h.node model/model_evaluator.h.node model/model_v2_pp.h.node tactic/core/simplify_tactic.h.node
	@echo src/tactic/arith/fm_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/fm_tactic$(OBJ_EXT) ../src/tactic/arith/fm_tactic.cpp
tactic/arith/lia2pb_tactic$(OBJ_EXT): ../src/tactic/arith/lia2pb_tactic.cpp tactic/tactical.h.node tactic/arith/bound_manager.h.node ast/rewriter/th_rewriter.h.node ast/for_each_expr.h.node tactic/extension_model_converter.h.node tactic/filter_model_converter.h.node ast/arith_decl_plugin.h.node ast/expr_substitution.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/arith/lia2pb_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/lia2pb_tactic$(OBJ_EXT) ../src/tactic/arith/lia2pb_tactic.cpp
tactic/arith/linear_equation$(OBJ_EXT): ../src/tactic/arith/linear_equation.cpp tactic/arith/linear_equation.h.node
	@echo src/tactic/arith/linear_equation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/linear_equation$(OBJ_EXT) ../src/tactic/arith/linear_equation.cpp
util/obj_pair_hashtable.h.node: ../src/util/obj_pair_hashtable.h util/hash.h.node util/hashtable.h.node
	@echo done > util/obj_pair_hashtable.h.node
tactic/arith/nla2bv_tactic$(OBJ_EXT): ../src/tactic/arith/nla2bv_tactic.cpp tactic/tactical.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/for_each_expr.h.node ast/rewriter/expr_replacer.h.node util/optional.h.node tactic/arith/bv2int_rewriter.h.node tactic/arith/bv2real_rewriter.h.node tactic/extension_model_converter.h.node tactic/filter_model_converter.h.node tactic/arith/bound_manager.h.node util/obj_pair_hashtable.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/arith/nla2bv_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/nla2bv_tactic$(OBJ_EXT) ../src/tactic/arith/nla2bv_tactic.cpp
tactic/arith/normalize_bounds_tactic$(OBJ_EXT): ../src/tactic/arith/normalize_bounds_tactic.cpp tactic/tactical.h.node tactic/arith/bound_manager.h.node ast/rewriter/th_rewriter.h.node tactic/extension_model_converter.h.node tactic/filter_model_converter.h.node ast/arith_decl_plugin.h.node ast/expr_substitution.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/arith/normalize_bounds_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/normalize_bounds_tactic$(OBJ_EXT) ../src/tactic/arith/normalize_bounds_tactic.cpp
tactic/arith/pb2bv_model_converter.h.node: ../src/tactic/arith/pb2bv_model_converter.h tactic/model_converter.h.node tactic/arith/bound_manager.h.node
	@echo done > tactic/arith/pb2bv_model_converter.h.node
tactic/arith/pb2bv_model_converter$(OBJ_EXT): ../src/tactic/arith/pb2bv_model_converter.cpp util/trace.h.node ast/arith_decl_plugin.h.node model/model_v2_pp.h.node tactic/arith/pb2bv_model_converter.h.node
	@echo src/tactic/arith/pb2bv_model_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/pb2bv_model_converter$(OBJ_EXT) ../src/tactic/arith/pb2bv_model_converter.cpp
tactic/arith/pb2bv_tactic.h.node: ../src/tactic/arith/pb2bv_tactic.h util/params.h.node
	@echo done > tactic/arith/pb2bv_tactic.h.node
tactic/arith/pb2bv_tactic$(OBJ_EXT): ../src/tactic/arith/pb2bv_tactic.cpp tactic/tactical.h.node util/cooperate.h.node tactic/arith/bound_manager.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/rewriter_def.h.node util/ref_util.h.node ast/arith_decl_plugin.h.node util/trace.h.node ast/ast_smt2_pp.h.node ast/expr_substitution.h.node tactic/filter_model_converter.h.node tactic/arith/pb2bv_model_converter.h.node tactic/arith/pb2bv_tactic.h.node
	@echo src/tactic/arith/pb2bv_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/pb2bv_tactic$(OBJ_EXT) ../src/tactic/arith/pb2bv_tactic.cpp
tactic/arith/probe_arith$(OBJ_EXT): ../src/tactic/arith/probe_arith.cpp tactic/probe.h.node ast/expr2polynomial.h.node ast/for_each_expr.h.node ast/arith_decl_plugin.h.node tactic/goal_util.h.node
	@echo src/tactic/arith/probe_arith.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/probe_arith$(OBJ_EXT) ../src/tactic/arith/probe_arith.cpp
tactic/arith/propagate_ineqs_tactic$(OBJ_EXT): ../src/tactic/arith/propagate_ineqs_tactic.cpp tactic/tactical.h.node tactic/arith/bound_propagator.h.node ast/arith_decl_plugin.h.node tactic/core/simplify_tactic.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/arith/propagate_ineqs_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/propagate_ineqs_tactic$(OBJ_EXT) ../src/tactic/arith/propagate_ineqs_tactic.cpp
tactic/core/nnf_tactic.h.node: ../src/tactic/core/nnf_tactic.h util/params.h.node
	@echo done > tactic/core/nnf_tactic.h.node
tactic/arith/purify_arith_tactic$(OBJ_EXT): ../src/tactic/arith/purify_arith_tactic.cpp tactic/tactical.h.node ast/rewriter/rewriter_def.h.node ast/arith_decl_plugin.h.node math/polynomial/algebraic_numbers.h.node tactic/core/nnf_tactic.h.node tactic/core/simplify_tactic.h.node ast/rewriter/th_rewriter.h.node tactic/filter_model_converter.h.node ast/ast_smt2_pp.h.node ast/rewriter/expr_replacer.h.node
	@echo src/tactic/arith/purify_arith_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/purify_arith_tactic$(OBJ_EXT) ../src/tactic/arith/purify_arith_tactic.cpp
tactic/arith/recover_01_tactic$(OBJ_EXT): ../src/tactic/arith/recover_01_tactic.cpp tactic/tactical.h.node ast/rewriter/th_rewriter.h.node tactic/extension_model_converter.h.node tactic/filter_model_converter.h.node ast/arith_decl_plugin.h.node ast/expr_substitution.h.node util/dec_ref_util.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/arith/recover_01_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_19) $(CXX_OUT_FLAG)tactic/arith/recover_01_tactic$(OBJ_EXT) ../src/tactic/arith/recover_01_tactic.cpp
tactic/arith/arith_tactics$(LIB_EXT): tactic/arith/add_bounds_tactic$(OBJ_EXT) tactic/arith/arith_bounds_tactic$(OBJ_EXT) tactic/arith/bound_manager$(OBJ_EXT) tactic/arith/bound_propagator$(OBJ_EXT) tactic/arith/bv2int_rewriter$(OBJ_EXT) tactic/arith/bv2real_rewriter$(OBJ_EXT) tactic/arith/degree_shift_tactic$(OBJ_EXT) tactic/arith/diff_neq_tactic$(OBJ_EXT) tactic/arith/factor_tactic$(OBJ_EXT) tactic/arith/fix_dl_var_tactic$(OBJ_EXT) tactic/arith/fm_tactic$(OBJ_EXT) tactic/arith/lia2pb_tactic$(OBJ_EXT) tactic/arith/linear_equation$(OBJ_EXT) tactic/arith/nla2bv_tactic$(OBJ_EXT) tactic/arith/normalize_bounds_tactic$(OBJ_EXT) tactic/arith/pb2bv_model_converter$(OBJ_EXT) tactic/arith/pb2bv_tactic$(OBJ_EXT) tactic/arith/probe_arith$(OBJ_EXT) tactic/arith/propagate_ineqs_tactic$(OBJ_EXT) tactic/arith/purify_arith_tactic$(OBJ_EXT) tactic/arith/recover_01_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/arith/arith_tactics$(LIB_EXT) tactic/arith/add_bounds_tactic$(OBJ_EXT) tactic/arith/arith_bounds_tactic$(OBJ_EXT) tactic/arith/bound_manager$(OBJ_EXT) tactic/arith/bound_propagator$(OBJ_EXT) tactic/arith/bv2int_rewriter$(OBJ_EXT) tactic/arith/bv2real_rewriter$(OBJ_EXT) tactic/arith/degree_shift_tactic$(OBJ_EXT) tactic/arith/diff_neq_tactic$(OBJ_EXT) tactic/arith/factor_tactic$(OBJ_EXT) tactic/arith/fix_dl_var_tactic$(OBJ_EXT) tactic/arith/fm_tactic$(OBJ_EXT) tactic/arith/lia2pb_tactic$(OBJ_EXT) tactic/arith/linear_equation$(OBJ_EXT) tactic/arith/nla2bv_tactic$(OBJ_EXT) tactic/arith/normalize_bounds_tactic$(OBJ_EXT) tactic/arith/pb2bv_model_converter$(OBJ_EXT) tactic/arith/pb2bv_tactic$(OBJ_EXT) tactic/arith/probe_arith$(OBJ_EXT) tactic/arith/propagate_ineqs_tactic$(OBJ_EXT) tactic/arith/purify_arith_tactic$(OBJ_EXT) tactic/arith/recover_01_tactic$(OBJ_EXT)
arith_tactics: tactic/arith/arith_tactics$(LIB_EXT)

includes_20 = -I../src/nlsat -I../src/math/polynomial -I../src/util -I../src/sat -I../src/sat/tactic -I../src/tactic -I../src/ast -I../src/model -I../src/ast/rewriter -I../src/tactic/arith -I../src/tactic/core -I../src/ast/normal_forms
nlsat/tactic/goal2nlsat.h.node: ../src/nlsat/tactic/goal2nlsat.h nlsat/nlsat_types.h.node tactic/model_converter.h.node
	@echo done > nlsat/tactic/goal2nlsat.h.node
nlsat/tactic/goal2nlsat$(OBJ_EXT): ../src/nlsat/tactic/goal2nlsat.cpp nlsat/tactic/goal2nlsat.h.node tactic/goal.h.node tactic/goal_util.h.node nlsat/nlsat_solver.h.node ast/expr2polynomial.h.node ast/expr2var.h.node ast/arith_decl_plugin.h.node tactic/tactic.h.node ast/ast_smt2_pp.h.node
	@echo src/nlsat/tactic/goal2nlsat.cpp
	@$(CXX) $(CXXFLAGS) $(includes_20) $(CXX_OUT_FLAG)nlsat/tactic/goal2nlsat$(OBJ_EXT) ../src/nlsat/tactic/goal2nlsat.cpp
nlsat/tactic/nlsat_tactic$(OBJ_EXT): ../src/nlsat/tactic/nlsat_tactic.cpp tactic/tactical.h.node nlsat/tactic/goal2nlsat.h.node nlsat/nlsat_solver.h.node model/model.h.node ast/expr2var.h.node ast/arith_decl_plugin.h.node ast/ast_smt2_pp.h.node util/z3_exception.h.node math/polynomial/algebraic_numbers.h.node
	@echo src/nlsat/tactic/nlsat_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_20) $(CXX_OUT_FLAG)nlsat/tactic/nlsat_tactic$(OBJ_EXT) ../src/nlsat/tactic/nlsat_tactic.cpp
tactic/core/tseitin_cnf_tactic.h.node: ../src/tactic/core/tseitin_cnf_tactic.h util/params.h.node
	@echo done > tactic/core/tseitin_cnf_tactic.h.node
tactic/arith/degree_shift_tactic.h.node: ../src/tactic/arith/degree_shift_tactic.h util/params.h.node
	@echo done > tactic/arith/degree_shift_tactic.h.node
tactic/arith/purify_arith_tactic.h.node: ../src/tactic/arith/purify_arith_tactic.h util/params.h.node
	@echo done > tactic/arith/purify_arith_tactic.h.node
nlsat/tactic/nlsat_tactic.h.node: ../src/nlsat/tactic/nlsat_tactic.h util/params.h.node
	@echo done > nlsat/tactic/nlsat_tactic.h.node
tactic/arith/factor_tactic.h.node: ../src/tactic/arith/factor_tactic.h util/params.h.node
	@echo done > tactic/arith/factor_tactic.h.node
tactic/core/elim_uncnstr_tactic.h.node: ../src/tactic/core/elim_uncnstr_tactic.h util/params.h.node
	@echo done > tactic/core/elim_uncnstr_tactic.h.node
tactic/core/solve_eqs_tactic.h.node: ../src/tactic/core/solve_eqs_tactic.h util/params.h.node
	@echo done > tactic/core/solve_eqs_tactic.h.node
tactic/core/elim_term_ite_tactic.h.node: ../src/tactic/core/elim_term_ite_tactic.h util/params.h.node
	@echo done > tactic/core/elim_term_ite_tactic.h.node
nlsat/tactic/qfnra_nlsat_tactic$(OBJ_EXT): ../src/nlsat/tactic/qfnra_nlsat_tactic.cpp tactic/tactical.h.node tactic/core/tseitin_cnf_tactic.h.node tactic/arith/degree_shift_tactic.h.node tactic/arith/purify_arith_tactic.h.node nlsat/tactic/nlsat_tactic.h.node tactic/arith/factor_tactic.h.node tactic/core/simplify_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_term_ite_tactic.h.node
	@echo src/nlsat/tactic/qfnra_nlsat_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_20) $(CXX_OUT_FLAG)nlsat/tactic/qfnra_nlsat_tactic$(OBJ_EXT) ../src/nlsat/tactic/qfnra_nlsat_tactic.cpp
nlsat/tactic/nlsat_tactic$(LIB_EXT): nlsat/tactic/goal2nlsat$(OBJ_EXT) nlsat/tactic/nlsat_tactic$(OBJ_EXT) nlsat/tactic/qfnra_nlsat_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)nlsat/tactic/nlsat_tactic$(LIB_EXT) nlsat/tactic/goal2nlsat$(OBJ_EXT) nlsat/tactic/nlsat_tactic$(OBJ_EXT) nlsat/tactic/qfnra_nlsat_tactic$(OBJ_EXT)
nlsat_tactic: nlsat/tactic/nlsat_tactic$(LIB_EXT)

includes_21 = -I../src/tactic/core -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/math/subpaving -I../src/math/interval
math/subpaving/tactic/expr2subpaving.h.node: ../src/math/subpaving/tactic/expr2subpaving.h ast/ast.h.node math/subpaving/subpaving.h.node
	@echo done > math/subpaving/tactic/expr2subpaving.h.node
math/subpaving/tactic/expr2subpaving$(OBJ_EXT): ../src/math/subpaving/tactic/expr2subpaving.cpp math/subpaving/tactic/expr2subpaving.h.node ast/expr2var.h.node util/ref_util.h.node util/z3_exception.h.node util/cooperate.h.node ast/arith_decl_plugin.h.node util/scoped_numeral_buffer.h.node
	@echo src/math/subpaving/tactic/expr2subpaving.cpp
	@$(CXX) $(CXXFLAGS) $(includes_21) $(CXX_OUT_FLAG)math/subpaving/tactic/expr2subpaving$(OBJ_EXT) ../src/math/subpaving/tactic/expr2subpaving.cpp
math/subpaving/tactic/subpaving_tactic$(OBJ_EXT): ../src/math/subpaving/tactic/subpaving_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node math/subpaving/tactic/expr2subpaving.h.node ast/expr2var.h.node ast/arith_decl_plugin.h.node ast/ast_smt2_pp.h.node util/hwf.h.node util/mpff.h.node util/mpfx.h.node util/f2n.h.node
	@echo src/math/subpaving/tactic/subpaving_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_21) $(CXX_OUT_FLAG)math/subpaving/tactic/subpaving_tactic$(OBJ_EXT) ../src/math/subpaving/tactic/subpaving_tactic.cpp
math/subpaving/tactic/subpaving_tactic$(LIB_EXT): math/subpaving/tactic/expr2subpaving$(OBJ_EXT) math/subpaving/tactic/subpaving_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)math/subpaving/tactic/subpaving_tactic$(LIB_EXT) math/subpaving/tactic/expr2subpaving$(OBJ_EXT) math/subpaving/tactic/subpaving_tactic$(OBJ_EXT)
subpaving_tactic: math/subpaving/tactic/subpaving_tactic$(LIB_EXT)

includes_22 = -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter
tactic/aig/aig.h.node: ../src/tactic/aig/aig.h ast/ast.h.node tactic/tactic_exception.h.node
	@echo done > tactic/aig/aig.h.node
tactic/aig/aig$(OBJ_EXT): ../src/tactic/aig/aig.cpp tactic/aig/aig.h.node tactic/goal.h.node ast/ast_smt2_pp.h.node util/cooperate.h.node
	@echo src/tactic/aig/aig.cpp
	@$(CXX) $(CXXFLAGS) $(includes_22) $(CXX_OUT_FLAG)tactic/aig/aig$(OBJ_EXT) ../src/tactic/aig/aig.cpp
tactic/aig/aig_tactic$(OBJ_EXT): ../src/tactic/aig/aig_tactic.cpp tactic/tactical.h.node tactic/aig/aig.h.node
	@echo src/tactic/aig/aig_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_22) $(CXX_OUT_FLAG)tactic/aig/aig_tactic$(OBJ_EXT) ../src/tactic/aig/aig_tactic.cpp
tactic/aig/aig_tactic$(LIB_EXT): tactic/aig/aig$(OBJ_EXT) tactic/aig/aig_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/aig/aig_tactic$(LIB_EXT) tactic/aig/aig$(OBJ_EXT) tactic/aig/aig_tactic$(OBJ_EXT)
aig_tactic: tactic/aig/aig_tactic$(LIB_EXT)

includes_23 = -I../src/model -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/tactic
solver/check_sat_result.h.node: ../src/solver/check_sat_result.h model/model.h.node util/lbool.h.node util/statistics.h.node
	@echo done > solver/check_sat_result.h.node
solver/check_sat_result$(OBJ_EXT): ../src/solver/check_sat_result.cpp solver/check_sat_result.h.node
	@echo src/solver/check_sat_result.cpp
	@$(CXX) $(CXXFLAGS) $(includes_23) $(CXX_OUT_FLAG)solver/check_sat_result$(OBJ_EXT) ../src/solver/check_sat_result.cpp
solver/progress_callback.h.node: ../src/solver/progress_callback.h
	@echo done > solver/progress_callback.h.node
solver/solver.h.node: ../src/solver/solver.h solver/check_sat_result.h.node solver/progress_callback.h.node util/params.h.node
	@echo done > solver/solver.h.node
solver/combined_solver_params.hpp.node: ../src/solver/combined_solver_params.hpp util/params.h.node util/gparams.h.node
	@echo done > solver/combined_solver_params.hpp.node
solver/combined_solver$(OBJ_EXT): ../src/solver/combined_solver.cpp solver/solver.h.node util/scoped_timer.h.node solver/combined_solver_params.hpp.node
	@echo src/solver/combined_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_23) $(CXX_OUT_FLAG)solver/combined_solver$(OBJ_EXT) ../src/solver/combined_solver.cpp
solver/solver$(OBJ_EXT): ../src/solver/solver.cpp solver/solver.h.node
	@echo src/solver/solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_23) $(CXX_OUT_FLAG)solver/solver$(OBJ_EXT) ../src/solver/solver.cpp
solver/solver_na2as.h.node: ../src/solver/solver_na2as.h solver/solver.h.node
	@echo done > solver/solver_na2as.h.node
solver/solver_na2as$(OBJ_EXT): ../src/solver/solver_na2as.cpp solver/solver_na2as.h.node ast/ast_smt2_pp.h.node
	@echo src/solver/solver_na2as.cpp
	@$(CXX) $(CXXFLAGS) $(includes_23) $(CXX_OUT_FLAG)solver/solver_na2as$(OBJ_EXT) ../src/solver/solver_na2as.cpp
solver/tactic2solver$(OBJ_EXT): ../src/solver/tactic2solver.cpp solver/solver_na2as.h.node tactic/tactic.h.node ast/ast_smt2_pp.h.node
	@echo src/solver/tactic2solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_23) $(CXX_OUT_FLAG)solver/tactic2solver$(OBJ_EXT) ../src/solver/tactic2solver.cpp
solver/solver$(LIB_EXT): solver/check_sat_result$(OBJ_EXT) solver/combined_solver$(OBJ_EXT) solver/solver$(OBJ_EXT) solver/solver_na2as$(OBJ_EXT) solver/tactic2solver$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)solver/solver$(LIB_EXT) solver/check_sat_result$(OBJ_EXT) solver/combined_solver$(OBJ_EXT) solver/solver$(OBJ_EXT) solver/solver_na2as$(OBJ_EXT) solver/tactic2solver$(OBJ_EXT)
solver: solver/solver$(LIB_EXT)

includes_24 = -I../src/solver -I../src/model -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/tactic
interp/iz3hash.h.node: ../src/interp/iz3hash.h util/hash.h.node
	@echo done > interp/iz3hash.h.node
interp/iz3mgr.h.node: ../src/interp/iz3mgr.h interp/iz3hash.h.node ast/well_sorted.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/datatype_decl_plugin.h.node ast/array_decl_plugin.h.node ast/ast_translation.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_smt_pp.h.node ast/ast_smt2_pp.h.node ast/rewriter/th_rewriter.h.node ast/rewriter/var_subst.h.node ast/expr_substitution.h.node ast/pp.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node util/scoped_timer.h.node
	@echo done > interp/iz3mgr.h.node
interp/iz3scopes.h.node: ../src/interp/iz3scopes.h interp/iz3hash.h.node
	@echo done > interp/iz3scopes.h.node
interp/iz3base.h.node: ../src/interp/iz3base.h interp/iz3mgr.h.node interp/iz3scopes.h.node
	@echo done > interp/iz3base.h.node
interp/../smt/smt_solver.h.node: ../src/interp/../smt/smt_solver.h ast/ast.h.node util/params.h.node
	@echo done > interp/../smt/smt_solver.h.node
interp/iz3base$(OBJ_EXT): ../src/interp/iz3base.cpp interp/iz3base.h.node solver/solver.h.node interp/../smt/smt_solver.h.node
	@echo src/interp/iz3base.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3base$(OBJ_EXT) ../src/interp/iz3base.cpp
interp/iz3checker.h.node: ../src/interp/iz3checker.h interp/iz3mgr.h.node solver/solver.h.node
	@echo done > interp/iz3checker.h.node
interp/iz3checker$(OBJ_EXT): ../src/interp/iz3checker.cpp interp/iz3base.h.node interp/iz3checker.h.node
	@echo src/interp/iz3checker.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3checker$(OBJ_EXT) ../src/interp/iz3checker.cpp
interp/foci2.h.node: ../src/interp/foci2.h
	@echo done > interp/foci2.h.node
interp/iz3secondary.h.node: ../src/interp/iz3secondary.h interp/iz3base.h.node
	@echo done > interp/iz3secondary.h.node
interp/iz3foci.h.node: ../src/interp/iz3foci.h interp/iz3secondary.h.node
	@echo done > interp/iz3foci.h.node
interp/iz3foci$(OBJ_EXT): ../src/interp/iz3foci.cpp interp/iz3hash.h.node interp/foci2.h.node interp/iz3foci.h.node
	@echo src/interp/iz3foci.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3foci$(OBJ_EXT) ../src/interp/iz3foci.cpp
interp/iz3profiling.h.node: ../src/interp/iz3profiling.h
	@echo done > interp/iz3profiling.h.node
interp/iz3proof.h.node: ../src/interp/iz3proof.h interp/iz3base.h.node interp/iz3secondary.h.node
	@echo done > interp/iz3proof.h.node
interp/iz3translate.h.node: ../src/interp/iz3translate.h interp/iz3proof.h.node interp/iz3secondary.h.node
	@echo done > interp/iz3translate.h.node
interp/iz3interp.h.node: ../src/interp/iz3interp.h interp/iz3hash.h.node solver/solver.h.node
	@echo done > interp/iz3interp.h.node
interp/iz3interp$(OBJ_EXT): ../src/interp/iz3interp.cpp interp/iz3profiling.h.node interp/iz3translate.h.node interp/iz3foci.h.node interp/iz3proof.h.node interp/iz3hash.h.node interp/iz3interp.h.node ast/scoped_proof.h.node
	@echo src/interp/iz3interp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3interp$(OBJ_EXT) ../src/interp/iz3interp.cpp
interp/iz3mgr$(OBJ_EXT): ../src/interp/iz3mgr.cpp interp/iz3mgr.h.node ast/expr_abstract.h.node util/params.h.node
	@echo src/interp/iz3mgr.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3mgr$(OBJ_EXT) ../src/interp/iz3mgr.cpp
interp/iz3pp.h.node: ../src/interp/iz3pp.h interp/iz3mgr.h.node
	@echo done > interp/iz3pp.h.node
interp/iz3pp$(OBJ_EXT): ../src/interp/iz3pp.cpp interp/iz3mgr.h.node interp/iz3pp.h.node ast/func_decl_dependencies.h.node ast/for_each_expr.h.node ast/ast_smt_pp.h.node ast/ast_smt2_pp.h.node ast/expr_functors.h.node ast/expr_abstract.h.node
	@echo src/interp/iz3pp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3pp$(OBJ_EXT) ../src/interp/iz3pp.cpp
interp/iz3profiling$(OBJ_EXT): ../src/interp/iz3profiling.cpp interp/iz3profiling.h.node util/stopwatch.h.node
	@echo src/interp/iz3profiling.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3profiling$(OBJ_EXT) ../src/interp/iz3profiling.cpp
interp/iz3proof$(OBJ_EXT): ../src/interp/iz3proof.cpp interp/iz3proof.h.node interp/iz3profiling.h.node
	@echo src/interp/iz3proof.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3proof$(OBJ_EXT) ../src/interp/iz3proof.cpp
interp/iz3proof_itp.h.node: ../src/interp/iz3proof_itp.h interp/iz3base.h.node interp/iz3secondary.h.node
	@echo done > interp/iz3proof_itp.h.node
interp/iz3proof_itp$(OBJ_EXT): ../src/interp/iz3proof_itp.cpp interp/iz3proof_itp.h.node
	@echo src/interp/iz3proof_itp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3proof_itp$(OBJ_EXT) ../src/interp/iz3proof_itp.cpp
interp/iz3scopes$(OBJ_EXT): ../src/interp/iz3scopes.cpp interp/iz3scopes.h.node
	@echo src/interp/iz3scopes.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3scopes$(OBJ_EXT) ../src/interp/iz3scopes.cpp
interp/iz3translate$(OBJ_EXT): ../src/interp/iz3translate.cpp interp/iz3translate.h.node interp/iz3proof.h.node interp/iz3profiling.h.node interp/iz3interp.h.node interp/iz3proof_itp.h.node
	@echo src/interp/iz3translate.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3translate$(OBJ_EXT) ../src/interp/iz3translate.cpp
interp/iz3translate_direct$(OBJ_EXT): ../src/interp/iz3translate_direct.cpp interp/iz3translate.h.node interp/iz3proof.h.node interp/iz3profiling.h.node interp/iz3interp.h.node
	@echo src/interp/iz3translate_direct.cpp
	@$(CXX) $(CXXFLAGS) $(includes_24) $(CXX_OUT_FLAG)interp/iz3translate_direct$(OBJ_EXT) ../src/interp/iz3translate_direct.cpp
interp/interp$(LIB_EXT): interp/iz3base$(OBJ_EXT) interp/iz3checker$(OBJ_EXT) interp/iz3foci$(OBJ_EXT) interp/iz3interp$(OBJ_EXT) interp/iz3mgr$(OBJ_EXT) interp/iz3pp$(OBJ_EXT) interp/iz3profiling$(OBJ_EXT) interp/iz3proof$(OBJ_EXT) interp/iz3proof_itp$(OBJ_EXT) interp/iz3scopes$(OBJ_EXT) interp/iz3translate$(OBJ_EXT) interp/iz3translate_direct$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)interp/interp$(LIB_EXT) interp/iz3base$(OBJ_EXT) interp/iz3checker$(OBJ_EXT) interp/iz3foci$(OBJ_EXT) interp/iz3interp$(OBJ_EXT) interp/iz3mgr$(OBJ_EXT) interp/iz3pp$(OBJ_EXT) interp/iz3profiling$(OBJ_EXT) interp/iz3proof$(OBJ_EXT) interp/iz3proof_itp$(OBJ_EXT) interp/iz3scopes$(OBJ_EXT) interp/iz3translate$(OBJ_EXT) interp/iz3translate_direct$(OBJ_EXT)
interp: interp/interp$(LIB_EXT)

includes_25 = -I../src/solver -I../src/model -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/tactic -I../src/interp
cmd_context/pdecl.h.node: ../src/cmd_context/pdecl.h ast/ast.h.node util/obj_hashtable.h.node util/dictionary.h.node ast/format.h.node
	@echo done > cmd_context/pdecl.h.node
cmd_context/tactic_cmds.h.node: ../src/cmd_context/tactic_cmds.h ast/ast.h.node util/cmd_context_types.h.node util/ref.h.node
	@echo done > cmd_context/tactic_cmds.h.node
cmd_context/tactic_manager.h.node: ../src/cmd_context/tactic_manager.h cmd_context/tactic_cmds.h.node util/dictionary.h.node
	@echo done > cmd_context/tactic_manager.h.node
cmd_context/check_logic.h.node: ../src/cmd_context/check_logic.h ast/ast.h.node
	@echo done > cmd_context/check_logic.h.node
cmd_context/context_params.h.node: ../src/cmd_context/context_params.h util/params.h.node
	@echo done > cmd_context/context_params.h.node
cmd_context/cmd_context.h.node: ../src/cmd_context/cmd_context.h ast/ast.h.node ast/ast_printer.h.node cmd_context/pdecl.h.node util/dictionary.h.node solver/solver.h.node ast/datatype_decl_plugin.h.node util/stopwatch.h.node util/cmd_context_types.h.node util/event_handler.h.node util/sexpr.h.node cmd_context/tactic_manager.h.node cmd_context/check_logic.h.node solver/progress_callback.h.node util/scoped_ptr_vector.h.node cmd_context/context_params.h.node
	@echo done > cmd_context/cmd_context.h.node
util/version.h.node: ../src/util/version.h
	@echo done > util/version.h.node
cmd_context/cmd_util.h.node: ../src/cmd_context/cmd_util.h
	@echo done > cmd_context/cmd_util.h.node
cmd_context/simplify_cmd.h.node: ../src/cmd_context/simplify_cmd.h
	@echo done > cmd_context/simplify_cmd.h.node
cmd_context/eval_cmd.h.node: ../src/cmd_context/eval_cmd.h
	@echo done > cmd_context/eval_cmd.h.node
model/model_params.hpp.node: ../src/model/model_params.hpp util/params.h.node util/gparams.h.node
	@echo done > model/model_params.hpp.node
cmd_context/basic_cmds$(OBJ_EXT): ../src/cmd_context/basic_cmds.cpp cmd_context/cmd_context.h.node util/version.h.node ast/ast_smt_pp.h.node ast/ast_smt2_pp.h.node ast/ast_pp.h.node model/model_smt2_pp.h.node model/model_v2_pp.h.node ast/array_decl_plugin.h.node ast/pp.h.node cmd_context/cmd_util.h.node cmd_context/simplify_cmd.h.node cmd_context/eval_cmd.h.node util/gparams.h.node model/model_params.hpp.node util/env_params.h.node
	@echo src/cmd_context/basic_cmds.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/basic_cmds$(OBJ_EXT) ../src/cmd_context/basic_cmds.cpp
cmd_context/check_logic$(OBJ_EXT): ../src/cmd_context/check_logic.cpp cmd_context/check_logic.h.node ast/arith_decl_plugin.h.node ast/array_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/ast_pp.h.node ast/for_each_expr.h.node
	@echo src/cmd_context/check_logic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/check_logic$(OBJ_EXT) ../src/cmd_context/check_logic.cpp
cmd_context/basic_cmds.h.node: ../src/cmd_context/basic_cmds.h
	@echo done > cmd_context/basic_cmds.h.node
cmd_context/interpolant_cmds.h.node: ../src/cmd_context/interpolant_cmds.h
	@echo done > cmd_context/interpolant_cmds.h.node
cmd_context/cmd_context$(OBJ_EXT): ../src/cmd_context/cmd_context.cpp util/tptr.h.node cmd_context/cmd_context.h.node ast/func_decl_dependencies.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node ast/datatype_decl_plugin.h.node ast/seq_decl_plugin.h.node ast/float_decl_plugin.h.node ast/ast_pp.h.node ast/rewriter/var_subst.h.node ast/pp.h.node ast/ast_smt2_pp.h.node cmd_context/basic_cmds.h.node util/cancel_eh.h.node util/scoped_ctrl_c.h.node util/dec_ref_util.h.node ast/decl_collector.h.node ast/well_sorted.h.node model/model_evaluator.h.node ast/for_each_expr.h.node util/scoped_timer.h.node cmd_context/interpolant_cmds.h.node
	@echo src/cmd_context/cmd_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/cmd_context$(OBJ_EXT) ../src/cmd_context/cmd_context.cpp
cmd_context/cmd_context_to_goal$(OBJ_EXT): ../src/cmd_context/cmd_context_to_goal.cpp cmd_context/cmd_context.h.node tactic/goal.h.node
	@echo src/cmd_context/cmd_context_to_goal.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/cmd_context_to_goal$(OBJ_EXT) ../src/cmd_context/cmd_context_to_goal.cpp
cmd_context/cmd_util$(OBJ_EXT): ../src/cmd_context/cmd_util.cpp cmd_context/cmd_context.h.node
	@echo src/cmd_context/cmd_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/cmd_util$(OBJ_EXT) ../src/cmd_context/cmd_util.cpp
cmd_context/context_params$(OBJ_EXT): ../src/cmd_context/context_params.cpp cmd_context/context_params.h.node util/gparams.h.node util/params.h.node ast/ast.h.node solver/solver.h.node
	@echo src/cmd_context/context_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/context_params$(OBJ_EXT) ../src/cmd_context/context_params.cpp
cmd_context/echo_tactic$(OBJ_EXT): ../src/cmd_context/echo_tactic.cpp tactic/tactic.h.node tactic/probe.h.node cmd_context/cmd_context.h.node
	@echo src/cmd_context/echo_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/echo_tactic$(OBJ_EXT) ../src/cmd_context/echo_tactic.cpp
cmd_context/parametric_cmd.h.node: ../src/cmd_context/parametric_cmd.h util/params.h.node util/symbol.h.node util/string_buffer.h.node util/cmd_context_types.h.node
	@echo done > cmd_context/parametric_cmd.h.node
cmd_context/eval_cmd$(OBJ_EXT): ../src/cmd_context/eval_cmd.cpp cmd_context/cmd_context.h.node model/model_evaluator.h.node cmd_context/parametric_cmd.h.node util/scoped_timer.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node
	@echo src/cmd_context/eval_cmd.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/eval_cmd$(OBJ_EXT) ../src/cmd_context/eval_cmd.cpp
interp/interp_params.hpp.node: ../src/interp/interp_params.hpp util/params.h.node util/gparams.h.node
	@echo done > interp/interp_params.hpp.node
cmd_context/interpolant_cmds$(OBJ_EXT): ../src/cmd_context/interpolant_cmds.cpp cmd_context/cmd_context.h.node cmd_context/cmd_util.h.node util/scoped_timer.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node ast/ast_pp.h.node ast/ast_smt_pp.h.node ast/ast_smt2_pp.h.node cmd_context/parametric_cmd.h.node util/mpq.h.node ast/expr2var.h.node ast/pp.h.node ast/pp_params.hpp.node interp/iz3interp.h.node interp/iz3checker.h.node interp/iz3profiling.h.node interp/interp_params.hpp.node ast/scoped_proof.h.node
	@echo src/cmd_context/interpolant_cmds.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/interpolant_cmds$(OBJ_EXT) ../src/cmd_context/interpolant_cmds.cpp
cmd_context/parametric_cmd$(OBJ_EXT): ../src/cmd_context/parametric_cmd.cpp cmd_context/cmd_context.h.node cmd_context/parametric_cmd.h.node
	@echo src/cmd_context/parametric_cmd.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/parametric_cmd$(OBJ_EXT) ../src/cmd_context/parametric_cmd.cpp
cmd_context/pdecl$(OBJ_EXT): ../src/cmd_context/pdecl.cpp cmd_context/pdecl.h.node ast/datatype_decl_plugin.h.node
	@echo src/cmd_context/pdecl.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/pdecl$(OBJ_EXT) ../src/cmd_context/pdecl.cpp
cmd_context/simplify_cmd$(OBJ_EXT): ../src/cmd_context/simplify_cmd.cpp cmd_context/cmd_context.h.node ast/rewriter/th_rewriter.h.node ast/shared_occs.h.node ast/ast_smt_pp.h.node ast/for_each_expr.h.node cmd_context/parametric_cmd.h.node util/scoped_timer.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node
	@echo src/cmd_context/simplify_cmd.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/simplify_cmd$(OBJ_EXT) ../src/cmd_context/simplify_cmd.cpp
cmd_context/cmd_context_to_goal.h.node: ../src/cmd_context/cmd_context_to_goal.h
	@echo done > cmd_context/cmd_context_to_goal.h.node
cmd_context/echo_tactic.h.node: ../src/cmd_context/echo_tactic.h
	@echo done > cmd_context/echo_tactic.h.node
cmd_context/tactic_cmds$(OBJ_EXT): ../src/cmd_context/tactic_cmds.cpp cmd_context/tactic_cmds.h.node cmd_context/cmd_context.h.node cmd_context/cmd_util.h.node cmd_context/parametric_cmd.h.node util/scoped_timer.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node model/model_smt2_pp.h.node ast/ast_smt2_pp.h.node tactic/tactic.h.node tactic/tactical.h.node tactic/probe.h.node solver/check_sat_result.h.node cmd_context/cmd_context_to_goal.h.node cmd_context/echo_tactic.h.node
	@echo src/cmd_context/tactic_cmds.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/tactic_cmds$(OBJ_EXT) ../src/cmd_context/tactic_cmds.cpp
cmd_context/tactic_manager$(OBJ_EXT): ../src/cmd_context/tactic_manager.cpp cmd_context/tactic_manager.h.node
	@echo src/cmd_context/tactic_manager.cpp
	@$(CXX) $(CXXFLAGS) $(includes_25) $(CXX_OUT_FLAG)cmd_context/tactic_manager$(OBJ_EXT) ../src/cmd_context/tactic_manager.cpp
cmd_context/cmd_context$(LIB_EXT): cmd_context/basic_cmds$(OBJ_EXT) cmd_context/check_logic$(OBJ_EXT) cmd_context/cmd_context$(OBJ_EXT) cmd_context/cmd_context_to_goal$(OBJ_EXT) cmd_context/cmd_util$(OBJ_EXT) cmd_context/context_params$(OBJ_EXT) cmd_context/echo_tactic$(OBJ_EXT) cmd_context/eval_cmd$(OBJ_EXT) cmd_context/interpolant_cmds$(OBJ_EXT) cmd_context/parametric_cmd$(OBJ_EXT) cmd_context/pdecl$(OBJ_EXT) cmd_context/simplify_cmd$(OBJ_EXT) cmd_context/tactic_cmds$(OBJ_EXT) cmd_context/tactic_manager$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)cmd_context/cmd_context$(LIB_EXT) cmd_context/basic_cmds$(OBJ_EXT) cmd_context/check_logic$(OBJ_EXT) cmd_context/cmd_context$(OBJ_EXT) cmd_context/cmd_context_to_goal$(OBJ_EXT) cmd_context/cmd_util$(OBJ_EXT) cmd_context/context_params$(OBJ_EXT) cmd_context/echo_tactic$(OBJ_EXT) cmd_context/eval_cmd$(OBJ_EXT) cmd_context/interpolant_cmds$(OBJ_EXT) cmd_context/parametric_cmd$(OBJ_EXT) cmd_context/pdecl$(OBJ_EXT) cmd_context/simplify_cmd$(OBJ_EXT) cmd_context/tactic_cmds$(OBJ_EXT) cmd_context/tactic_manager$(OBJ_EXT)
cmd_context: cmd_context/cmd_context$(LIB_EXT)

includes_26 = -I../src/cmd_context -I../src/solver -I../src/model -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/tactic -I../src/interp -I../src/math/subpaving/tactic -I../src/tactic/core -I../src/ast/normal_forms -I../src/math/subpaving -I../src/math/interval -I../src/tactic/arith -I../src/sat
cmd_context/extra_cmds/dbg_cmds$(OBJ_EXT): ../src/cmd_context/extra_cmds/dbg_cmds.cpp cmd_context/cmd_context.h.node cmd_context/cmd_util.h.node ast/rewriter/rewriter.h.node ast/shared_occs.h.node ast/for_each_expr.h.node ast/rewriter/rewriter.h.node ast/rewriter/bool_rewriter.h.node ast/ast_lt.h.node cmd_context/simplify_cmd.h.node ast/ast_smt2_pp.h.node tactic/arith/bound_manager.h.node ast/used_vars.h.node ast/rewriter/var_subst.h.node
	@echo src/cmd_context/extra_cmds/dbg_cmds.cpp
	@$(CXX) $(CXXFLAGS) $(includes_26) $(CXX_OUT_FLAG)cmd_context/extra_cmds/dbg_cmds$(OBJ_EXT) ../src/cmd_context/extra_cmds/dbg_cmds.cpp
math/polynomial/polynomial_var2value.h.node: ../src/math/polynomial/polynomial_var2value.h math/polynomial/polynomial.h.node util/scoped_numeral_vector.h.node
	@echo done > math/polynomial/polynomial_var2value.h.node
cmd_context/extra_cmds/polynomial_cmds$(OBJ_EXT): ../src/cmd_context/extra_cmds/polynomial_cmds.cpp cmd_context/cmd_context.h.node cmd_context/cmd_util.h.node util/scoped_timer.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node ast/ast_smt2_pp.h.node ast/expr2polynomial.h.node cmd_context/parametric_cmd.h.node util/mpq.h.node math/polynomial/algebraic_numbers.h.node math/polynomial/polynomial_var2value.h.node ast/expr2var.h.node ast/pp.h.node ast/pp_params.hpp.node
	@echo src/cmd_context/extra_cmds/polynomial_cmds.cpp
	@$(CXX) $(CXXFLAGS) $(includes_26) $(CXX_OUT_FLAG)cmd_context/extra_cmds/polynomial_cmds$(OBJ_EXT) ../src/cmd_context/extra_cmds/polynomial_cmds.cpp
cmd_context/extra_cmds/subpaving_cmds$(OBJ_EXT): ../src/cmd_context/extra_cmds/subpaving_cmds.cpp cmd_context/cmd_context.h.node cmd_context/cmd_util.h.node math/subpaving/tactic/expr2subpaving.h.node ast/rewriter/th_rewriter.h.node ast/ast_smt2_pp.h.node ast/expr2var.h.node
	@echo src/cmd_context/extra_cmds/subpaving_cmds.cpp
	@$(CXX) $(CXXFLAGS) $(includes_26) $(CXX_OUT_FLAG)cmd_context/extra_cmds/subpaving_cmds$(OBJ_EXT) ../src/cmd_context/extra_cmds/subpaving_cmds.cpp
cmd_context/extra_cmds/extra_cmds$(LIB_EXT): cmd_context/extra_cmds/dbg_cmds$(OBJ_EXT) cmd_context/extra_cmds/polynomial_cmds$(OBJ_EXT) cmd_context/extra_cmds/subpaving_cmds$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)cmd_context/extra_cmds/extra_cmds$(LIB_EXT) cmd_context/extra_cmds/dbg_cmds$(OBJ_EXT) cmd_context/extra_cmds/polynomial_cmds$(OBJ_EXT) cmd_context/extra_cmds/subpaving_cmds$(OBJ_EXT)
extra_cmds: cmd_context/extra_cmds/extra_cmds$(LIB_EXT)

includes_27 = -I../src/cmd_context -I../src/solver -I../src/model -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/tactic -I../src/interp -I../src/parsers/util
parsers/smt2/smt2parser.h.node: ../src/parsers/smt2/smt2parser.h cmd_context/cmd_context.h.node
	@echo done > parsers/smt2/smt2parser.h.node
parsers/smt2/smt2scanner.h.node: ../src/parsers/smt2/smt2scanner.h util/symbol.h.node util/vector.h.node util/rational.h.node cmd_context/cmd_context.h.node
	@echo done > parsers/smt2/smt2scanner.h.node
ast/has_free_vars.h.node: ../src/ast/has_free_vars.h
	@echo done > ast/has_free_vars.h.node
parsers/util/parser_params.hpp.node: ../src/parsers/util/parser_params.hpp util/params.h.node util/gparams.h.node
	@echo done > parsers/util/parser_params.hpp.node
parsers/smt2/smt2parser$(OBJ_EXT): ../src/parsers/smt2/smt2parser.cpp parsers/smt2/smt2parser.h.node parsers/smt2/smt2scanner.h.node util/stack.h.node ast/datatype_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/arith_decl_plugin.h.node ast/ast_pp.h.node ast/well_sorted.h.node parsers/util/pattern_validation.h.node ast/rewriter/rewriter.h.node ast/has_free_vars.h.node ast/ast_smt2_pp.h.node parsers/util/parser_params.hpp.node
	@echo src/parsers/smt2/smt2parser.cpp
	@$(CXX) $(CXXFLAGS) $(includes_27) $(CXX_OUT_FLAG)parsers/smt2/smt2parser$(OBJ_EXT) ../src/parsers/smt2/smt2parser.cpp
parsers/smt2/smt2scanner$(OBJ_EXT): ../src/parsers/smt2/smt2scanner.cpp parsers/smt2/smt2scanner.h.node parsers/util/parser_params.hpp.node
	@echo src/parsers/smt2/smt2scanner.cpp
	@$(CXX) $(CXXFLAGS) $(includes_27) $(CXX_OUT_FLAG)parsers/smt2/smt2scanner$(OBJ_EXT) ../src/parsers/smt2/smt2scanner.cpp
parsers/smt2/smt2parser$(LIB_EXT): parsers/smt2/smt2parser$(OBJ_EXT) parsers/smt2/smt2scanner$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)parsers/smt2/smt2parser$(LIB_EXT) parsers/smt2/smt2parser$(OBJ_EXT) parsers/smt2/smt2scanner$(OBJ_EXT)
smt2parser: parsers/smt2/smt2parser$(LIB_EXT)

includes_28 = -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial
ast/proof_checker/proof_checker.h.node: ../src/ast/proof_checker/proof_checker.h ast/ast.h.node util/map.h.node
	@echo done > ast/proof_checker/proof_checker.h.node
ast/proof_checker/proof_checker$(OBJ_EXT): ../src/ast/proof_checker/proof_checker.cpp ast/proof_checker/proof_checker.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/ast_smt_pp.h.node ast/arith_decl_plugin.h.node ast/rewriter/th_rewriter.h.node ast/rewriter/var_subst.h.node
	@echo src/ast/proof_checker/proof_checker.cpp
	@$(CXX) $(CXXFLAGS) $(includes_28) $(CXX_OUT_FLAG)ast/proof_checker/proof_checker$(OBJ_EXT) ../src/ast/proof_checker/proof_checker.cpp
ast/proof_checker/proof_checker$(LIB_EXT): ast/proof_checker/proof_checker$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/proof_checker/proof_checker$(LIB_EXT) ast/proof_checker/proof_checker$(OBJ_EXT)
proof_checker: ast/proof_checker/proof_checker$(LIB_EXT)

includes_29 = -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial
ast/simplifier/arith_simplifier_params.h.node: ../src/ast/simplifier/arith_simplifier_params.h util/params.h.node
	@echo done > ast/simplifier/arith_simplifier_params.h.node
ast/simplifier/arith_simplifier_params_helper.hpp.node: ../src/ast/simplifier/arith_simplifier_params_helper.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/simplifier/arith_simplifier_params_helper.hpp.node
ast/simplifier/arith_simplifier_params$(OBJ_EXT): ../src/ast/simplifier/arith_simplifier_params.cpp ast/simplifier/arith_simplifier_params.h.node ast/simplifier/arith_simplifier_params_helper.hpp.node
	@echo src/ast/simplifier/arith_simplifier_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/arith_simplifier_params$(OBJ_EXT) ../src/ast/simplifier/arith_simplifier_params.cpp
ast/simplifier/simplifier_plugin.h.node: ../src/ast/simplifier/simplifier_plugin.h ast/ast.h.node
	@echo done > ast/simplifier/simplifier_plugin.h.node
ast/simplifier/basic_simplifier_plugin.h.node: ../src/ast/simplifier/basic_simplifier_plugin.h ast/simplifier/simplifier_plugin.h.node
	@echo done > ast/simplifier/basic_simplifier_plugin.h.node
ast/simplifier/poly_simplifier_plugin.h.node: ../src/ast/simplifier/poly_simplifier_plugin.h ast/simplifier/simplifier_plugin.h.node
	@echo done > ast/simplifier/poly_simplifier_plugin.h.node
ast/simplifier/arith_simplifier_plugin.h.node: ../src/ast/simplifier/arith_simplifier_plugin.h ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/poly_simplifier_plugin.h.node ast/arith_decl_plugin.h.node ast/simplifier/arith_simplifier_params.h.node
	@echo done > ast/simplifier/arith_simplifier_plugin.h.node
ast/simplifier/arith_simplifier_plugin$(OBJ_EXT): ../src/ast/simplifier/arith_simplifier_plugin.cpp ast/simplifier/arith_simplifier_plugin.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/simplifier/arith_simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/arith_simplifier_plugin$(OBJ_EXT) ../src/ast/simplifier/arith_simplifier_plugin.cpp
ast/simplifier/array_simplifier_params.h.node: ../src/ast/simplifier/array_simplifier_params.h util/params.h.node
	@echo done > ast/simplifier/array_simplifier_params.h.node
ast/simplifier/array_simplifier_params_helper.hpp.node: ../src/ast/simplifier/array_simplifier_params_helper.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/simplifier/array_simplifier_params_helper.hpp.node
ast/simplifier/array_simplifier_params$(OBJ_EXT): ../src/ast/simplifier/array_simplifier_params.cpp ast/simplifier/array_simplifier_params.h.node ast/simplifier/array_simplifier_params_helper.hpp.node
	@echo src/ast/simplifier/array_simplifier_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/array_simplifier_params$(OBJ_EXT) ../src/ast/simplifier/array_simplifier_params.cpp
ast/simplifier/base_simplifier.h.node: ../src/ast/simplifier/base_simplifier.h ast/expr_map.h.node
	@echo done > ast/simplifier/base_simplifier.h.node
util/plugin_manager.h.node: ../src/util/plugin_manager.h util/util.h.node
	@echo done > util/plugin_manager.h.node
ast/simplifier/simplifier.h.node: ../src/ast/simplifier/simplifier.h ast/simplifier/base_simplifier.h.node ast/simplifier/simplifier_plugin.h.node util/plugin_manager.h.node ast/ast_util.h.node util/obj_hashtable.h.node
	@echo done > ast/simplifier/simplifier.h.node
ast/simplifier/array_simplifier_plugin.h.node: ../src/ast/simplifier/array_simplifier_plugin.h ast/ast.h.node util/map.h.node ast/array_decl_plugin.h.node ast/simplifier/simplifier_plugin.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/array_simplifier_params.h.node ast/simplifier/simplifier.h.node util/obj_hashtable.h.node util/lbool.h.node
	@echo done > ast/simplifier/array_simplifier_plugin.h.node
ast/simplifier/array_simplifier_plugin$(OBJ_EXT): ../src/ast/simplifier/array_simplifier_plugin.cpp ast/simplifier/array_simplifier_plugin.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node
	@echo src/ast/simplifier/array_simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/array_simplifier_plugin$(OBJ_EXT) ../src/ast/simplifier/array_simplifier_plugin.cpp
ast/simplifier/basic_simplifier_plugin$(OBJ_EXT): ../src/ast/simplifier/basic_simplifier_plugin.cpp ast/simplifier/basic_simplifier_plugin.h.node ast/ast_ll_pp.h.node ast/rewriter/bool_rewriter.h.node
	@echo src/ast/simplifier/basic_simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/basic_simplifier_plugin$(OBJ_EXT) ../src/ast/simplifier/basic_simplifier_plugin.cpp
ast/simplifier/bv_simplifier_params.h.node: ../src/ast/simplifier/bv_simplifier_params.h util/params.h.node
	@echo done > ast/simplifier/bv_simplifier_params.h.node
ast/simplifier/bv_simplifier_plugin.h.node: ../src/ast/simplifier/bv_simplifier_plugin.h ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/poly_simplifier_plugin.h.node ast/bv_decl_plugin.h.node util/map.h.node ast/simplifier/bv_simplifier_params.h.node ast/arith_decl_plugin.h.node
	@echo done > ast/simplifier/bv_simplifier_plugin.h.node
ast/simplifier/bit2int.h.node: ../src/ast/simplifier/bit2int.h ast/bv_decl_plugin.h.node ast/arith_decl_plugin.h.node ast/act_cache.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/bv_simplifier_plugin.h.node
	@echo done > ast/simplifier/bit2int.h.node
ast/simplifier/bit2int$(OBJ_EXT): ../src/ast/simplifier/bit2int.cpp ast/simplifier/bit2int.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/for_each_ast.h.node
	@echo src/ast/simplifier/bit2int.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/bit2int$(OBJ_EXT) ../src/ast/simplifier/bit2int.cpp
ast/simplifier/bv_elim.h.node: ../src/ast/simplifier/bv_elim.h ast/ast.h.node ast/simplifier/simplifier.h.node
	@echo done > ast/simplifier/bv_elim.h.node
ast/simplifier/bv_elim$(OBJ_EXT): ../src/ast/simplifier/bv_elim.cpp ast/simplifier/bv_elim.h.node ast/bv_decl_plugin.h.node ast/rewriter/var_subst.h.node
	@echo src/ast/simplifier/bv_elim.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/bv_elim$(OBJ_EXT) ../src/ast/simplifier/bv_elim.cpp
ast/simplifier/bv_simplifier_params_helper.hpp.node: ../src/ast/simplifier/bv_simplifier_params_helper.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/simplifier/bv_simplifier_params_helper.hpp.node
ast/simplifier/bv_simplifier_params$(OBJ_EXT): ../src/ast/simplifier/bv_simplifier_params.cpp ast/simplifier/bv_simplifier_params.h.node ast/simplifier/bv_simplifier_params_helper.hpp.node
	@echo src/ast/simplifier/bv_simplifier_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/bv_simplifier_params$(OBJ_EXT) ../src/ast/simplifier/bv_simplifier_params.cpp
ast/simplifier/bv_simplifier_plugin$(OBJ_EXT): ../src/ast/simplifier/bv_simplifier_plugin.cpp ast/simplifier/bv_simplifier_plugin.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/arith_decl_plugin.h.node util/obj_hashtable.h.node ast/ast_util.h.node
	@echo src/ast/simplifier/bv_simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/bv_simplifier_plugin$(OBJ_EXT) ../src/ast/simplifier/bv_simplifier_plugin.cpp
ast/simplifier/datatype_simplifier_plugin.h.node: ../src/ast/simplifier/datatype_simplifier_plugin.h ast/simplifier/basic_simplifier_plugin.h.node ast/datatype_decl_plugin.h.node
	@echo done > ast/simplifier/datatype_simplifier_plugin.h.node
ast/simplifier/datatype_simplifier_plugin$(OBJ_EXT): ../src/ast/simplifier/datatype_simplifier_plugin.cpp ast/simplifier/datatype_simplifier_plugin.h.node
	@echo src/ast/simplifier/datatype_simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/datatype_simplifier_plugin$(OBJ_EXT) ../src/ast/simplifier/datatype_simplifier_plugin.cpp
ast/simplifier/distribute_forall.h.node: ../src/ast/simplifier/distribute_forall.h ast/ast.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/act_cache.h.node
	@echo done > ast/simplifier/distribute_forall.h.node
ast/simplifier/distribute_forall$(OBJ_EXT): ../src/ast/simplifier/distribute_forall.cpp ast/rewriter/var_subst.h.node ast/ast_ll_pp.h.node ast/simplifier/distribute_forall.h.node
	@echo src/ast/simplifier/distribute_forall.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/distribute_forall$(OBJ_EXT) ../src/ast/simplifier/distribute_forall.cpp
ast/simplifier/elim_bounds.h.node: ../src/ast/simplifier/elim_bounds.h ast/ast.h.node ast/arith_decl_plugin.h.node ast/simplifier/simplifier.h.node
	@echo done > ast/simplifier/elim_bounds.h.node
ast/simplifier/elim_bounds$(OBJ_EXT): ../src/ast/simplifier/elim_bounds.cpp ast/simplifier/elim_bounds.h.node ast/used_vars.h.node util/obj_hashtable.h.node ast/rewriter/var_subst.h.node ast/ast_pp.h.node
	@echo src/ast/simplifier/elim_bounds.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/elim_bounds$(OBJ_EXT) ../src/ast/simplifier/elim_bounds.cpp
ast/simplifier/inj_axiom.h.node: ../src/ast/simplifier/inj_axiom.h ast/ast.h.node
	@echo done > ast/simplifier/inj_axiom.h.node
ast/simplifier/inj_axiom$(OBJ_EXT): ../src/ast/simplifier/inj_axiom.cpp ast/simplifier/inj_axiom.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/has_free_vars.h.node ast/well_sorted.h.node
	@echo src/ast/simplifier/inj_axiom.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/inj_axiom$(OBJ_EXT) ../src/ast/simplifier/inj_axiom.cpp
ast/simplifier/maximise_ac_sharing.h.node: ../src/ast/simplifier/maximise_ac_sharing.h ast/simplifier/simplifier.h.node util/hashtable.h.node ast/bv_decl_plugin.h.node util/region.h.node
	@echo done > ast/simplifier/maximise_ac_sharing.h.node
ast/simplifier/maximise_ac_sharing$(OBJ_EXT): ../src/ast/simplifier/maximise_ac_sharing.cpp ast/simplifier/maximise_ac_sharing.h.node ast/ast_pp.h.node ast/simplifier/basic_simplifier_plugin.h.node
	@echo src/ast/simplifier/maximise_ac_sharing.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/maximise_ac_sharing$(OBJ_EXT) ../src/ast/simplifier/maximise_ac_sharing.cpp
ast/simplifier/poly_simplifier_plugin$(OBJ_EXT): ../src/ast/simplifier/poly_simplifier_plugin.cpp ast/simplifier/poly_simplifier_plugin.h.node ast/ast_pp.h.node ast/ast_util.h.node ast/ast_smt2_pp.h.node ast/ast_ll_pp.h.node
	@echo src/ast/simplifier/poly_simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/poly_simplifier_plugin$(OBJ_EXT) ../src/ast/simplifier/poly_simplifier_plugin.cpp
ast/simplifier/pull_ite_tree.h.node: ../src/ast/simplifier/pull_ite_tree.h ast/ast.h.node ast/simplifier/simplifier.h.node ast/recurse_expr.h.node util/obj_hashtable.h.node ast/expr_map.h.node
	@echo done > ast/simplifier/pull_ite_tree.h.node
ast/simplifier/pull_ite_tree$(OBJ_EXT): ../src/ast/simplifier/pull_ite_tree.cpp ast/simplifier/pull_ite_tree.h.node ast/recurse_expr_def.h.node ast/for_each_expr.h.node ast/ast_pp.h.node
	@echo src/ast/simplifier/pull_ite_tree.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/pull_ite_tree$(OBJ_EXT) ../src/ast/simplifier/pull_ite_tree.cpp
ast/simplifier/push_app_ite.h.node: ../src/ast/simplifier/push_app_ite.h ast/ast.h.node ast/simplifier/simplifier.h.node
	@echo done > ast/simplifier/push_app_ite.h.node
ast/simplifier/push_app_ite$(OBJ_EXT): ../src/ast/simplifier/push_app_ite.cpp ast/simplifier/push_app_ite.h.node ast/ast_pp.h.node
	@echo src/ast/simplifier/push_app_ite.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/push_app_ite$(OBJ_EXT) ../src/ast/simplifier/push_app_ite.cpp
ast/simplifier/simplifier$(OBJ_EXT): ../src/ast/simplifier/simplifier.cpp ast/simplifier/simplifier.h.node ast/rewriter/var_subst.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/well_sorted.h.node ast/ast_smt_pp.h.node
	@echo src/ast/simplifier/simplifier.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/simplifier$(OBJ_EXT) ../src/ast/simplifier/simplifier.cpp
ast/simplifier/simplifier_plugin$(OBJ_EXT): ../src/ast/simplifier/simplifier_plugin.cpp ast/simplifier/simplifier_plugin.h.node
	@echo src/ast/simplifier/simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_29) $(CXX_OUT_FLAG)ast/simplifier/simplifier_plugin$(OBJ_EXT) ../src/ast/simplifier/simplifier_plugin.cpp
ast/simplifier/simplifier$(LIB_EXT): ast/simplifier/arith_simplifier_params$(OBJ_EXT) ast/simplifier/arith_simplifier_plugin$(OBJ_EXT) ast/simplifier/array_simplifier_params$(OBJ_EXT) ast/simplifier/array_simplifier_plugin$(OBJ_EXT) ast/simplifier/basic_simplifier_plugin$(OBJ_EXT) ast/simplifier/bit2int$(OBJ_EXT) ast/simplifier/bv_elim$(OBJ_EXT) ast/simplifier/bv_simplifier_params$(OBJ_EXT) ast/simplifier/bv_simplifier_plugin$(OBJ_EXT) ast/simplifier/datatype_simplifier_plugin$(OBJ_EXT) ast/simplifier/distribute_forall$(OBJ_EXT) ast/simplifier/elim_bounds$(OBJ_EXT) ast/simplifier/inj_axiom$(OBJ_EXT) ast/simplifier/maximise_ac_sharing$(OBJ_EXT) ast/simplifier/poly_simplifier_plugin$(OBJ_EXT) ast/simplifier/pull_ite_tree$(OBJ_EXT) ast/simplifier/push_app_ite$(OBJ_EXT) ast/simplifier/simplifier$(OBJ_EXT) ast/simplifier/simplifier_plugin$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/simplifier/simplifier$(LIB_EXT) ast/simplifier/arith_simplifier_params$(OBJ_EXT) ast/simplifier/arith_simplifier_plugin$(OBJ_EXT) ast/simplifier/array_simplifier_params$(OBJ_EXT) ast/simplifier/array_simplifier_plugin$(OBJ_EXT) ast/simplifier/basic_simplifier_plugin$(OBJ_EXT) ast/simplifier/bit2int$(OBJ_EXT) ast/simplifier/bv_elim$(OBJ_EXT) ast/simplifier/bv_simplifier_params$(OBJ_EXT) ast/simplifier/bv_simplifier_plugin$(OBJ_EXT) ast/simplifier/datatype_simplifier_plugin$(OBJ_EXT) ast/simplifier/distribute_forall$(OBJ_EXT) ast/simplifier/elim_bounds$(OBJ_EXT) ast/simplifier/inj_axiom$(OBJ_EXT) ast/simplifier/maximise_ac_sharing$(OBJ_EXT) ast/simplifier/poly_simplifier_plugin$(OBJ_EXT) ast/simplifier/pull_ite_tree$(OBJ_EXT) ast/simplifier/push_app_ite$(OBJ_EXT) ast/simplifier/simplifier$(OBJ_EXT) ast/simplifier/simplifier_plugin$(OBJ_EXT)
simplifier: ast/simplifier/simplifier$(LIB_EXT)

includes_30 = -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/rewriter
ast/fpa/fpa2bv_converter.h.node: ../src/ast/fpa/fpa2bv_converter.h ast/ast.h.node util/obj_hashtable.h.node util/ref_util.h.node ast/float_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/simplifier/basic_simplifier_plugin.h.node
	@echo done > ast/fpa/fpa2bv_converter.h.node
ast/fpa/fpa2bv_converter$(OBJ_EXT): ../src/ast/fpa/fpa2bv_converter.cpp ast/ast_smt2_pp.h.node ast/well_sorted.h.node ast/fpa/fpa2bv_converter.h.node
	@echo src/ast/fpa/fpa2bv_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_30) $(CXX_OUT_FLAG)ast/fpa/fpa2bv_converter$(OBJ_EXT) ../src/ast/fpa/fpa2bv_converter.cpp
ast/fpa/fpa$(LIB_EXT): ast/fpa/fpa2bv_converter$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/fpa/fpa$(LIB_EXT) ast/fpa/fpa2bv_converter$(OBJ_EXT)
fpa: ast/fpa/fpa$(LIB_EXT)

includes_31 = -I../src/ast/simplifier -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial
ast/macros/macro_util.h.node: ../src/ast/macros/macro_util.h ast/ast.h.node util/obj_hashtable.h.node ast/simplifier/simplifier.h.node
	@echo done > ast/macros/macro_util.h.node
ast/macros/macro_manager.h.node: ../src/ast/macros/macro_manager.h ast/ast_util.h.node util/obj_hashtable.h.node ast/simplifier/simplifier.h.node ast/recurse_expr.h.node ast/func_decl_dependencies.h.node ast/macros/macro_util.h.node
	@echo done > ast/macros/macro_manager.h.node
ast/macros/macro_finder.h.node: ../src/ast/macros/macro_finder.h ast/macros/macro_manager.h.node ast/simplifier/arith_simplifier_plugin.h.node
	@echo done > ast/macros/macro_finder.h.node
ast/macros/macro_finder$(OBJ_EXT): ../src/ast/macros/macro_finder.cpp ast/macros/macro_finder.h.node ast/occurs.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node
	@echo src/ast/macros/macro_finder.cpp
	@$(CXX) $(CXXFLAGS) $(includes_31) $(CXX_OUT_FLAG)ast/macros/macro_finder$(OBJ_EXT) ../src/ast/macros/macro_finder.cpp
ast/macros/macro_manager$(OBJ_EXT): ../src/ast/macros/macro_manager.cpp ast/macros/macro_manager.h.node ast/for_each_expr.h.node ast/rewriter/var_subst.h.node ast/ast_pp.h.node ast/recurse_expr_def.h.node
	@echo src/ast/macros/macro_manager.cpp
	@$(CXX) $(CXXFLAGS) $(includes_31) $(CXX_OUT_FLAG)ast/macros/macro_manager$(OBJ_EXT) ../src/ast/macros/macro_manager.cpp
ast/macros/macro_util$(OBJ_EXT): ../src/ast/macros/macro_util.cpp ast/macros/macro_util.h.node ast/occurs.h.node ast/simplifier/arith_simplifier_plugin.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/bv_simplifier_plugin.h.node ast/rewriter/var_subst.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_util.h.node ast/for_each_expr.h.node ast/well_sorted.h.node
	@echo src/ast/macros/macro_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_31) $(CXX_OUT_FLAG)ast/macros/macro_util$(OBJ_EXT) ../src/ast/macros/macro_util.cpp
ast/macros/quasi_macros.h.node: ../src/ast/macros/quasi_macros.h ast/macros/macro_manager.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/simplifier.h.node
	@echo done > ast/macros/quasi_macros.h.node
ast/macros/quasi_macros$(OBJ_EXT): ../src/ast/macros/quasi_macros.cpp ast/macros/quasi_macros.h.node ast/for_each_expr.h.node ast/ast_pp.h.node util/uint_set.h.node ast/rewriter/var_subst.h.node
	@echo src/ast/macros/quasi_macros.cpp
	@$(CXX) $(CXXFLAGS) $(includes_31) $(CXX_OUT_FLAG)ast/macros/quasi_macros$(OBJ_EXT) ../src/ast/macros/quasi_macros.cpp
ast/macros/macros$(LIB_EXT): ast/macros/macro_finder$(OBJ_EXT) ast/macros/macro_manager$(OBJ_EXT) ast/macros/macro_util$(OBJ_EXT) ast/macros/quasi_macros$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/macros/macros$(LIB_EXT) ast/macros/macro_finder$(OBJ_EXT) ast/macros/macro_manager$(OBJ_EXT) ast/macros/macro_util$(OBJ_EXT) ast/macros/quasi_macros$(OBJ_EXT)
macros: ast/macros/macros$(LIB_EXT)

includes_32 = -I../src/ast/normal_forms -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/parsers/smt2 -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/parsers/util -I../src/ast/simplifier
ast/pattern/expr_pattern_match.h.node: ../src/ast/pattern/expr_pattern_match.h ast/ast.h.node util/map.h.node
	@echo done > ast/pattern/expr_pattern_match.h.node
ast/pattern/expr_pattern_match$(OBJ_EXT): ../src/ast/pattern/expr_pattern_match.cpp ast/ast.h.node ast/pattern/expr_pattern_match.h.node ast/for_each_ast.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node cmd_context/cmd_context.h.node parsers/smt2/smt2parser.h.node
	@echo src/ast/pattern/expr_pattern_match.cpp
	@$(CXX) $(CXXFLAGS) $(includes_32) $(CXX_OUT_FLAG)ast/pattern/expr_pattern_match$(OBJ_EXT) ../src/ast/pattern/expr_pattern_match.cpp
ast/pattern/pattern_inference_params.h.node: ../src/ast/pattern/pattern_inference_params.h util/params.h.node
	@echo done > ast/pattern/pattern_inference_params.h.node
util/nat_set.h.node: ../src/util/nat_set.h util/vector.h.node
	@echo done > util/nat_set.h.node
ast/pattern/pattern_inference.h.node: ../src/ast/pattern/pattern_inference.h ast/ast.h.node ast/simplifier/simplifier.h.node ast/pattern/pattern_inference_params.h.node util/vector.h.node util/uint_set.h.node util/nat_set.h.node util/obj_hashtable.h.node util/obj_pair_hashtable.h.node util/map.h.node ast/pattern/expr_pattern_match.h.node
	@echo done > ast/pattern/pattern_inference.h.node
ast/pattern/database.h.node: ../src/ast/pattern/database.h
	@echo done > ast/pattern/database.h.node
ast/pattern/pattern_inference$(OBJ_EXT): ../src/ast/pattern/pattern_inference.cpp ast/pattern/pattern_inference.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/ast_util.h.node util/warning.h.node ast/arith_decl_plugin.h.node ast/normal_forms/pull_quant.h.node ast/well_sorted.h.node ast/for_each_expr.h.node ast/pattern/database.h.node
	@echo src/ast/pattern/pattern_inference.cpp
	@$(CXX) $(CXXFLAGS) $(includes_32) $(CXX_OUT_FLAG)ast/pattern/pattern_inference$(OBJ_EXT) ../src/ast/pattern/pattern_inference.cpp
ast/pattern/pattern_inference_params_helper.hpp.node: ../src/ast/pattern/pattern_inference_params_helper.hpp util/params.h.node util/gparams.h.node
	@echo done > ast/pattern/pattern_inference_params_helper.hpp.node
ast/pattern/pattern_inference_params$(OBJ_EXT): ../src/ast/pattern/pattern_inference_params.cpp ast/pattern/pattern_inference_params.h.node ast/pattern/pattern_inference_params_helper.hpp.node
	@echo src/ast/pattern/pattern_inference_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_32) $(CXX_OUT_FLAG)ast/pattern/pattern_inference_params$(OBJ_EXT) ../src/ast/pattern/pattern_inference_params.cpp
ast/pattern/pattern$(LIB_EXT): ast/pattern/expr_pattern_match$(OBJ_EXT) ast/pattern/pattern_inference$(OBJ_EXT) ast/pattern/pattern_inference_params$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/pattern/pattern$(LIB_EXT) ast/pattern/expr_pattern_match$(OBJ_EXT) ast/pattern/pattern_inference$(OBJ_EXT) ast/pattern/pattern_inference_params$(OBJ_EXT)
pattern: ast/pattern/pattern$(LIB_EXT)

includes_33 = -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier
ast/rewriter/bit_blaster/bit_blaster_params.h.node: ../src/ast/rewriter/bit_blaster/bit_blaster_params.h
	@echo done > ast/rewriter/bit_blaster/bit_blaster_params.h.node
ast/rewriter/bit_blaster/bit_blaster_tpl.h.node: ../src/ast/rewriter/bit_blaster/bit_blaster_tpl.h util/rational.h.node
	@echo done > ast/rewriter/bit_blaster/bit_blaster_tpl.h.node
ast/rewriter/bit_blaster/bit_blaster.h.node: ../src/ast/rewriter/bit_blaster/bit_blaster.h ast/simplifier/basic_simplifier_plugin.h.node ast/rewriter/bit_blaster/bit_blaster_params.h.node ast/rewriter/bit_blaster/bit_blaster_tpl.h.node ast/bv_decl_plugin.h.node util/rational.h.node
	@echo done > ast/rewriter/bit_blaster/bit_blaster.h.node
ast/rewriter/bit_blaster/bit_blaster_tpl_def.h.node: ../src/ast/rewriter/bit_blaster/bit_blaster_tpl_def.h ast/rewriter/bit_blaster/bit_blaster_tpl.h.node util/rational.h.node ast/ast_pp.h.node util/cooperate.h.node util/common_msgs.h.node ast/rewriter/rewriter_types.h.node
	@echo done > ast/rewriter/bit_blaster/bit_blaster_tpl_def.h.node
ast/rewriter/bit_blaster/bit_blaster$(OBJ_EXT): ../src/ast/rewriter/bit_blaster/bit_blaster.cpp ast/rewriter/bit_blaster/bit_blaster.h.node ast/rewriter/bit_blaster/bit_blaster_tpl_def.h.node ast/ast_pp.h.node ast/bv_decl_plugin.h.node
	@echo src/ast/rewriter/bit_blaster/bit_blaster.cpp
	@$(CXX) $(CXXFLAGS) $(includes_33) $(CXX_OUT_FLAG)ast/rewriter/bit_blaster/bit_blaster$(OBJ_EXT) ../src/ast/rewriter/bit_blaster/bit_blaster.cpp
ast/rewriter/bit_blaster/bit_blaster_rewriter.h.node: ../src/ast/rewriter/bit_blaster/bit_blaster_rewriter.h ast/ast.h.node util/obj_hashtable.h.node util/params.h.node
	@echo done > ast/rewriter/bit_blaster/bit_blaster_rewriter.h.node
ast/rewriter/bit_blaster/bit_blaster_rewriter$(OBJ_EXT): ../src/ast/rewriter/bit_blaster/bit_blaster_rewriter.cpp ast/rewriter/bit_blaster/bit_blaster_rewriter.h.node ast/bv_decl_plugin.h.node ast/rewriter/bit_blaster/bit_blaster_tpl_def.h.node ast/rewriter/rewriter_def.h.node ast/rewriter/bool_rewriter.h.node util/ref_util.h.node ast/ast_smt2_pp.h.node
	@echo src/ast/rewriter/bit_blaster/bit_blaster_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_33) $(CXX_OUT_FLAG)ast/rewriter/bit_blaster/bit_blaster_rewriter$(OBJ_EXT) ../src/ast/rewriter/bit_blaster/bit_blaster_rewriter.cpp
ast/rewriter/bit_blaster/bit_blaster$(LIB_EXT): ast/rewriter/bit_blaster/bit_blaster$(OBJ_EXT) ast/rewriter/bit_blaster/bit_blaster_rewriter$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)ast/rewriter/bit_blaster/bit_blaster$(LIB_EXT) ast/rewriter/bit_blaster/bit_blaster$(OBJ_EXT) ast/rewriter/bit_blaster/bit_blaster_rewriter$(OBJ_EXT)
bit_blaster: ast/rewriter/bit_blaster/bit_blaster$(LIB_EXT)

includes_34 = -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/rewriter -I../src/ast/pattern -I../src/ast/normal_forms -I../src/parsers/smt2 -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/parsers/util -I../src/ast/rewriter/bit_blaster
smt/params/dyn_ack_params.h.node: ../src/smt/params/dyn_ack_params.h
	@echo done > smt/params/dyn_ack_params.h.node
smt/params/dyn_ack_params$(OBJ_EXT): ../src/smt/params/dyn_ack_params.cpp smt/params/dyn_ack_params.h.node
	@echo src/smt/params/dyn_ack_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_34) $(CXX_OUT_FLAG)smt/params/dyn_ack_params$(OBJ_EXT) ../src/smt/params/dyn_ack_params.cpp
smt/params/preprocessor_params.h.node: ../src/smt/params/preprocessor_params.h ast/pattern/pattern_inference_params.h.node ast/rewriter/bit_blaster/bit_blaster_params.h.node ast/simplifier/bv_simplifier_params.h.node ast/simplifier/arith_simplifier_params.h.node
	@echo done > smt/params/preprocessor_params.h.node
smt/params/smt_params_helper.hpp.node: ../src/smt/params/smt_params_helper.hpp util/params.h.node util/gparams.h.node
	@echo done > smt/params/smt_params_helper.hpp.node
smt/params/preprocessor_params$(OBJ_EXT): ../src/smt/params/preprocessor_params.cpp smt/params/preprocessor_params.h.node smt/params/smt_params_helper.hpp.node
	@echo src/smt/params/preprocessor_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_34) $(CXX_OUT_FLAG)smt/params/preprocessor_params$(OBJ_EXT) ../src/smt/params/preprocessor_params.cpp
smt/params/qi_params.h.node: ../src/smt/params/qi_params.h util/util.h.node util/params.h.node
	@echo done > smt/params/qi_params.h.node
smt/params/qi_params$(OBJ_EXT): ../src/smt/params/qi_params.cpp smt/params/qi_params.h.node smt/params/smt_params_helper.hpp.node
	@echo src/smt/params/qi_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_34) $(CXX_OUT_FLAG)smt/params/qi_params$(OBJ_EXT) ../src/smt/params/qi_params.cpp
smt/params/theory_arith_params.h.node: ../src/smt/params/theory_arith_params.h util/params.h.node
	@echo done > smt/params/theory_arith_params.h.node
smt/params/theory_array_params.h.node: ../src/smt/params/theory_array_params.h ast/simplifier/array_simplifier_params.h.node
	@echo done > smt/params/theory_array_params.h.node
smt/params/theory_bv_params.h.node: ../src/smt/params/theory_bv_params.h util/params.h.node
	@echo done > smt/params/theory_bv_params.h.node
smt/params/theory_datatype_params.h.node: ../src/smt/params/theory_datatype_params.h
	@echo done > smt/params/theory_datatype_params.h.node
smt/params/smt_params.h.node: ../src/smt/params/smt_params.h ast/ast.h.node smt/params/dyn_ack_params.h.node smt/params/qi_params.h.node smt/params/theory_arith_params.h.node smt/params/theory_array_params.h.node smt/params/theory_bv_params.h.node smt/params/theory_datatype_params.h.node smt/params/preprocessor_params.h.node cmd_context/context_params.h.node
	@echo done > smt/params/smt_params.h.node
smt/params/smt_params$(OBJ_EXT): ../src/smt/params/smt_params.cpp smt/params/smt_params.h.node smt/params/smt_params_helper.hpp.node model/model_params.hpp.node util/gparams.h.node
	@echo src/smt/params/smt_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_34) $(CXX_OUT_FLAG)smt/params/smt_params$(OBJ_EXT) ../src/smt/params/smt_params.cpp
smt/params/theory_arith_params$(OBJ_EXT): ../src/smt/params/theory_arith_params.cpp smt/params/theory_arith_params.h.node smt/params/smt_params_helper.hpp.node
	@echo src/smt/params/theory_arith_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_34) $(CXX_OUT_FLAG)smt/params/theory_arith_params$(OBJ_EXT) ../src/smt/params/theory_arith_params.cpp
smt/params/theory_array_params$(OBJ_EXT): ../src/smt/params/theory_array_params.cpp smt/params/theory_array_params.h.node smt/params/smt_params_helper.hpp.node
	@echo src/smt/params/theory_array_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_34) $(CXX_OUT_FLAG)smt/params/theory_array_params$(OBJ_EXT) ../src/smt/params/theory_array_params.cpp
smt/params/theory_bv_params$(OBJ_EXT): ../src/smt/params/theory_bv_params.cpp smt/params/theory_bv_params.h.node smt/params/smt_params_helper.hpp.node
	@echo src/smt/params/theory_bv_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_34) $(CXX_OUT_FLAG)smt/params/theory_bv_params$(OBJ_EXT) ../src/smt/params/theory_bv_params.cpp
smt/params/smt_params$(LIB_EXT): smt/params/dyn_ack_params$(OBJ_EXT) smt/params/preprocessor_params$(OBJ_EXT) smt/params/qi_params$(OBJ_EXT) smt/params/smt_params$(OBJ_EXT) smt/params/theory_arith_params$(OBJ_EXT) smt/params/theory_array_params$(OBJ_EXT) smt/params/theory_bv_params$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)smt/params/smt_params$(LIB_EXT) smt/params/dyn_ack_params$(OBJ_EXT) smt/params/preprocessor_params$(OBJ_EXT) smt/params/qi_params$(OBJ_EXT) smt/params/smt_params$(OBJ_EXT) smt/params/theory_arith_params$(OBJ_EXT) smt/params/theory_array_params$(OBJ_EXT) smt/params/theory_bv_params$(OBJ_EXT)
smt_params: smt/params/smt_params$(LIB_EXT)

includes_35 = -I../src/model -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/smt/params -I../src/ast/pattern -I../src/ast/normal_forms -I../src/parsers/smt2 -I../src/cmd_context -I../src/solver -I../src/tactic -I../src/interp -I../src/parsers/util -I../src/ast/rewriter/bit_blaster
smt/proto_model/value_factory.h.node: ../src/smt/proto_model/value_factory.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > smt/proto_model/value_factory.h.node
smt/proto_model/struct_factory.h.node: ../src/smt/proto_model/struct_factory.h smt/proto_model/value_factory.h.node util/obj_hashtable.h.node
	@echo done > smt/proto_model/struct_factory.h.node
smt/proto_model/array_factory.h.node: ../src/smt/proto_model/array_factory.h smt/proto_model/struct_factory.h.node
	@echo done > smt/proto_model/array_factory.h.node
smt/proto_model/proto_model.h.node: ../src/smt/proto_model/proto_model.h model/model_core.h.node smt/proto_model/value_factory.h.node util/plugin_manager.h.node ast/simplifier/simplifier.h.node ast/arith_decl_plugin.h.node ast/func_decl_dependencies.h.node model/model.h.node util/params.h.node
	@echo done > smt/proto_model/proto_model.h.node
smt/proto_model/array_factory$(OBJ_EXT): ../src/smt/proto_model/array_factory.cpp smt/proto_model/array_factory.h.node ast/array_decl_plugin.h.node smt/proto_model/proto_model.h.node model/func_interp.h.node ast/ast_pp.h.node
	@echo src/smt/proto_model/array_factory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_35) $(CXX_OUT_FLAG)smt/proto_model/array_factory$(OBJ_EXT) ../src/smt/proto_model/array_factory.cpp
smt/proto_model/datatype_factory.h.node: ../src/smt/proto_model/datatype_factory.h smt/proto_model/struct_factory.h.node ast/datatype_decl_plugin.h.node
	@echo done > smt/proto_model/datatype_factory.h.node
smt/proto_model/datatype_factory$(OBJ_EXT): ../src/smt/proto_model/datatype_factory.cpp smt/proto_model/datatype_factory.h.node smt/proto_model/proto_model.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/expr_functors.h.node
	@echo src/smt/proto_model/datatype_factory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_35) $(CXX_OUT_FLAG)smt/proto_model/datatype_factory$(OBJ_EXT) ../src/smt/proto_model/datatype_factory.cpp
smt/proto_model/numeral_factory.h.node: ../src/smt/proto_model/numeral_factory.h smt/proto_model/value_factory.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node
	@echo done > smt/proto_model/numeral_factory.h.node
smt/proto_model/numeral_factory$(OBJ_EXT): ../src/smt/proto_model/numeral_factory.cpp smt/proto_model/numeral_factory.h.node ast/ast_pp.h.node
	@echo src/smt/proto_model/numeral_factory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_35) $(CXX_OUT_FLAG)smt/proto_model/numeral_factory$(OBJ_EXT) ../src/smt/proto_model/numeral_factory.cpp
smt/proto_model/proto_model$(OBJ_EXT): ../src/smt/proto_model/proto_model.cpp smt/proto_model/proto_model.h.node model/model_params.hpp.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/rewriter/var_subst.h.node ast/array_decl_plugin.h.node ast/well_sorted.h.node ast/used_symbols.h.node model/model_v2_pp.h.node ast/simplifier/basic_simplifier_plugin.h.node
	@echo src/smt/proto_model/proto_model.cpp
	@$(CXX) $(CXXFLAGS) $(includes_35) $(CXX_OUT_FLAG)smt/proto_model/proto_model$(OBJ_EXT) ../src/smt/proto_model/proto_model.cpp
smt/proto_model/struct_factory$(OBJ_EXT): ../src/smt/proto_model/struct_factory.cpp smt/proto_model/struct_factory.h.node smt/proto_model/proto_model.h.node
	@echo src/smt/proto_model/struct_factory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_35) $(CXX_OUT_FLAG)smt/proto_model/struct_factory$(OBJ_EXT) ../src/smt/proto_model/struct_factory.cpp
smt/proto_model/value_factory$(OBJ_EXT): ../src/smt/proto_model/value_factory.cpp smt/proto_model/value_factory.h.node
	@echo src/smt/proto_model/value_factory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_35) $(CXX_OUT_FLAG)smt/proto_model/value_factory$(OBJ_EXT) ../src/smt/proto_model/value_factory.cpp
smt/proto_model/proto_model$(LIB_EXT): smt/proto_model/array_factory$(OBJ_EXT) smt/proto_model/datatype_factory$(OBJ_EXT) smt/proto_model/numeral_factory$(OBJ_EXT) smt/proto_model/proto_model$(OBJ_EXT) smt/proto_model/struct_factory$(OBJ_EXT) smt/proto_model/value_factory$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)smt/proto_model/proto_model$(LIB_EXT) smt/proto_model/array_factory$(OBJ_EXT) smt/proto_model/datatype_factory$(OBJ_EXT) smt/proto_model/numeral_factory$(OBJ_EXT) smt/proto_model/proto_model$(OBJ_EXT) smt/proto_model/struct_factory$(OBJ_EXT) smt/proto_model/value_factory$(OBJ_EXT)
proto_model: smt/proto_model/proto_model$(LIB_EXT)

includes_36 = -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa
util/list.h.node: ../src/util/list.h util/buffer.h.node util/region.h.node
	@echo done > util/list.h.node
smt/smt_types.h.node: ../src/smt/smt_types.h util/list.h.node util/vector.h.node util/lbool.h.node
	@echo done > smt/smt_types.h.node
smt/smt_literal.h.node: ../src/smt/smt_literal.h ast/ast.h.node smt/smt_types.h.node util/approx_set.h.node
	@echo done > smt/smt_literal.h.node
smt/smt_eq_justification.h.node: ../src/smt/smt_eq_justification.h smt/smt_literal.h.node util/tptr.h.node
	@echo done > smt/smt_eq_justification.h.node
smt/smt_justification.h.node: ../src/smt/smt_justification.h ast/ast.h.node smt/smt_types.h.node smt/smt_literal.h.node smt/smt_eq_justification.h.node
	@echo done > smt/smt_justification.h.node
smt/smt_clause.h.node: ../src/smt/smt_clause.h ast/ast.h.node smt/smt_literal.h.node util/tptr.h.node util/obj_hashtable.h.node smt/smt_justification.h.node
	@echo done > smt/smt_clause.h.node
smt/smt_setup.h.node: ../src/smt/smt_setup.h ast/ast.h.node smt/params/smt_params.h.node
	@echo done > smt/smt_setup.h.node
smt/smt_theory_var_list.h.node: ../src/smt/smt_theory_var_list.h smt/smt_types.h.node
	@echo done > smt/smt_theory_var_list.h.node
smt/smt_enode.h.node: ../src/smt/smt_enode.h ast/ast.h.node smt/smt_types.h.node smt/smt_eq_justification.h.node smt/smt_theory_var_list.h.node util/approx_set.h.node
	@echo done > smt/smt_enode.h.node
smt/smt_cg_table.h.node: ../src/smt/smt_cg_table.h smt/smt_enode.h.node util/hashtable.h.node util/chashtable.h.node
	@echo done > smt/smt_cg_table.h.node
smt/smt_b_justification.h.node: ../src/smt/smt_b_justification.h smt/smt_literal.h.node smt/smt_clause.h.node
	@echo done > smt/smt_b_justification.h.node
smt/smt_bool_var_data.h.node: ../src/smt/smt_bool_var_data.h smt/smt_b_justification.h.node
	@echo done > smt/smt_bool_var_data.h.node
smt/smt_theory.h.node: ../src/smt/smt_theory.h smt/smt_enode.h.node util/obj_hashtable.h.node util/statistics.h.node
	@echo done > smt/smt_theory.h.node
smt/smt_quantifier.h.node: ../src/smt/smt_quantifier.h ast/ast.h.node util/statistics.h.node util/params.h.node smt/smt_types.h.node
	@echo done > smt/smt_quantifier.h.node
smt/smt_quantifier_stat.h.node: ../src/smt/smt_quantifier_stat.h ast/ast.h.node util/obj_hashtable.h.node util/approx_nat.h.node util/region.h.node
	@echo done > smt/smt_quantifier_stat.h.node
smt/smt_statistics.h.node: ../src/smt/smt_statistics.h
	@echo done > smt/smt_statistics.h.node
util/obj_triple_hashtable.h.node: ../src/util/obj_triple_hashtable.h util/hashtable.h.node
	@echo done > util/obj_triple_hashtable.h.node
smt/dyn_ack.h.node: ../src/smt/dyn_ack.h ast/ast.h.node smt/params/dyn_ack_params.h.node util/obj_hashtable.h.node util/obj_pair_hashtable.h.node util/obj_triple_hashtable.h.node smt/smt_clause.h.node
	@echo done > smt/dyn_ack.h.node
smt/watch_list.h.node: ../src/smt/watch_list.h smt/smt_clause.h.node util/memory_manager.h.node
	@echo done > smt/watch_list.h.node
util/obj_pair_set.h.node: ../src/util/obj_pair_set.h util/chashtable.h.node
	@echo done > util/obj_pair_set.h.node
smt/smt_conflict_resolution.h.node: ../src/smt/smt_conflict_resolution.h smt/smt_literal.h.node smt/smt_bool_var_data.h.node smt/smt_justification.h.node smt/smt_enode.h.node smt/dyn_ack.h.node util/obj_pair_hashtable.h.node smt/params/smt_params.h.node util/obj_pair_hashtable.h.node util/map.h.node smt/watch_list.h.node util/obj_pair_set.h.node
	@echo done > smt/smt_conflict_resolution.h.node
smt/smt_relevancy.h.node: ../src/smt/smt_relevancy.h ast/ast.h.node
	@echo done > smt/smt_relevancy.h.node
smt/smt_case_split_queue.h.node: ../src/smt/smt_case_split_queue.h smt/smt_types.h.node util/heap.h.node smt/params/smt_params.h.node
	@echo done > smt/smt_case_split_queue.h.node
smt/smt_almost_cg_table.h.node: ../src/smt/smt_almost_cg_table.h smt/smt_enode.h.node util/map.h.node
	@echo done > smt/smt_almost_cg_table.h.node
smt/smt_failure.h.node: ../src/smt/smt_failure.h
	@echo done > smt/smt_failure.h.node
smt/asserted_formulas.h.node: ../src/smt/asserted_formulas.h smt/params/smt_params.h.node ast/simplifier/simplifier.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/static_features.h.node ast/macros/macro_manager.h.node ast/macros/macro_finder.h.node ast/normal_forms/defined_names.h.node ast/simplifier/maximise_ac_sharing.h.node ast/simplifier/bit2int.h.node util/statistics.h.node ast/pattern/pattern_inference.h.node
	@echo done > smt/asserted_formulas.h.node
ast/trail.h.node: ../src/ast/trail.h ast/ast.h.node util/obj_hashtable.h.node util/region.h.node
	@echo done > ast/trail.h.node
smt/fingerprints.h.node: ../src/smt/fingerprints.h smt/smt_enode.h.node
	@echo done > smt/fingerprints.h.node
smt/smt_context.h.node: ../src/smt/smt_context.h smt/smt_clause.h.node smt/smt_setup.h.node smt/smt_enode.h.node smt/smt_cg_table.h.node smt/smt_b_justification.h.node smt/smt_eq_justification.h.node smt/smt_justification.h.node smt/smt_bool_var_data.h.node smt/smt_theory.h.node smt/smt_quantifier.h.node smt/smt_quantifier_stat.h.node smt/smt_statistics.h.node smt/smt_conflict_resolution.h.node smt/smt_relevancy.h.node smt/smt_case_split_queue.h.node smt/smt_almost_cg_table.h.node smt/smt_failure.h.node smt/asserted_formulas.h.node smt/smt_types.h.node smt/dyn_ack.h.node ast/ast_smt_pp.h.node smt/watch_list.h.node ast/trail.h.node smt/fingerprints.h.node util/ref.h.node smt/proto_model/proto_model.h.node model/model.h.node util/timer.h.node util/statistics.h.node solver/progress_callback.h.node
	@echo done > smt/smt_context.h.node
smt/arith_eq_adapter.h.node: ../src/smt/arith_eq_adapter.h smt/smt_theory.h.node util/obj_pair_hashtable.h.node ast/arith_decl_plugin.h.node util/statistics.h.node ast/simplifier/arith_simplifier_plugin.h.node
	@echo done > smt/arith_eq_adapter.h.node
util/stats.h.node: ../src/util/stats.h
	@echo done > util/stats.h.node
smt/arith_eq_adapter$(OBJ_EXT): ../src/smt/arith_eq_adapter.cpp smt/smt_context.h.node smt/arith_eq_adapter.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node util/stats.h.node ast/simplifier/simplifier.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/arith_eq_adapter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/arith_eq_adapter$(OBJ_EXT) ../src/smt/arith_eq_adapter.cpp
smt/arith_eq_solver.h.node: ../src/smt/arith_eq_solver.h ast/arith_decl_plugin.h.node ast/rewriter/arith_rewriter.h.node
	@echo done > smt/arith_eq_solver.h.node
smt/arith_eq_solver$(OBJ_EXT): ../src/smt/arith_eq_solver.cpp smt/arith_eq_solver.h.node
	@echo src/smt/arith_eq_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/arith_eq_solver$(OBJ_EXT) ../src/smt/arith_eq_solver.cpp
smt/elim_term_ite.h.node: ../src/smt/elim_term_ite.h ast/simplifier/simplifier.h.node ast/normal_forms/defined_names.h.node
	@echo done > smt/elim_term_ite.h.node
smt/asserted_formulas$(OBJ_EXT): ../src/smt/asserted_formulas.cpp smt/asserted_formulas.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/simplifier/arith_simplifier_plugin.h.node ast/simplifier/array_simplifier_plugin.h.node ast/simplifier/datatype_simplifier_plugin.h.node ast/simplifier/bv_simplifier_plugin.h.node ast/for_each_expr.h.node ast/well_sorted.h.node ast/normal_forms/pull_quant.h.node ast/simplifier/pull_ite_tree.h.node ast/simplifier/push_app_ite.h.node smt/elim_term_ite.h.node ast/pattern/pattern_inference.h.node ast/normal_forms/nnf.h.node ast/simplifier/bv_elim.h.node ast/simplifier/inj_axiom.h.node ast/rewriter/der.h.node ast/simplifier/elim_bounds.h.node util/warning.h.node ast/simplifier/bit2int.h.node ast/simplifier/distribute_forall.h.node ast/macros/quasi_macros.h.node
	@echo src/smt/asserted_formulas.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/asserted_formulas$(OBJ_EXT) ../src/smt/asserted_formulas.cpp
smt/cached_var_subst.h.node: ../src/smt/cached_var_subst.h ast/rewriter/var_subst.h.node util/map.h.node smt/smt_enode.h.node
	@echo done > smt/cached_var_subst.h.node
smt/cached_var_subst$(OBJ_EXT): ../src/smt/cached_var_subst.cpp smt/cached_var_subst.h.node
	@echo src/smt/cached_var_subst.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/cached_var_subst$(OBJ_EXT) ../src/smt/cached_var_subst.cpp
smt/cost_evaluator.h.node: ../src/smt/cost_evaluator.h ast/ast.h.node ast/arith_decl_plugin.h.node
	@echo done > smt/cost_evaluator.h.node
smt/cost_evaluator$(OBJ_EXT): ../src/smt/cost_evaluator.cpp smt/cost_evaluator.h.node util/warning.h.node
	@echo src/smt/cost_evaluator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/cost_evaluator$(OBJ_EXT) ../src/smt/cost_evaluator.cpp
smt/dyn_ack$(OBJ_EXT): ../src/smt/dyn_ack.cpp smt/smt_context.h.node smt/dyn_ack.h.node ast/ast_pp.h.node
	@echo src/smt/dyn_ack.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/dyn_ack$(OBJ_EXT) ../src/smt/dyn_ack.cpp
smt/elim_term_ite$(OBJ_EXT): ../src/smt/elim_term_ite.cpp smt/elim_term_ite.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/elim_term_ite.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/elim_term_ite$(OBJ_EXT) ../src/smt/elim_term_ite.cpp
smt/smt_kernel.h.node: ../src/smt/smt_kernel.h ast/ast.h.node util/params.h.node model/model.h.node util/lbool.h.node util/statistics.h.node smt/smt_failure.h.node
	@echo done > smt/smt_kernel.h.node
smt/expr_context_simplifier.h.node: ../src/smt/expr_context_simplifier.h ast/ast.h.node util/obj_hashtable.h.node ast/simplifier/basic_simplifier_plugin.h.node smt/params/smt_params.h.node smt/smt_kernel.h.node ast/arith_decl_plugin.h.node
	@echo done > smt/expr_context_simplifier.h.node
smt/expr_context_simplifier$(OBJ_EXT): ../src/smt/expr_context_simplifier.cpp smt/expr_context_simplifier.h.node ast/ast_pp.h.node util/obj_hashtable.h.node smt/smt_kernel.h.node ast/for_each_expr.h.node
	@echo src/smt/expr_context_simplifier.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/expr_context_simplifier$(OBJ_EXT) ../src/smt/expr_context_simplifier.cpp
smt/fingerprints$(OBJ_EXT): ../src/smt/fingerprints.cpp smt/fingerprints.h.node
	@echo src/smt/fingerprints.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/fingerprints$(OBJ_EXT) ../src/smt/fingerprints.cpp
smt/mam.h.node: ../src/smt/mam.h ast/ast.h.node smt/smt_types.h.node
	@echo done > smt/mam.h.node
util/pool.h.node: ../src/util/pool.h util/util.h.node util/vector.h.node
	@echo done > util/pool.h.node
smt/mam$(OBJ_EXT): ../src/smt/mam.cpp smt/mam.h.node smt/smt_context.h.node util/pool.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/trail.h.node util/stopwatch.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/mam.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/mam$(OBJ_EXT) ../src/smt/mam.cpp
smt/old_interval.h.node: ../src/smt/old_interval.h util/rational.h.node util/dependency.h.node
	@echo done > smt/old_interval.h.node
smt/old_interval$(OBJ_EXT): ../src/smt/old_interval.cpp smt/old_interval.h.node
	@echo src/smt/old_interval.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/old_interval$(OBJ_EXT) ../src/smt/old_interval.cpp
smt/smt_checker.h.node: ../src/smt/smt_checker.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > smt/smt_checker.h.node
smt/qi_queue.h.node: ../src/smt/qi_queue.h ast/ast.h.node smt/smt_quantifier_stat.h.node smt/smt_checker.h.node smt/smt_quantifier.h.node smt/params/qi_params.h.node smt/fingerprints.h.node parsers/util/cost_parser.h.node smt/cost_evaluator.h.node smt/cached_var_subst.h.node util/statistics.h.node
	@echo done > smt/qi_queue.h.node
smt/qi_queue$(OBJ_EXT): ../src/smt/qi_queue.cpp smt/smt_context.h.node smt/qi_queue.h.node util/warning.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/rewriter/var_subst.h.node util/stats.h.node
	@echo src/smt/qi_queue.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/qi_queue$(OBJ_EXT) ../src/smt/qi_queue.cpp
smt/smt_almost_cg_table$(OBJ_EXT): ../src/smt/smt_almost_cg_table.cpp smt/smt_almost_cg_table.h.node
	@echo src/smt/smt_almost_cg_table.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_almost_cg_table$(OBJ_EXT) ../src/smt/smt_almost_cg_table.cpp
smt/smt_case_split_queue$(OBJ_EXT): ../src/smt/smt_case_split_queue.cpp smt/smt_context.h.node smt/smt_case_split_queue.h.node util/warning.h.node util/stopwatch.h.node ast/for_each_expr.h.node ast/ast_pp.h.node
	@echo src/smt/smt_case_split_queue.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_case_split_queue$(OBJ_EXT) ../src/smt/smt_case_split_queue.cpp
smt/smt_cg_table$(OBJ_EXT): ../src/smt/smt_cg_table.cpp smt/smt_cg_table.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node
	@echo src/smt/smt_cg_table.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_cg_table$(OBJ_EXT) ../src/smt/smt_cg_table.cpp
smt/smt_checker$(OBJ_EXT): ../src/smt/smt_checker.cpp smt/smt_context.h.node smt/smt_checker.h.node ast/ast_ll_pp.h.node
	@echo src/smt/smt_checker.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_checker$(OBJ_EXT) ../src/smt/smt_checker.cpp
smt/smt_clause$(OBJ_EXT): ../src/smt/smt_clause.cpp smt/smt_clause.h.node smt/smt_justification.h.node ast/ast_ll_pp.h.node
	@echo src/smt/smt_clause.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_clause$(OBJ_EXT) ../src/smt/smt_clause.cpp
smt/smt_conflict_resolution$(OBJ_EXT): ../src/smt/smt_conflict_resolution.cpp smt/smt_context.h.node smt/smt_conflict_resolution.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node
	@echo src/smt/smt_conflict_resolution.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_conflict_resolution$(OBJ_EXT) ../src/smt/smt_conflict_resolution.cpp
smt/smt_quick_checker.h.node: ../src/smt/smt_quick_checker.h ast/ast.h.node ast/simplifier/simplifier.h.node util/obj_hashtable.h.node
	@echo done > smt/smt_quick_checker.h.node
smt/uses_theory.h.node: ../src/smt/uses_theory.h ast/ast.h.node
	@echo done > smt/uses_theory.h.node
smt/smt_for_each_relevant_expr.h.node: ../src/smt/smt_for_each_relevant_expr.h ast/ast.h.node util/obj_hashtable.h.node util/vector.h.node
	@echo done > smt/smt_for_each_relevant_expr.h.node
smt/union_find.h.node: ../src/smt/union_find.h ast/trail.h.node
	@echo done > smt/union_find.h.node
smt/smt_model_generator.h.node: ../src/smt/smt_model_generator.h ast/ast.h.node smt/smt_types.h.node util/obj_hashtable.h.node util/map.h.node
	@echo done > smt/smt_model_generator.h.node
smt/smt_model_checker.h.node: ../src/smt/smt_model_checker.h ast/ast.h.node util/obj_hashtable.h.node smt/params/qi_params.h.node smt/params/smt_params.h.node util/region.h.node
	@echo done > smt/smt_model_checker.h.node
smt/smt_model_finder.h.node: ../src/smt/smt_model_finder.h ast/ast.h.node ast/func_decl_dependencies.h.node ast/simplifier/simplifier.h.node smt/proto_model/proto_model.h.node
	@echo done > smt/smt_model_finder.h.node
smt/smt_context$(OBJ_EXT): ../src/smt/smt_context.cpp smt/smt_context.h.node util/luby.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node util/warning.h.node smt/smt_quick_checker.h.node ast/proof_checker/proof_checker.h.node ast/ast_util.h.node smt/uses_theory.h.node model/model.h.node smt/smt_for_each_relevant_expr.h.node util/timeit.h.node ast/well_sorted.h.node smt/union_find.h.node smt/smt_model_generator.h.node smt/smt_model_checker.h.node smt/smt_model_finder.h.node model/model_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/smt_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_context$(OBJ_EXT) ../src/smt/smt_context.cpp
smt/smt_context_inv$(OBJ_EXT): ../src/smt/smt_context_inv.cpp smt/smt_context.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/smt_context_inv.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_context_inv$(OBJ_EXT) ../src/smt/smt_context_inv.cpp
smt/smt_context_pp$(OBJ_EXT): ../src/smt/smt_context_pp.cpp smt/smt_context.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/ast_smt_pp.h.node util/stats.h.node
	@echo src/smt/smt_context_pp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_context_pp$(OBJ_EXT) ../src/smt/smt_context_pp.cpp
smt/smt_context_stat$(OBJ_EXT): ../src/smt/smt_context_stat.cpp smt/smt_context.h.node ast/ast_pp.h.node
	@echo src/smt/smt_context_stat.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_context_stat$(OBJ_EXT) ../src/smt/smt_context_stat.cpp
smt/smt_enode$(OBJ_EXT): ../src/smt/smt_enode.cpp smt/smt_context.h.node smt/smt_enode.h.node
	@echo src/smt/smt_enode.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_enode$(OBJ_EXT) ../src/smt/smt_enode.cpp
smt/smt_for_each_relevant_expr$(OBJ_EXT): ../src/smt/smt_for_each_relevant_expr.cpp smt/smt_context.h.node smt/smt_for_each_relevant_expr.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node
	@echo src/smt/smt_for_each_relevant_expr.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_for_each_relevant_expr$(OBJ_EXT) ../src/smt/smt_for_each_relevant_expr.cpp
smt/smt_solver.h.node: ../src/smt/smt_solver.h ast/ast.h.node util/params.h.node
	@echo done > smt/smt_solver.h.node
smt/smt_implied_equalities.h.node: ../src/smt/smt_implied_equalities.h smt/smt_solver.h.node util/lbool.h.node ast/ast.h.node
	@echo done > smt/smt_implied_equalities.h.node
smt/smt_value_sort.h.node: ../src/smt/smt_value_sort.h ast/ast.h.node
	@echo done > smt/smt_value_sort.h.node
smt/smt_implied_equalities$(OBJ_EXT): ../src/smt/smt_implied_equalities.cpp smt/smt_implied_equalities.h.node smt/union_find.h.node ast/ast_pp.h.node ast/array_decl_plugin.h.node util/uint_set.h.node smt/smt_value_sort.h.node model/model_smt2_pp.h.node util/stopwatch.h.node model/model.h.node solver/solver.h.node
	@echo src/smt/smt_implied_equalities.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_implied_equalities$(OBJ_EXT) ../src/smt/smt_implied_equalities.cpp
smt/smt_internalizer$(OBJ_EXT): ../src/smt/smt_internalizer.cpp smt/smt_context.h.node ast/expr_stat.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_smt2_pp.h.node smt/smt_model_finder.h.node ast/for_each_expr.h.node
	@echo src/smt/smt_internalizer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_internalizer$(OBJ_EXT) ../src/smt/smt_internalizer.cpp
smt/smt_justification$(OBJ_EXT): ../src/smt/smt_justification.cpp smt/smt_context.h.node smt/smt_conflict_resolution.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node
	@echo src/smt/smt_justification.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_justification$(OBJ_EXT) ../src/smt/smt_justification.cpp
smt/smt_kernel$(OBJ_EXT): ../src/smt/smt_kernel.cpp smt/smt_kernel.h.node smt/smt_context.h.node ast/ast_smt2_pp.h.node smt/params/smt_params_helper.hpp.node
	@echo src/smt/smt_kernel.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_kernel$(OBJ_EXT) ../src/smt/smt_kernel.cpp
smt/smt_literal$(OBJ_EXT): ../src/smt/smt_literal.cpp smt/smt_literal.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node
	@echo src/smt/smt_literal.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_literal$(OBJ_EXT) ../src/smt/smt_literal.cpp
smt/smt_model_checker$(OBJ_EXT): ../src/smt/smt_model_checker.cpp smt/smt_model_checker.h.node smt/smt_context.h.node smt/smt_model_finder.h.node ast/normal_forms/pull_quant.h.node ast/for_each_expr.h.node ast/rewriter/var_subst.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node model/model_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/smt_model_checker.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_model_checker$(OBJ_EXT) ../src/smt/smt_model_checker.cpp
util/backtrackable_set.h.node: ../src/util/backtrackable_set.h util/vector.h.node
	@echo done > util/backtrackable_set.h.node
smt/smt_model_finder$(OBJ_EXT): ../src/smt/smt_model_finder.cpp smt/smt_model_finder.h.node smt/smt_context.h.node ast/ast_util.h.node ast/macros/macro_util.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node ast/simplifier/arith_simplifier_plugin.h.node ast/simplifier/bv_simplifier_plugin.h.node ast/normal_forms/pull_quant.h.node ast/rewriter/var_subst.h.node util/backtrackable_set.h.node ast/for_each_expr.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/well_sorted.h.node model/model_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/smt_model_finder.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_model_finder$(OBJ_EXT) ../src/smt/smt_model_finder.cpp
smt/smt_model_generator$(OBJ_EXT): ../src/smt/smt_model_generator.cpp smt/smt_context.h.node smt/smt_model_generator.h.node smt/proto_model/proto_model.h.node ast/for_each_expr.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/smt_model_generator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_model_generator$(OBJ_EXT) ../src/smt/smt_model_generator.cpp
smt/smt_quantifier$(OBJ_EXT): ../src/smt/smt_quantifier.cpp smt/smt_quantifier.h.node smt/smt_context.h.node smt/smt_quantifier_stat.h.node smt/smt_model_finder.h.node smt/smt_model_checker.h.node smt/smt_quick_checker.h.node smt/mam.h.node smt/qi_queue.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/smt_quantifier.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_quantifier$(OBJ_EXT) ../src/smt/smt_quantifier.cpp
smt/smt_quantifier_stat$(OBJ_EXT): ../src/smt/smt_quantifier_stat.cpp smt/smt_quantifier_stat.h.node
	@echo src/smt/smt_quantifier_stat.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_quantifier_stat$(OBJ_EXT) ../src/smt/smt_quantifier_stat.cpp
smt/smt_quick_checker$(OBJ_EXT): ../src/smt/smt_quick_checker.cpp smt/smt_context.h.node smt/smt_quick_checker.h.node ast/ast_pp.h.node
	@echo src/smt/smt_quick_checker.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_quick_checker$(OBJ_EXT) ../src/smt/smt_quick_checker.cpp
smt/smt_relevancy$(OBJ_EXT): ../src/smt/smt_relevancy.cpp smt/smt_context.h.node smt/smt_relevancy.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/smt_relevancy.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_relevancy$(OBJ_EXT) ../src/smt/smt_relevancy.cpp
smt/theory_arith.h.node: ../src/smt/theory_arith.h smt/smt_theory.h.node util/map.h.node util/heap.h.node util/nat_set.h.node util/inf_rational.h.node util/s_integer.h.node util/inf_s_integer.h.node ast/arith_decl_plugin.h.node smt/params/theory_arith_params.h.node smt/arith_eq_adapter.h.node smt/proto_model/numeral_factory.h.node util/obj_pair_hashtable.h.node smt/old_interval.h.node math/grobner/grobner.h.node ast/simplifier/arith_simplifier_plugin.h.node smt/arith_eq_solver.h.node
	@echo done > smt/theory_arith.h.node
smt/theory_dense_diff_logic.h.node: ../src/smt/theory_dense_diff_logic.h smt/theory_arith.h.node smt/params/theory_arith_params.h.node ast/arith_decl_plugin.h.node smt/arith_eq_adapter.h.node
	@echo done > smt/theory_dense_diff_logic.h.node
smt/diff_logic.h.node: ../src/smt/diff_logic.h util/vector.h.node util/heap.h.node util/statistics.h.node util/trace.h.node util/warning.h.node util/uint_set.h.node
	@echo done > smt/diff_logic.h.node
smt/theory_diff_logic.h.node: ../src/smt/theory_diff_logic.h util/rational.h.node util/inf_rational.h.node util/inf_int_rational.h.node util/s_integer.h.node util/inf_s_integer.h.node smt/smt_theory.h.node smt/diff_logic.h.node ast/arith_decl_plugin.h.node smt/smt_justification.h.node util/map.h.node smt/params/smt_params.h.node smt/arith_eq_adapter.h.node smt/smt_model_generator.h.node smt/proto_model/numeral_factory.h.node smt/smt_clause.h.node
	@echo done > smt/theory_diff_logic.h.node
smt/theory_utvpi.h.node: ../src/smt/theory_utvpi.h smt/theory_diff_logic.h.node
	@echo done > smt/theory_utvpi.h.node
smt/theory_array_base.h.node: ../src/smt/theory_array_base.h smt/smt_theory.h.node ast/array_decl_plugin.h.node smt/proto_model/array_factory.h.node
	@echo done > smt/theory_array_base.h.node
smt/theory_array.h.node: ../src/smt/theory_array.h smt/theory_array_base.h.node smt/params/theory_array_params.h.node smt/union_find.h.node
	@echo done > smt/theory_array.h.node
smt/theory_array_full.h.node: ../src/smt/theory_array_full.h smt/theory_array.h.node ast/simplifier/simplifier.h.node
	@echo done > smt/theory_array_full.h.node
smt/theory_bv.h.node: ../src/smt/theory_bv.h smt/smt_theory.h.node smt/params/theory_bv_params.h.node ast/rewriter/bit_blaster/bit_blaster.h.node ast/trail.h.node smt/union_find.h.node ast/simplifier/simplifier.h.node ast/simplifier/bv_simplifier_plugin.h.node ast/arith_decl_plugin.h.node ast/simplifier/arith_simplifier_plugin.h.node smt/proto_model/numeral_factory.h.node
	@echo done > smt/theory_bv.h.node
smt/theory_datatype.h.node: ../src/smt/theory_datatype.h smt/smt_theory.h.node smt/union_find.h.node smt/params/theory_datatype_params.h.node ast/datatype_decl_plugin.h.node smt/proto_model/datatype_factory.h.node
	@echo done > smt/theory_datatype.h.node
smt/theory_dummy.h.node: ../src/smt/theory_dummy.h smt/smt_theory.h.node
	@echo done > smt/theory_dummy.h.node
smt/theory_dl.h.node: ../src/smt/theory_dl.h
	@echo done > smt/theory_dl.h.node
smt/theory_seq_empty.h.node: ../src/smt/theory_seq_empty.h smt/smt_theory.h.node
	@echo done > smt/theory_seq_empty.h.node
smt/smt_setup$(OBJ_EXT): ../src/smt/smt_setup.cpp smt/smt_context.h.node smt/smt_setup.h.node ast/static_features.h.node smt/theory_arith.h.node smt/theory_dense_diff_logic.h.node smt/theory_diff_logic.h.node smt/theory_utvpi.h.node smt/theory_array.h.node smt/theory_array_full.h.node smt/theory_bv.h.node smt/theory_datatype.h.node smt/theory_dummy.h.node smt/theory_dl.h.node smt/theory_seq_empty.h.node
	@echo src/smt/smt_setup.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_setup$(OBJ_EXT) ../src/smt/smt_setup.cpp
smt/smt_solver$(OBJ_EXT): ../src/smt/smt_solver.cpp solver/solver_na2as.h.node smt/smt_kernel.h.node ast/reg_decl_plugins.h.node smt/params/smt_params.h.node
	@echo src/smt/smt_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_solver$(OBJ_EXT) ../src/smt/smt_solver.cpp
smt/smt_statistics$(OBJ_EXT): ../src/smt/smt_statistics.cpp smt/smt_statistics.h.node
	@echo src/smt/smt_statistics.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_statistics$(OBJ_EXT) ../src/smt/smt_statistics.cpp
smt/smt_theory$(OBJ_EXT): ../src/smt/smt_theory.cpp smt/smt_context.h.node util/buffer.h.node ast/ast_ll_pp.h.node
	@echo src/smt/smt_theory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_theory$(OBJ_EXT) ../src/smt/smt_theory.cpp
smt/smt_value_sort$(OBJ_EXT): ../src/smt/smt_value_sort.cpp smt/smt_value_sort.h.node ast/bv_decl_plugin.h.node ast/arith_decl_plugin.h.node ast/datatype_decl_plugin.h.node
	@echo src/smt/smt_value_sort.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/smt_value_sort$(OBJ_EXT) ../src/smt/smt_value_sort.cpp
smt/theory_arith_core.h.node: ../src/smt/theory_arith_core.h smt/smt_context.h.node smt/theory_arith.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node smt/smt_model_generator.h.node ast/ast_smt2_pp.h.node
	@echo done > smt/theory_arith_core.h.node
smt/theory_arith_aux.h.node: ../src/smt/theory_arith_aux.h smt/theory_arith.h.node
	@echo done > smt/theory_arith_aux.h.node
smt/theory_arith_inv.h.node: ../src/smt/theory_arith_inv.h smt/theory_arith.h.node ast/ast_pp.h.node
	@echo done > smt/theory_arith_inv.h.node
smt/theory_arith_pp.h.node: ../src/smt/theory_arith_pp.h smt/theory_arith.h.node ast/ast_smt_pp.h.node util/stats.h.node
	@echo done > smt/theory_arith_pp.h.node
smt/theory_arith_int.h.node: ../src/smt/theory_arith_int.h ast/ast_ll_pp.h.node ast/simplifier/arith_simplifier_plugin.h.node ast/well_sorted.h.node math/euclid/euclidean_solver.h.node util/numeral_buffer.h.node ast/ast_smt2_pp.h.node
	@echo done > smt/theory_arith_int.h.node
smt/theory_arith_eq.h.node: ../src/smt/theory_arith_eq.h util/stopwatch.h.node
	@echo done > smt/theory_arith_eq.h.node
smt/theory_arith_nl.h.node: ../src/smt/theory_arith_nl.h ast/ast_smt2_pp.h.node
	@echo done > smt/theory_arith_nl.h.node
smt/theory_arith_def.h.node: ../src/smt/theory_arith_def.h smt/theory_arith.h.node smt/theory_arith_core.h.node smt/theory_arith_aux.h.node smt/theory_arith_inv.h.node smt/theory_arith_pp.h.node smt/theory_arith_int.h.node smt/theory_arith_eq.h.node smt/theory_arith_nl.h.node
	@echo done > smt/theory_arith_def.h.node
smt/theory_arith$(OBJ_EXT): ../src/smt/theory_arith.cpp smt/theory_arith_def.h.node
	@echo src/smt/theory_arith.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_arith$(OBJ_EXT) ../src/smt/theory_arith.cpp
smt/theory_array$(OBJ_EXT): ../src/smt/theory_array.cpp smt/smt_context.h.node smt/theory_array.h.node ast/ast_ll_pp.h.node util/stats.h.node
	@echo src/smt/theory_array.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_array$(OBJ_EXT) ../src/smt/theory_array.cpp
smt/theory_array_base$(OBJ_EXT): ../src/smt/theory_array_base.cpp smt/smt_context.h.node smt/theory_array_base.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node smt/smt_model_generator.h.node model/func_interp.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/theory_array_base.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_array_base$(OBJ_EXT) ../src/smt/theory_array_base.cpp
smt/theory_array_full$(OBJ_EXT): ../src/smt/theory_array_full.cpp smt/smt_context.h.node smt/theory_array_full.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/ast_smt2_pp.h.node util/stats.h.node
	@echo src/smt/theory_array_full.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_array_full$(OBJ_EXT) ../src/smt/theory_array_full.cpp
smt/theory_bv$(OBJ_EXT): ../src/smt/theory_bv.cpp smt/smt_context.h.node smt/theory_bv.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node smt/smt_model_generator.h.node util/stats.h.node
	@echo src/smt/theory_bv.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_bv$(OBJ_EXT) ../src/smt/theory_bv.cpp
smt/theory_datatype$(OBJ_EXT): ../src/smt/theory_datatype.cpp smt/smt_context.h.node smt/theory_datatype.h.node smt/smt_model_generator.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node util/stats.h.node ast/ast_smt2_pp.h.node
	@echo src/smt/theory_datatype.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_datatype$(OBJ_EXT) ../src/smt/theory_datatype.cpp
smt/theory_dense_diff_logic_def.h.node: ../src/smt/theory_dense_diff_logic_def.h smt/smt_context.h.node smt/theory_dense_diff_logic.h.node ast/ast_pp.h.node smt/smt_model_generator.h.node
	@echo done > smt/theory_dense_diff_logic_def.h.node
smt/theory_dense_diff_logic$(OBJ_EXT): ../src/smt/theory_dense_diff_logic.cpp smt/theory_dense_diff_logic_def.h.node
	@echo src/smt/theory_dense_diff_logic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_dense_diff_logic$(OBJ_EXT) ../src/smt/theory_dense_diff_logic.cpp
smt/theory_diff_logic_def.h.node: ../src/smt/theory_diff_logic_def.h smt/theory_diff_logic.h.node smt/smt_context.h.node util/map.h.node ast/ast_pp.h.node util/warning.h.node smt/smt_model_generator.h.node
	@echo done > smt/theory_diff_logic_def.h.node
smt/theory_diff_logic$(OBJ_EXT): ../src/smt/theory_diff_logic.cpp smt/theory_diff_logic.h.node util/rational.h.node smt/theory_diff_logic_def.h.node
	@echo src/smt/theory_diff_logic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_diff_logic$(OBJ_EXT) ../src/smt/theory_diff_logic.cpp
smt/theory_dl$(OBJ_EXT): ../src/smt/theory_dl.cpp smt/smt_theory.h.node ast/dl_decl_plugin.h.node smt/proto_model/value_factory.h.node smt/smt_model_generator.h.node ast/bv_decl_plugin.h.node smt/theory_bv.h.node smt/smt_context.h.node ast/ast_pp.h.node
	@echo src/smt/theory_dl.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_dl$(OBJ_EXT) ../src/smt/theory_dl.cpp
smt/theory_dummy$(OBJ_EXT): ../src/smt/theory_dummy.cpp smt/smt_context.h.node smt/theory_dummy.h.node
	@echo src/smt/theory_dummy.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_dummy$(OBJ_EXT) ../src/smt/theory_dummy.cpp
smt/theory_fpa.h.node: ../src/smt/theory_fpa.h smt/smt_theory.h.node ast/fpa/fpa2bv_converter.h.node
	@echo done > smt/theory_fpa.h.node
smt/theory_fpa$(OBJ_EXT): ../src/smt/theory_fpa.cpp ast/ast_smt2_pp.h.node smt/theory_fpa.h.node
	@echo src/smt/theory_fpa.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_fpa$(OBJ_EXT) ../src/smt/theory_fpa.cpp
smt/theory_utvpi_def.h.node: ../src/smt/theory_utvpi_def.h smt/theory_utvpi.h.node util/heap.h.node ast/ast_pp.h.node smt/smt_context.h.node
	@echo done > smt/theory_utvpi_def.h.node
smt/theory_utvpi$(OBJ_EXT): ../src/smt/theory_utvpi.cpp smt/theory_utvpi.h.node smt/theory_utvpi_def.h.node
	@echo src/smt/theory_utvpi.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/theory_utvpi$(OBJ_EXT) ../src/smt/theory_utvpi.cpp
smt/uses_theory$(OBJ_EXT): ../src/smt/uses_theory.cpp smt/uses_theory.h.node ast/for_each_expr.h.node
	@echo src/smt/uses_theory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/uses_theory$(OBJ_EXT) ../src/smt/uses_theory.cpp
smt/watch_list$(OBJ_EXT): ../src/smt/watch_list.cpp smt/watch_list.h.node
	@echo src/smt/watch_list.cpp
	@$(CXX) $(CXXFLAGS) $(includes_36) $(CXX_OUT_FLAG)smt/watch_list$(OBJ_EXT) ../src/smt/watch_list.cpp
smt/smt$(LIB_EXT): smt/arith_eq_adapter$(OBJ_EXT) smt/arith_eq_solver$(OBJ_EXT) smt/asserted_formulas$(OBJ_EXT) smt/cached_var_subst$(OBJ_EXT) smt/cost_evaluator$(OBJ_EXT) smt/dyn_ack$(OBJ_EXT) smt/elim_term_ite$(OBJ_EXT) smt/expr_context_simplifier$(OBJ_EXT) smt/fingerprints$(OBJ_EXT) smt/mam$(OBJ_EXT) smt/old_interval$(OBJ_EXT) smt/qi_queue$(OBJ_EXT) smt/smt_almost_cg_table$(OBJ_EXT) smt/smt_case_split_queue$(OBJ_EXT) smt/smt_cg_table$(OBJ_EXT) smt/smt_checker$(OBJ_EXT) smt/smt_clause$(OBJ_EXT) smt/smt_conflict_resolution$(OBJ_EXT) smt/smt_context$(OBJ_EXT) smt/smt_context_inv$(OBJ_EXT) smt/smt_context_pp$(OBJ_EXT) smt/smt_context_stat$(OBJ_EXT) smt/smt_enode$(OBJ_EXT) smt/smt_for_each_relevant_expr$(OBJ_EXT) smt/smt_implied_equalities$(OBJ_EXT) smt/smt_internalizer$(OBJ_EXT) smt/smt_justification$(OBJ_EXT) smt/smt_kernel$(OBJ_EXT) smt/smt_literal$(OBJ_EXT) smt/smt_model_checker$(OBJ_EXT) smt/smt_model_finder$(OBJ_EXT) smt/smt_model_generator$(OBJ_EXT) smt/smt_quantifier$(OBJ_EXT) smt/smt_quantifier_stat$(OBJ_EXT) smt/smt_quick_checker$(OBJ_EXT) smt/smt_relevancy$(OBJ_EXT) smt/smt_setup$(OBJ_EXT) smt/smt_solver$(OBJ_EXT) smt/smt_statistics$(OBJ_EXT) smt/smt_theory$(OBJ_EXT) smt/smt_value_sort$(OBJ_EXT) smt/theory_arith$(OBJ_EXT) smt/theory_array$(OBJ_EXT) smt/theory_array_base$(OBJ_EXT) smt/theory_array_full$(OBJ_EXT) smt/theory_bv$(OBJ_EXT) smt/theory_datatype$(OBJ_EXT) smt/theory_dense_diff_logic$(OBJ_EXT) smt/theory_diff_logic$(OBJ_EXT) smt/theory_dl$(OBJ_EXT) smt/theory_dummy$(OBJ_EXT) smt/theory_fpa$(OBJ_EXT) smt/theory_utvpi$(OBJ_EXT) smt/uses_theory$(OBJ_EXT) smt/watch_list$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)smt/smt$(LIB_EXT) smt/arith_eq_adapter$(OBJ_EXT) smt/arith_eq_solver$(OBJ_EXT) smt/asserted_formulas$(OBJ_EXT) smt/cached_var_subst$(OBJ_EXT) smt/cost_evaluator$(OBJ_EXT) smt/dyn_ack$(OBJ_EXT) smt/elim_term_ite$(OBJ_EXT) smt/expr_context_simplifier$(OBJ_EXT) smt/fingerprints$(OBJ_EXT) smt/mam$(OBJ_EXT) smt/old_interval$(OBJ_EXT) smt/qi_queue$(OBJ_EXT) smt/smt_almost_cg_table$(OBJ_EXT) smt/smt_case_split_queue$(OBJ_EXT) smt/smt_cg_table$(OBJ_EXT) smt/smt_checker$(OBJ_EXT) smt/smt_clause$(OBJ_EXT) smt/smt_conflict_resolution$(OBJ_EXT) smt/smt_context$(OBJ_EXT) smt/smt_context_inv$(OBJ_EXT) smt/smt_context_pp$(OBJ_EXT) smt/smt_context_stat$(OBJ_EXT) smt/smt_enode$(OBJ_EXT) smt/smt_for_each_relevant_expr$(OBJ_EXT) smt/smt_implied_equalities$(OBJ_EXT) smt/smt_internalizer$(OBJ_EXT) smt/smt_justification$(OBJ_EXT) smt/smt_kernel$(OBJ_EXT) smt/smt_literal$(OBJ_EXT) smt/smt_model_checker$(OBJ_EXT) smt/smt_model_finder$(OBJ_EXT) smt/smt_model_generator$(OBJ_EXT) smt/smt_quantifier$(OBJ_EXT) smt/smt_quantifier_stat$(OBJ_EXT) smt/smt_quick_checker$(OBJ_EXT) smt/smt_relevancy$(OBJ_EXT) smt/smt_setup$(OBJ_EXT) smt/smt_solver$(OBJ_EXT) smt/smt_statistics$(OBJ_EXT) smt/smt_theory$(OBJ_EXT) smt/smt_value_sort$(OBJ_EXT) smt/theory_arith$(OBJ_EXT) smt/theory_array$(OBJ_EXT) smt/theory_array_base$(OBJ_EXT) smt/theory_array_full$(OBJ_EXT) smt/theory_bv$(OBJ_EXT) smt/theory_datatype$(OBJ_EXT) smt/theory_dense_diff_logic$(OBJ_EXT) smt/theory_diff_logic$(OBJ_EXT) smt/theory_dl$(OBJ_EXT) smt/theory_dummy$(OBJ_EXT) smt/theory_fpa$(OBJ_EXT) smt/theory_utvpi$(OBJ_EXT) smt/uses_theory$(OBJ_EXT) smt/watch_list$(OBJ_EXT)
smt: smt/smt$(LIB_EXT)

includes_37 = -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa
smt/user_plugin/user_decl_plugin.h.node: ../src/smt/user_plugin/user_decl_plugin.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > smt/user_plugin/user_decl_plugin.h.node
smt/user_plugin/user_decl_plugin$(OBJ_EXT): ../src/smt/user_plugin/user_decl_plugin.cpp smt/user_plugin/user_decl_plugin.h.node util/warning.h.node
	@echo src/smt/user_plugin/user_decl_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_37) $(CXX_OUT_FLAG)smt/user_plugin/user_decl_plugin$(OBJ_EXT) ../src/smt/user_plugin/user_decl_plugin.cpp
smt/user_plugin/user_simplifier_plugin.h.node: ../src/smt/user_plugin/user_simplifier_plugin.h ast/simplifier/simplifier_plugin.h.node
	@echo done > smt/user_plugin/user_simplifier_plugin.h.node
smt/user_plugin/user_simplifier_plugin$(OBJ_EXT): ../src/smt/user_plugin/user_simplifier_plugin.cpp smt/user_plugin/user_simplifier_plugin.h.node ast/ast_pp.h.node util/warning.h.node
	@echo src/smt/user_plugin/user_simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_37) $(CXX_OUT_FLAG)smt/user_plugin/user_simplifier_plugin$(OBJ_EXT) ../src/smt/user_plugin/user_simplifier_plugin.cpp
smt/user_plugin/user_smt_theory.h.node: ../src/smt/user_plugin/user_smt_theory.h smt/user_plugin/user_decl_plugin.h.node smt/user_plugin/user_simplifier_plugin.h.node smt/smt_theory.h.node smt/union_find.h.node smt/smt_kernel.h.node
	@echo done > smt/user_plugin/user_smt_theory.h.node
smt/user_plugin/user_smt_theory$(OBJ_EXT): ../src/smt/user_plugin/user_smt_theory.cpp smt/smt_context.h.node smt/user_plugin/user_smt_theory.h.node ast/ast_pp.h.node smt/smt_model_generator.h.node util/stats.h.node util/warning.h.node
	@echo src/smt/user_plugin/user_smt_theory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_37) $(CXX_OUT_FLAG)smt/user_plugin/user_smt_theory$(OBJ_EXT) ../src/smt/user_plugin/user_smt_theory.cpp
smt/user_plugin/user_plugin$(LIB_EXT): smt/user_plugin/user_decl_plugin$(OBJ_EXT) smt/user_plugin/user_simplifier_plugin$(OBJ_EXT) smt/user_plugin/user_smt_theory$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)smt/user_plugin/user_plugin$(LIB_EXT) smt/user_plugin/user_decl_plugin$(OBJ_EXT) smt/user_plugin/user_simplifier_plugin$(OBJ_EXT) smt/user_plugin/user_smt_theory$(OBJ_EXT)
user_plugin: smt/user_plugin/user_plugin$(LIB_EXT)

includes_38 = -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/rewriter/bit_blaster -I../src/ast/simplifier
tactic/bv/bit_blaster_model_converter$(OBJ_EXT): ../src/tactic/bv/bit_blaster_model_converter.cpp model/model.h.node model/model_pp.h.node tactic/model_converter.h.node ast/bv_decl_plugin.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/bv/bit_blaster_model_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_38) $(CXX_OUT_FLAG)tactic/bv/bit_blaster_model_converter$(OBJ_EXT) ../src/tactic/bv/bit_blaster_model_converter.cpp
tactic/bv/bit_blaster_model_converter.h.node: ../src/tactic/bv/bit_blaster_model_converter.h tactic/model_converter.h.node
	@echo done > tactic/bv/bit_blaster_model_converter.h.node
tactic/bv/bit_blaster_tactic$(OBJ_EXT): ../src/tactic/bv/bit_blaster_tactic.cpp tactic/tactical.h.node tactic/bv/bit_blaster_model_converter.h.node ast/rewriter/bit_blaster/bit_blaster_rewriter.h.node ast/ast_smt2_pp.h.node model/model_pp.h.node ast/rewriter/rewriter_types.h.node
	@echo src/tactic/bv/bit_blaster_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_38) $(CXX_OUT_FLAG)tactic/bv/bit_blaster_tactic$(OBJ_EXT) ../src/tactic/bv/bit_blaster_tactic.cpp
tactic/bv/bv1_blaster_tactic$(OBJ_EXT): ../src/tactic/bv/bv1_blaster_tactic.cpp tactic/tactical.h.node tactic/bv/bit_blaster_model_converter.h.node ast/bv_decl_plugin.h.node ast/rewriter/rewriter_def.h.node ast/for_each_expr.h.node util/cooperate.h.node
	@echo src/tactic/bv/bv1_blaster_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_38) $(CXX_OUT_FLAG)tactic/bv/bv1_blaster_tactic$(OBJ_EXT) ../src/tactic/bv/bv1_blaster_tactic.cpp
tactic/bv/bv_size_reduction_tactic$(OBJ_EXT): ../src/tactic/bv/bv_size_reduction_tactic.cpp tactic/tactical.h.node ast/bv_decl_plugin.h.node ast/rewriter/expr_replacer.h.node tactic/extension_model_converter.h.node tactic/filter_model_converter.h.node ast/ast_smt2_pp.h.node
	@echo src/tactic/bv/bv_size_reduction_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_38) $(CXX_OUT_FLAG)tactic/bv/bv_size_reduction_tactic$(OBJ_EXT) ../src/tactic/bv/bv_size_reduction_tactic.cpp
tactic/bv/max_bv_sharing_tactic$(OBJ_EXT): ../src/tactic/bv/max_bv_sharing_tactic.cpp tactic/tactical.h.node ast/bv_decl_plugin.h.node ast/rewriter/rewriter_def.h.node util/obj_pair_hashtable.h.node ast/ast_lt.h.node util/cooperate.h.node
	@echo src/tactic/bv/max_bv_sharing_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_38) $(CXX_OUT_FLAG)tactic/bv/max_bv_sharing_tactic$(OBJ_EXT) ../src/tactic/bv/max_bv_sharing_tactic.cpp
tactic/bv/bv_tactics$(LIB_EXT): tactic/bv/bit_blaster_model_converter$(OBJ_EXT) tactic/bv/bit_blaster_tactic$(OBJ_EXT) tactic/bv/bv1_blaster_tactic$(OBJ_EXT) tactic/bv/bv_size_reduction_tactic$(OBJ_EXT) tactic/bv/max_bv_sharing_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/bv/bv_tactics$(LIB_EXT) tactic/bv/bit_blaster_model_converter$(OBJ_EXT) tactic/bv/bit_blaster_tactic$(OBJ_EXT) tactic/bv/bv1_blaster_tactic$(OBJ_EXT) tactic/bv/bv_size_reduction_tactic$(OBJ_EXT) tactic/bv/max_bv_sharing_tactic$(OBJ_EXT)
bv_tactics: tactic/bv/bv_tactics$(LIB_EXT)

includes_39 = -I../src/ast -I../src/util -I../src/math/polynomial
test/fuzzing/expr_delta.h.node: ../src/test/fuzzing/expr_delta.h ast/ast.h.node
	@echo done > test/fuzzing/expr_delta.h.node
test/fuzzing/expr_delta$(OBJ_EXT): ../src/test/fuzzing/expr_delta.cpp test/fuzzing/expr_delta.h.node ast/ast_pp.h.node
	@echo src/test/fuzzing/expr_delta.cpp
	@$(CXX) $(CXXFLAGS) $(includes_39) $(CXX_OUT_FLAG)test/fuzzing/expr_delta$(OBJ_EXT) ../src/test/fuzzing/expr_delta.cpp
test/fuzzing/expr_rand.h.node: ../src/test/fuzzing/expr_rand.h ast/ast.h.node util/obj_hashtable.h.node
	@echo done > test/fuzzing/expr_rand.h.node
test/fuzzing/expr_rand$(OBJ_EXT): ../src/test/fuzzing/expr_rand.cpp test/fuzzing/expr_rand.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node ast/arith_decl_plugin.h.node ast/ast_pp.h.node
	@echo src/test/fuzzing/expr_rand.cpp
	@$(CXX) $(CXXFLAGS) $(includes_39) $(CXX_OUT_FLAG)test/fuzzing/expr_rand$(OBJ_EXT) ../src/test/fuzzing/expr_rand.cpp
test/fuzzing/fuzzing$(LIB_EXT): test/fuzzing/expr_delta$(OBJ_EXT) test/fuzzing/expr_rand$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)test/fuzzing/fuzzing$(LIB_EXT) test/fuzzing/expr_delta$(OBJ_EXT) test/fuzzing/expr_rand$(OBJ_EXT)
fuzzing: test/fuzzing/fuzzing$(LIB_EXT)

includes_40 = -I../src/ast/fpa -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/rewriter -I../src/tactic/core -I../src/tactic -I../src/model -I../src/ast/normal_forms -I../src/tactic/bv -I../src/ast/rewriter/bit_blaster -I../src/sat/tactic -I../src/sat
tactic/fpa/fpa2bv_model_converter.h.node: ../src/tactic/fpa/fpa2bv_model_converter.h ast/fpa/fpa2bv_converter.h.node tactic/model_converter.h.node
	@echo done > tactic/fpa/fpa2bv_model_converter.h.node
tactic/fpa/fpa2bv_model_converter$(OBJ_EXT): ../src/tactic/fpa/fpa2bv_model_converter.cpp ast/ast_smt2_pp.h.node tactic/fpa/fpa2bv_model_converter.h.node
	@echo src/tactic/fpa/fpa2bv_model_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_40) $(CXX_OUT_FLAG)tactic/fpa/fpa2bv_model_converter$(OBJ_EXT) ../src/tactic/fpa/fpa2bv_model_converter.cpp
ast/fpa/fpa2bv_rewriter.h.node: ../src/ast/fpa/fpa2bv_rewriter.h util/cooperate.h.node ast/rewriter/rewriter_def.h.node ast/bv_decl_plugin.h.node ast/fpa/fpa2bv_converter.h.node
	@echo done > ast/fpa/fpa2bv_rewriter.h.node
tactic/fpa/fpa2bv_tactic.h.node: ../src/tactic/fpa/fpa2bv_tactic.h util/params.h.node
	@echo done > tactic/fpa/fpa2bv_tactic.h.node
tactic/fpa/fpa2bv_tactic$(OBJ_EXT): ../src/tactic/fpa/fpa2bv_tactic.cpp tactic/tactical.h.node ast/fpa/fpa2bv_rewriter.h.node tactic/core/simplify_tactic.h.node tactic/fpa/fpa2bv_tactic.h.node tactic/fpa/fpa2bv_model_converter.h.node
	@echo src/tactic/fpa/fpa2bv_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_40) $(CXX_OUT_FLAG)tactic/fpa/fpa2bv_tactic$(OBJ_EXT) ../src/tactic/fpa/fpa2bv_tactic.cpp
tactic/bv/bit_blaster_tactic.h.node: ../src/tactic/bv/bit_blaster_tactic.h util/params.h.node
	@echo done > tactic/bv/bit_blaster_tactic.h.node
sat/tactic/sat_tactic.h.node: ../src/sat/tactic/sat_tactic.h util/params.h.node
	@echo done > sat/tactic/sat_tactic.h.node
tactic/fpa/qffpa_tactic.h.node: ../src/tactic/fpa/qffpa_tactic.h util/params.h.node
	@echo done > tactic/fpa/qffpa_tactic.h.node
tactic/fpa/qffpa_tactic$(OBJ_EXT): ../src/tactic/fpa/qffpa_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/bv/bit_blaster_tactic.h.node sat/tactic/sat_tactic.h.node tactic/fpa/fpa2bv_tactic.h.node tactic/fpa/qffpa_tactic.h.node
	@echo src/tactic/fpa/qffpa_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_40) $(CXX_OUT_FLAG)tactic/fpa/qffpa_tactic$(OBJ_EXT) ../src/tactic/fpa/qffpa_tactic.cpp
tactic/fpa/fpa_tactics$(LIB_EXT): tactic/fpa/fpa2bv_model_converter$(OBJ_EXT) tactic/fpa/fpa2bv_tactic$(OBJ_EXT) tactic/fpa/qffpa_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/fpa/fpa_tactics$(LIB_EXT) tactic/fpa/fpa2bv_model_converter$(OBJ_EXT) tactic/fpa/fpa2bv_tactic$(OBJ_EXT) tactic/fpa/qffpa_tactic$(OBJ_EXT)
fpa_tactics: tactic/fpa/fpa_tactics$(LIB_EXT)

includes_41 = -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa
smt/tactic/ctx_solver_simplify_tactic.h.node: ../src/smt/tactic/ctx_solver_simplify_tactic.h tactic/tactical.h.node
	@echo done > smt/tactic/ctx_solver_simplify_tactic.h.node
smt/tactic/ctx_solver_simplify_tactic$(OBJ_EXT): ../src/smt/tactic/ctx_solver_simplify_tactic.cpp smt/tactic/ctx_solver_simplify_tactic.h.node ast/arith_decl_plugin.h.node smt/params/smt_params.h.node smt/smt_kernel.h.node ast/ast_pp.h.node ast/rewriter/mk_simplified_app.h.node ast/ast_util.h.node
	@echo src/smt/tactic/ctx_solver_simplify_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_41) $(CXX_OUT_FLAG)smt/tactic/ctx_solver_simplify_tactic$(OBJ_EXT) ../src/smt/tactic/ctx_solver_simplify_tactic.cpp
smt/tactic/smt_tactic$(OBJ_EXT): ../src/smt/tactic/smt_tactic.cpp tactic/tactic.h.node tactic/tactical.h.node smt/smt_kernel.h.node smt/params/smt_params.h.node smt/params/smt_params_helper.hpp.node ast/rewriter/rewriter_types.h.node
	@echo src/smt/tactic/smt_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_41) $(CXX_OUT_FLAG)smt/tactic/smt_tactic$(OBJ_EXT) ../src/smt/tactic/smt_tactic.cpp
smt/tactic/unit_subsumption_tactic.h.node: ../src/smt/tactic/unit_subsumption_tactic.h tactic/tactic.h.node
	@echo done > smt/tactic/unit_subsumption_tactic.h.node
smt/tactic/unit_subsumption_tactic$(OBJ_EXT): ../src/smt/tactic/unit_subsumption_tactic.cpp smt/tactic/unit_subsumption_tactic.h.node smt/smt_context.h.node
	@echo src/smt/tactic/unit_subsumption_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_41) $(CXX_OUT_FLAG)smt/tactic/unit_subsumption_tactic$(OBJ_EXT) ../src/smt/tactic/unit_subsumption_tactic.cpp
smt/tactic/smt_tactic$(LIB_EXT): smt/tactic/ctx_solver_simplify_tactic$(OBJ_EXT) smt/tactic/smt_tactic$(OBJ_EXT) smt/tactic/unit_subsumption_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)smt/tactic/smt_tactic$(LIB_EXT) smt/tactic/ctx_solver_simplify_tactic$(OBJ_EXT) smt/tactic/smt_tactic$(OBJ_EXT) smt/tactic/unit_subsumption_tactic$(OBJ_EXT)
smt_tactic: smt/tactic/smt_tactic$(LIB_EXT)

includes_42 = -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/tactic/core -I../src/tactic/bv -I../src/ast/rewriter/bit_blaster -I../src/ast/simplifier
tactic/bv/bv_size_reduction_tactic.h.node: ../src/tactic/bv/bv_size_reduction_tactic.h util/params.h.node
	@echo done > tactic/bv/bv_size_reduction_tactic.h.node
tactic/bv/max_bv_sharing_tactic.h.node: ../src/tactic/bv/max_bv_sharing_tactic.h util/params.h.node
	@echo done > tactic/bv/max_bv_sharing_tactic.h.node
tactic/sls/sls_tactic.h.node: ../src/tactic/sls/sls_tactic.h util/params.h.node
	@echo done > tactic/sls/sls_tactic.h.node
tactic/sls/sls_params.hpp.node: ../src/tactic/sls/sls_params.hpp util/params.h.node util/gparams.h.node
	@echo done > tactic/sls/sls_params.hpp.node
tactic/sls/sls_powers.h.node: ../src/tactic/sls/sls_powers.h util/mpz.h.node
	@echo done > tactic/sls/sls_powers.h.node
tactic/sls/sls_tracker.h.node: ../src/tactic/sls/sls_tracker.h
	@echo done > tactic/sls/sls_tracker.h.node
tactic/sls/sls_evaluator.h.node: ../src/tactic/sls/sls_evaluator.h tactic/sls/sls_powers.h.node tactic/sls/sls_tracker.h.node
	@echo done > tactic/sls/sls_evaluator.h.node
tactic/sls/sls_tactic$(OBJ_EXT): ../src/tactic/sls/sls_tactic.cpp util/map.h.node ast/normal_forms/nnf.h.node util/cooperate.h.node ast/ast_smt2_pp.h.node ast/ast_pp.h.node ast/rewriter/var_subst.h.node model/model_pp.h.node model/model_evaluator.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node tactic/bv/bv_size_reduction_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node tactic/core/simplify_tactic.h.node util/stopwatch.h.node tactic/core/propagate_values_tactic.h.node tactic/sls/sls_tactic.h.node tactic/core/nnf_tactic.h.node tactic/sls/sls_params.hpp.node tactic/sls/sls_evaluator.h.node tactic/sls/sls_tracker.h.node
	@echo src/tactic/sls/sls_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_42) $(CXX_OUT_FLAG)tactic/sls/sls_tactic$(OBJ_EXT) ../src/tactic/sls/sls_tactic.cpp
tactic/sls/sls_tactic$(LIB_EXT): tactic/sls/sls_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/sls/sls_tactic$(LIB_EXT) tactic/sls/sls_tactic$(OBJ_EXT)
sls_tactic: tactic/sls/sls_tactic$(LIB_EXT)

includes_43 = -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat
qe/nlarith_util.h.node: ../src/qe/nlarith_util.h ast/ast.h.node util/lbool.h.node
	@echo done > qe/nlarith_util.h.node
qe/qe.h.node: ../src/qe/qe.h ast/ast.h.node smt/params/smt_params.h.node util/statistics.h.node util/lbool.h.node ast/expr_functors.h.node ast/simplifier/simplifier.h.node ast/rewriter/rewriter.h.node model/model.h.node util/params.h.node
	@echo done > qe/qe.h.node
qe/nlarith_util$(OBJ_EXT): ../src/qe/nlarith_util.cpp ast/ast.h.node qe/nlarith_util.h.node ast/arith_decl_plugin.h.node ast/ast_pp.h.node qe/qe.h.node ast/rewriter/expr_replacer.h.node ast/rewriter/arith_rewriter.h.node ast/simplifier/arith_simplifier_plugin.h.node ast/expr_functors.h.node
	@echo src/qe/nlarith_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/nlarith_util$(OBJ_EXT) ../src/qe/nlarith_util.cpp
qe/qe_util.h.node: ../src/qe/qe_util.h ast/ast.h.node
	@echo done > qe/qe_util.h.node
qe/qe$(OBJ_EXT): ../src/qe/qe.cpp qe/qe.h.node smt/smt_theory.h.node ast/bv_decl_plugin.h.node smt/smt_context.h.node smt/theory_bv.h.node ast/ast_ll_pp.h.node ast/ast_pp.h.node ast/ast_smt_pp.h.node ast/expr_abstract.h.node ast/rewriter/var_subst.h.node ast/for_each_expr.h.node ast/dl_decl_plugin.h.node qe/nlarith_util.h.node ast/rewriter/expr_replacer.h.node ast/rewriter/factor_rewriter.h.node ast/expr_functors.h.node ast/rewriter/quant_hoist.h.node ast/rewriter/bool_rewriter.h.node qe/qe_util.h.node ast/rewriter/th_rewriter.h.node smt/smt_kernel.h.node model/model_evaluator.h.node ast/has_free_vars.h.node ast/rewriter/rewriter_def.h.node util/cooperate.h.node tactic/tactical.h.node model/model_v2_pp.h.node util/obj_hashtable.h.node
	@echo src/qe/qe.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe$(OBJ_EXT) ../src/qe/qe.cpp
qe/qe_arith.h.node: ../src/qe/qe_arith.h model/model.h.node
	@echo done > qe/qe_arith.h.node
qe/qe_arith$(OBJ_EXT): ../src/qe/qe_arith.cpp qe/qe_arith.h.node qe/qe_util.h.node ast/arith_decl_plugin.h.node ast/ast_pp.h.node ast/rewriter/th_rewriter.h.node ast/expr_functors.h.node
	@echo src/qe/qe_arith.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_arith$(OBJ_EXT) ../src/qe/qe_arith.cpp
qe/qe_arith_plugin$(OBJ_EXT): ../src/qe/qe_arith_plugin.cpp qe/qe.h.node ast/ast_pp.h.node ast/rewriter/expr_safe_replace.h.node ast/rewriter/bool_rewriter.h.node ast/bv_decl_plugin.h.node ast/arith_decl_plugin.h.node smt/arith_eq_solver.h.node ast/rewriter/arith_rewriter.h.node ast/rewriter/th_rewriter.h.node ast/rewriter/factor_rewriter.h.node util/obj_pair_hashtable.h.node qe/nlarith_util.h.node model/model_evaluator.h.node smt/smt_kernel.h.node
	@echo src/qe/qe_arith_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_arith_plugin$(OBJ_EXT) ../src/qe/qe_arith_plugin.cpp
qe/qe_array_plugin$(OBJ_EXT): ../src/qe/qe_array_plugin.cpp qe/qe.h.node ast/array_decl_plugin.h.node ast/rewriter/expr_safe_replace.h.node ast/ast_pp.h.node ast/arith_decl_plugin.h.node
	@echo src/qe/qe_array_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_array_plugin$(OBJ_EXT) ../src/qe/qe_array_plugin.cpp
qe/qe_bool_plugin$(OBJ_EXT): ../src/qe/qe_bool_plugin.cpp qe/qe.h.node ast/rewriter/expr_safe_replace.h.node ast/ast_pp.h.node model/model_evaluator.h.node
	@echo src/qe/qe_bool_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_bool_plugin$(OBJ_EXT) ../src/qe/qe_bool_plugin.cpp
qe/qe_bv_plugin$(OBJ_EXT): ../src/qe/qe_bv_plugin.cpp qe/qe.h.node ast/rewriter/expr_safe_replace.h.node ast/bv_decl_plugin.h.node model/model_evaluator.h.node
	@echo src/qe/qe_bv_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_bv_plugin$(OBJ_EXT) ../src/qe/qe_bv_plugin.cpp
qe/qe_cmd.h.node: ../src/qe/qe_cmd.h
	@echo done > qe/qe_cmd.h.node
qe/qe_cmd$(OBJ_EXT): ../src/qe/qe_cmd.cpp qe/qe_cmd.h.node qe/qe.h.node cmd_context/cmd_context.h.node cmd_context/parametric_cmd.h.node
	@echo src/qe/qe_cmd.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_cmd$(OBJ_EXT) ../src/qe/qe_cmd.cpp
qe/qe_datatype_plugin$(OBJ_EXT): ../src/qe/qe_datatype_plugin.cpp qe/qe.h.node ast/datatype_decl_plugin.h.node ast/rewriter/expr_safe_replace.h.node util/obj_pair_hashtable.h.node ast/for_each_expr.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node
	@echo src/qe/qe_datatype_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_datatype_plugin$(OBJ_EXT) ../src/qe/qe_datatype_plugin.cpp
qe/qe_dl_plugin$(OBJ_EXT): ../src/qe/qe_dl_plugin.cpp qe/qe.h.node ast/rewriter/expr_safe_replace.h.node ast/dl_decl_plugin.h.node util/obj_pair_hashtable.h.node ast/ast_pp.h.node
	@echo src/qe/qe_dl_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_dl_plugin$(OBJ_EXT) ../src/qe/qe_dl_plugin.cpp
qe/qe_lite.h.node: ../src/qe/qe_lite.h ast/ast.h.node util/uint_set.h.node util/params.h.node
	@echo done > qe/qe_lite.h.node
qe/qe_lite$(OBJ_EXT): ../src/qe/qe_lite.cpp qe/qe_lite.h.node ast/expr_abstract.h.node ast/used_vars.h.node ast/occurs.h.node ast/for_each_expr.h.node ast/rewriter/rewriter_def.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_smt2_pp.h.node tactic/tactical.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/var_subst.h.node util/uint_set.h.node qe/qe_util.h.node ast/rewriter/th_rewriter.h.node ast/for_each_expr.h.node ast/rewriter/expr_safe_replace.h.node util/cooperate.h.node ast/datatype_decl_plugin.h.node
	@echo src/qe/qe_lite.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_lite$(OBJ_EXT) ../src/qe/qe_lite.cpp
qe/qe_sat_tactic.h.node: ../src/qe/qe_sat_tactic.h tactic/tactic.h.node
	@echo done > qe/qe_sat_tactic.h.node
qe/qe_sat_tactic$(OBJ_EXT): ../src/qe/qe_sat_tactic.cpp qe/qe_sat_tactic.h.node ast/rewriter/quant_hoist.h.node ast/ast_pp.h.node smt/smt_kernel.h.node qe/qe.h.node util/cooperate.h.node model/model_v2_pp.h.node ast/rewriter/expr_replacer.h.node ast/rewriter/th_rewriter.h.node smt/expr_context_simplifier.h.node
	@echo src/qe/qe_sat_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_sat_tactic$(OBJ_EXT) ../src/qe/qe_sat_tactic.cpp
qe/qe_tactic$(OBJ_EXT): ../src/qe/qe_tactic.cpp tactic/tactical.h.node tactic/filter_model_converter.h.node util/cooperate.h.node qe/qe.h.node
	@echo src/qe/qe_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_tactic$(OBJ_EXT) ../src/qe/qe_tactic.cpp
qe/qe_util$(OBJ_EXT): ../src/qe/qe_util.cpp qe/qe_util.h.node ast/rewriter/bool_rewriter.h.node
	@echo src/qe/qe_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/qe_util$(OBJ_EXT) ../src/qe/qe_util.cpp
qe/vsubst_tactic$(OBJ_EXT): ../src/qe/vsubst_tactic.cpp tactic/tactic.h.node qe/qe.h.node ast/arith_decl_plugin.h.node ast/for_each_expr.h.node tactic/extension_model_converter.h.node ast/ast_smt2_pp.h.node
	@echo src/qe/vsubst_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_43) $(CXX_OUT_FLAG)qe/vsubst_tactic$(OBJ_EXT) ../src/qe/vsubst_tactic.cpp
qe/qe$(LIB_EXT): qe/nlarith_util$(OBJ_EXT) qe/qe$(OBJ_EXT) qe/qe_arith$(OBJ_EXT) qe/qe_arith_plugin$(OBJ_EXT) qe/qe_array_plugin$(OBJ_EXT) qe/qe_bool_plugin$(OBJ_EXT) qe/qe_bv_plugin$(OBJ_EXT) qe/qe_cmd$(OBJ_EXT) qe/qe_datatype_plugin$(OBJ_EXT) qe/qe_dl_plugin$(OBJ_EXT) qe/qe_lite$(OBJ_EXT) qe/qe_sat_tactic$(OBJ_EXT) qe/qe_tactic$(OBJ_EXT) qe/qe_util$(OBJ_EXT) qe/vsubst_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)qe/qe$(LIB_EXT) qe/nlarith_util$(OBJ_EXT) qe/qe$(OBJ_EXT) qe/qe_arith$(OBJ_EXT) qe/qe_arith_plugin$(OBJ_EXT) qe/qe_array_plugin$(OBJ_EXT) qe/qe_bool_plugin$(OBJ_EXT) qe/qe_bv_plugin$(OBJ_EXT) qe/qe_cmd$(OBJ_EXT) qe/qe_datatype_plugin$(OBJ_EXT) qe/qe_dl_plugin$(OBJ_EXT) qe/qe_lite$(OBJ_EXT) qe/qe_sat_tactic$(OBJ_EXT) qe/qe_tactic$(OBJ_EXT) qe/qe_util$(OBJ_EXT) qe/vsubst_tactic$(OBJ_EXT)
qe: qe/qe$(LIB_EXT)

includes_44 = -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/qe -I../src/sat
duality/duality_wrapper.h.node: ../src/duality/duality_wrapper.h util/version.h.node interp/iz3hash.h.node model/model.h.node solver/solver.h.node ast/well_sorted.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/datatype_decl_plugin.h.node ast/array_decl_plugin.h.node ast/ast_translation.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_smt_pp.h.node ast/ast_smt2_pp.h.node ast/rewriter/th_rewriter.h.node ast/rewriter/var_subst.h.node ast/expr_substitution.h.node ast/pp.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node util/scoped_timer.h.node ast/scoped_proof.h.node
	@echo done > duality/duality_wrapper.h.node
duality/duality_profiling$(OBJ_EXT): ../src/duality/duality_profiling.cpp duality/duality_wrapper.h.node interp/iz3profiling.h.node
	@echo src/duality/duality_profiling.cpp
	@$(CXX) $(CXXFLAGS) $(includes_44) $(CXX_OUT_FLAG)duality/duality_profiling$(OBJ_EXT) ../src/duality/duality_profiling.cpp
duality/duality.h.node: ../src/duality/duality.h duality/duality_wrapper.h.node
	@echo done > duality/duality.h.node
duality/duality_profiling.h.node: ../src/duality/duality_profiling.h
	@echo done > duality/duality_profiling.h.node
duality/duality_rpfp$(OBJ_EXT): ../src/duality/duality_rpfp.cpp duality/duality.h.node duality/duality_profiling.h.node
	@echo src/duality/duality_rpfp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_44) $(CXX_OUT_FLAG)duality/duality_rpfp$(OBJ_EXT) ../src/duality/duality_rpfp.cpp
duality/duality_solver$(OBJ_EXT): ../src/duality/duality_solver.cpp duality/duality.h.node duality/duality_profiling.h.node
	@echo src/duality/duality_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_44) $(CXX_OUT_FLAG)duality/duality_solver$(OBJ_EXT) ../src/duality/duality_solver.cpp
duality/duality_wrapper$(OBJ_EXT): ../src/duality/duality_wrapper.cpp duality/duality_wrapper.h.node smt/smt_solver.h.node interp/iz3interp.h.node util/statistics.h.node ast/expr_abstract.h.node util/stopwatch.h.node model/model_smt2_pp.h.node qe/qe_lite.h.node
	@echo src/duality/duality_wrapper.cpp
	@$(CXX) $(CXXFLAGS) $(includes_44) $(CXX_OUT_FLAG)duality/duality_wrapper$(OBJ_EXT) ../src/duality/duality_wrapper.cpp
duality/duality$(LIB_EXT): duality/duality_profiling$(OBJ_EXT) duality/duality_rpfp$(OBJ_EXT) duality/duality_solver$(OBJ_EXT) duality/duality_wrapper$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)duality/duality$(LIB_EXT) duality/duality_profiling$(OBJ_EXT) duality/duality_rpfp$(OBJ_EXT) duality/duality_solver$(OBJ_EXT) duality/duality_wrapper$(OBJ_EXT)
duality: duality/duality$(LIB_EXT)

includes_45 = -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat -I../src/tactic/aig -I../src/qe
muz/base/dl_boogie_proof.h.node: ../src/muz/base/dl_boogie_proof.h ast/ast.h.node model/model.h.node
	@echo done > muz/base/dl_boogie_proof.h.node
muz/base/proof_utils.h.node: ../src/muz/base/proof_utils.h
	@echo done > muz/base/proof_utils.h.node
muz/base/dl_boogie_proof$(OBJ_EXT): ../src/muz/base/dl_boogie_proof.cpp muz/base/dl_boogie_proof.h.node model/model_pp.h.node muz/base/proof_utils.h.node ast/ast_pp.h.node qe/qe_util.h.node
	@echo src/muz/base/dl_boogie_proof.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/dl_boogie_proof$(OBJ_EXT) ../src/muz/base/dl_boogie_proof.cpp
muz/base/dl_costs.h.node: ../src/muz/base/dl_costs.h ast/ast.h.node
	@echo done > muz/base/dl_costs.h.node
muz/base/dl_util.h.node: ../src/muz/base/dl_util.h ast/ast.h.node util/hashtable.h.node util/obj_hashtable.h.node util/uint_set.h.node tactic/horn_subsume_model_converter.h.node tactic/replace_proof_converter.h.node ast/substitution/substitution.h.node ast/rewriter/ast_counter.h.node util/statistics.h.node util/lbool.h.node qe/qe_util.h.node
	@echo done > muz/base/dl_util.h.node
muz/base/hnf.h.node: ../src/muz/base/hnf.h ast/ast.h.node util/params.h.node ast/normal_forms/defined_names.h.node tactic/proof_converter.h.node
	@echo done > muz/base/hnf.h.node
muz/base/dl_rule.h.node: ../src/muz/base/dl_rule.h ast/ast.h.node muz/base/dl_costs.h.node muz/base/dl_util.h.node ast/used_vars.h.node tactic/proof_converter.h.node tactic/model_converter.h.node ast/rewriter/ast_counter.h.node ast/rewriter/rewriter.h.node muz/base/hnf.h.node qe/qe_lite.h.node
	@echo done > muz/base/dl_rule.h.node
muz/base/dl_rule_set.h.node: ../src/muz/base/dl_rule_set.h util/obj_hashtable.h.node muz/base/dl_rule.h.node
	@echo done > muz/base/dl_rule_set.h.node
muz/base/dl_rule_transformer.h.node: ../src/muz/base/dl_rule_transformer.h util/map.h.node util/vector.h.node muz/base/dl_rule.h.node muz/base/dl_rule_set.h.node
	@echo done > muz/base/dl_rule_transformer.h.node
muz/base/dl_engine_base.h.node: ../src/muz/base/dl_engine_base.h model/model.h.node
	@echo done > muz/base/dl_engine_base.h.node
muz/base/dl_context.h.node: ../src/muz/base/dl_context.h ast/arith_decl_plugin.h.node util/map.h.node ast/rewriter/th_rewriter.h.node util/str_hashtable.h.node ast/rewriter/var_subst.h.node muz/base/dl_costs.h.node ast/dl_decl_plugin.h.node muz/base/dl_rule_set.h.node util/lbool.h.node util/statistics.h.node util/params.h.node ast/trail.h.node tactic/model_converter.h.node model/model2expr.h.node smt/params/smt_params.h.node muz/base/dl_rule_transformer.h.node ast/expr_abstract.h.node ast/expr_functors.h.node muz/base/dl_engine_base.h.node
	@echo done > muz/base/dl_context.h.node
muz/base/fixedpoint_params.hpp.node: ../src/muz/base/fixedpoint_params.hpp util/params.h.node util/gparams.h.node
	@echo done > muz/base/fixedpoint_params.hpp.node
muz/base/dl_context$(OBJ_EXT): ../src/muz/base/dl_context.cpp ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node muz/base/dl_context.h.node ast/for_each_expr.h.node ast/ast_smt_pp.h.node ast/ast_smt2_pp.h.node ast/datatype_decl_plugin.h.node ast/scoped_proof.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/base/dl_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/dl_context$(OBJ_EXT) ../src/muz/base/dl_context.cpp
muz/base/dl_costs$(OBJ_EXT): ../src/muz/base/dl_costs.cpp util/debug.h.node util/stopwatch.h.node muz/base/dl_context.h.node muz/base/dl_rule.h.node muz/base/dl_costs.h.node
	@echo src/muz/base/dl_costs.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/dl_costs$(OBJ_EXT) ../src/muz/base/dl_costs.cpp
muz/base/dl_rule$(OBJ_EXT): ../src/muz/base/dl_rule.cpp ast/ast_pp.h.node muz/base/dl_context.h.node util/map.h.node ast/recurse_expr_def.h.node muz/base/dl_rule.h.node qe/qe.h.node ast/for_each_expr.h.node ast/used_vars.h.node ast/rewriter/var_subst.h.node ast/rewriter/rewriter_def.h.node ast/rewriter/th_rewriter.h.node ast/ast_smt2_pp.h.node ast/used_symbols.h.node ast/rewriter/quant_hoist.h.node ast/rewriter/expr_replacer.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/expr_safe_replace.h.node tactic/filter_model_converter.h.node ast/scoped_proof.h.node ast/datatype_decl_plugin.h.node
	@echo src/muz/base/dl_rule.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/dl_rule$(OBJ_EXT) ../src/muz/base/dl_rule.cpp
muz/base/dl_rule_set$(OBJ_EXT): ../src/muz/base/dl_rule_set.cpp muz/base/dl_context.h.node muz/base/dl_rule_set.h.node ast/ast_pp.h.node
	@echo src/muz/base/dl_rule_set.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/dl_rule_set$(OBJ_EXT) ../src/muz/base/dl_rule_set.cpp
muz/base/dl_rule_subsumption_index.h.node: ../src/muz/base/dl_rule_subsumption_index.h muz/base/dl_context.h.node
	@echo done > muz/base/dl_rule_subsumption_index.h.node
muz/base/dl_rule_subsumption_index$(OBJ_EXT): ../src/muz/base/dl_rule_subsumption_index.cpp ast/ast_pp.h.node muz/base/dl_rule_subsumption_index.h.node
	@echo src/muz/base/dl_rule_subsumption_index.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/dl_rule_subsumption_index$(OBJ_EXT) ../src/muz/base/dl_rule_subsumption_index.cpp
muz/base/dl_rule_transformer$(OBJ_EXT): ../src/muz/base/dl_rule_transformer.cpp muz/base/dl_context.h.node muz/base/dl_rule_transformer.h.node util/stopwatch.h.node
	@echo src/muz/base/dl_rule_transformer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/dl_rule_transformer$(OBJ_EXT) ../src/muz/base/dl_rule_transformer.cpp
muz/base/dl_util$(OBJ_EXT): ../src/muz/base/dl_util.cpp ast/ast_pp.h.node ast/rewriter/bool_rewriter.h.node ast/for_each_expr.h.node ast/scoped_proof.h.node muz/base/dl_context.h.node muz/base/dl_rule.h.node muz/base/dl_util.h.node util/stopwatch.h.node
	@echo src/muz/base/dl_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/dl_util$(OBJ_EXT) ../src/muz/base/dl_util.cpp
muz/base/hnf$(OBJ_EXT): ../src/muz/base/hnf.cpp muz/base/hnf.h.node util/warning.h.node ast/used_vars.h.node ast/well_sorted.h.node ast/rewriter/var_subst.h.node ast/normal_forms/name_exprs.h.node ast/act_cache.h.node util/cooperate.h.node ast/ast_pp.h.node ast/rewriter/quant_hoist.h.node muz/base/dl_util.h.node ast/for_each_ast.h.node ast/for_each_expr.h.node
	@echo src/muz/base/hnf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/hnf$(OBJ_EXT) ../src/muz/base/hnf.cpp
muz/base/proof_utils$(OBJ_EXT): ../src/muz/base/proof_utils.cpp muz/base/dl_util.h.node muz/base/proof_utils.h.node ast/ast_smt2_pp.h.node ast/rewriter/var_subst.h.node
	@echo src/muz/base/proof_utils.cpp
	@$(CXX) $(CXXFLAGS) $(includes_45) $(CXX_OUT_FLAG)muz/base/proof_utils$(OBJ_EXT) ../src/muz/base/proof_utils.cpp
muz/base/muz$(LIB_EXT): muz/base/dl_boogie_proof$(OBJ_EXT) muz/base/dl_context$(OBJ_EXT) muz/base/dl_costs$(OBJ_EXT) muz/base/dl_rule$(OBJ_EXT) muz/base/dl_rule_set$(OBJ_EXT) muz/base/dl_rule_subsumption_index$(OBJ_EXT) muz/base/dl_rule_transformer$(OBJ_EXT) muz/base/dl_util$(OBJ_EXT) muz/base/hnf$(OBJ_EXT) muz/base/proof_utils$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)muz/base/muz$(LIB_EXT) muz/base/dl_boogie_proof$(OBJ_EXT) muz/base/dl_context$(OBJ_EXT) muz/base/dl_costs$(OBJ_EXT) muz/base/dl_rule$(OBJ_EXT) muz/base/dl_rule_set$(OBJ_EXT) muz/base/dl_rule_subsumption_index$(OBJ_EXT) muz/base/dl_rule_transformer$(OBJ_EXT) muz/base/dl_util$(OBJ_EXT) muz/base/hnf$(OBJ_EXT) muz/base/proof_utils$(OBJ_EXT)
muz: muz/base/muz$(LIB_EXT)

includes_46 = -I../src/muz/base -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat -I../src/tactic/aig -I../src/qe -I../src/math/hilbert
muz/transforms/dl_mk_interp_tail_simplifier.h.node: ../src/muz/transforms/dl_mk_interp_tail_simplifier.h muz/base/dl_context.h.node muz/base/dl_rule_transformer.h.node ast/substitution/unifier.h.node ast/substitution/substitution.h.node ast/arith_decl_plugin.h.node
	@echo done > muz/transforms/dl_mk_interp_tail_simplifier.h.node
muz/transforms/dl_mk_array_blast.h.node: ../src/muz/transforms/dl_mk_array_blast.h muz/base/dl_context.h.node muz/base/dl_rule_set.h.node muz/base/dl_rule_transformer.h.node muz/transforms/dl_mk_interp_tail_simplifier.h.node tactic/equiv_proof_converter.h.node ast/array_decl_plugin.h.node ast/rewriter/expr_safe_replace.h.node
	@echo done > muz/transforms/dl_mk_array_blast.h.node
muz/transforms/dl_mk_array_blast$(OBJ_EXT): ../src/muz/transforms/dl_mk_array_blast.cpp muz/transforms/dl_mk_array_blast.h.node qe/qe_util.h.node ast/scoped_proof.h.node
	@echo src/muz/transforms/dl_mk_array_blast.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_array_blast$(OBJ_EXT) ../src/muz/transforms/dl_mk_array_blast.cpp
muz/transforms/dl_mk_backwards.h.node: ../src/muz/transforms/dl_mk_backwards.h muz/base/dl_rule_transformer.h.node
	@echo done > muz/transforms/dl_mk_backwards.h.node
muz/transforms/dl_mk_backwards$(OBJ_EXT): ../src/muz/transforms/dl_mk_backwards.cpp muz/transforms/dl_mk_backwards.h.node muz/base/dl_context.h.node
	@echo src/muz/transforms/dl_mk_backwards.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_backwards$(OBJ_EXT) ../src/muz/transforms/dl_mk_backwards.cpp
muz/transforms/dl_mk_bit_blast.h.node: ../src/muz/transforms/dl_mk_bit_blast.h muz/base/dl_rule_transformer.h.node
	@echo done > muz/transforms/dl_mk_bit_blast.h.node
muz/transforms/dl_mk_bit_blast$(OBJ_EXT): ../src/muz/transforms/dl_mk_bit_blast.cpp muz/transforms/dl_mk_bit_blast.h.node ast/rewriter/bit_blaster/bit_blaster_rewriter.h.node ast/rewriter/rewriter_def.h.node ast/ast_pp.h.node ast/rewriter/expr_safe_replace.h.node tactic/filter_model_converter.h.node muz/transforms/dl_mk_interp_tail_simplifier.h.node muz/base/fixedpoint_params.hpp.node ast/scoped_proof.h.node model/model_v2_pp.h.node
	@echo src/muz/transforms/dl_mk_bit_blast.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_bit_blast$(OBJ_EXT) ../src/muz/transforms/dl_mk_bit_blast.cpp
muz/transforms/dl_mk_rule_inliner.h.node: ../src/muz/transforms/dl_mk_rule_inliner.h muz/base/dl_context.h.node muz/base/dl_rule_transformer.h.node muz/transforms/dl_mk_interp_tail_simplifier.h.node ast/substitution/unifier.h.node ast/substitution/substitution.h.node ast/substitution/substitution_tree.h.node
	@echo done > muz/transforms/dl_mk_rule_inliner.h.node
muz/transforms/dl_mk_coalesce.h.node: ../src/muz/transforms/dl_mk_coalesce.h muz/base/dl_context.h.node muz/base/dl_rule_set.h.node util/uint_set.h.node muz/base/dl_rule_transformer.h.node muz/transforms/dl_mk_rule_inliner.h.node
	@echo done > muz/transforms/dl_mk_coalesce.h.node
muz/transforms/dl_mk_coalesce$(OBJ_EXT): ../src/muz/transforms/dl_mk_coalesce.cpp muz/transforms/dl_mk_coalesce.h.node ast/rewriter/bool_rewriter.h.node
	@echo src/muz/transforms/dl_mk_coalesce.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_coalesce$(OBJ_EXT) ../src/muz/transforms/dl_mk_coalesce.cpp
muz/transforms/dl_mk_coi_filter.h.node: ../src/muz/transforms/dl_mk_coi_filter.h muz/base/dl_context.h.node muz/base/dl_rule_transformer.h.node
	@echo done > muz/transforms/dl_mk_coi_filter.h.node
muz/transforms/dl_mk_coi_filter$(OBJ_EXT): ../src/muz/transforms/dl_mk_coi_filter.cpp ast/ast_pp.h.node muz/transforms/dl_mk_coi_filter.h.node tactic/extension_model_converter.h.node
	@echo src/muz/transforms/dl_mk_coi_filter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_coi_filter$(OBJ_EXT) ../src/muz/transforms/dl_mk_coi_filter.cpp
muz/transforms/dl_mk_filter_rules.h.node: ../src/muz/transforms/dl_mk_filter_rules.h util/map.h.node muz/base/dl_rule_set.h.node muz/base/dl_rule_transformer.h.node
	@echo done > muz/transforms/dl_mk_filter_rules.h.node
muz/transforms/dl_mk_filter_rules$(OBJ_EXT): ../src/muz/transforms/dl_mk_filter_rules.cpp muz/transforms/dl_mk_filter_rules.h.node muz/base/dl_context.h.node ast/for_each_expr.h.node ast/ast_pp.h.node
	@echo src/muz/transforms/dl_mk_filter_rules.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_filter_rules$(OBJ_EXT) ../src/muz/transforms/dl_mk_filter_rules.cpp
muz/transforms/dl_mk_interp_tail_simplifier$(OBJ_EXT): ../src/muz/transforms/dl_mk_interp_tail_simplifier.cpp ast/ast_pp.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/rewriter.h.node ast/rewriter/rewriter_def.h.node muz/transforms/dl_mk_rule_inliner.h.node muz/transforms/dl_mk_interp_tail_simplifier.h.node
	@echo src/muz/transforms/dl_mk_interp_tail_simplifier.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_interp_tail_simplifier$(OBJ_EXT) ../src/muz/transforms/dl_mk_interp_tail_simplifier.cpp
muz/transforms/dl_mk_karr_invariants.h.node: ../src/muz/transforms/dl_mk_karr_invariants.h muz/base/dl_context.h.node muz/base/dl_rule_set.h.node muz/base/dl_rule_transformer.h.node ast/arith_decl_plugin.h.node math/hilbert/hilbert_basis.h.node
	@echo done > muz/transforms/dl_mk_karr_invariants.h.node
muz/transforms/dl_mk_loop_counter.h.node: ../src/muz/transforms/dl_mk_loop_counter.h muz/base/dl_rule_transformer.h.node ast/arith_decl_plugin.h.node
	@echo done > muz/transforms/dl_mk_loop_counter.h.node
muz/transforms/dl_mk_karr_invariants$(OBJ_EXT): ../src/muz/transforms/dl_mk_karr_invariants.cpp ast/rewriter/expr_safe_replace.h.node ast/rewriter/bool_rewriter.h.node ast/for_each_expr.h.node muz/transforms/dl_mk_karr_invariants.h.node muz/transforms/dl_mk_backwards.h.node muz/transforms/dl_mk_loop_counter.h.node
	@echo src/muz/transforms/dl_mk_karr_invariants.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_karr_invariants$(OBJ_EXT) ../src/muz/transforms/dl_mk_karr_invariants.cpp
muz/transforms/dl_mk_loop_counter$(OBJ_EXT): ../src/muz/transforms/dl_mk_loop_counter.cpp muz/transforms/dl_mk_loop_counter.h.node muz/base/dl_context.h.node
	@echo src/muz/transforms/dl_mk_loop_counter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_loop_counter$(OBJ_EXT) ../src/muz/transforms/dl_mk_loop_counter.cpp
muz/transforms/dl_mk_magic_sets.h.node: ../src/muz/transforms/dl_mk_magic_sets.h util/map.h.node util/obj_pair_hashtable.h.node muz/base/dl_context.h.node muz/base/dl_rule_set.h.node muz/base/dl_rule_transformer.h.node
	@echo done > muz/transforms/dl_mk_magic_sets.h.node
muz/transforms/dl_mk_magic_sets$(OBJ_EXT): ../src/muz/transforms/dl_mk_magic_sets.cpp ast/ast_pp.h.node muz/transforms/dl_mk_magic_sets.h.node
	@echo src/muz/transforms/dl_mk_magic_sets.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_magic_sets$(OBJ_EXT) ../src/muz/transforms/dl_mk_magic_sets.cpp
muz/transforms/dl_mk_magic_symbolic.h.node: ../src/muz/transforms/dl_mk_magic_symbolic.h muz/base/dl_rule_transformer.h.node
	@echo done > muz/transforms/dl_mk_magic_symbolic.h.node
muz/transforms/dl_mk_magic_symbolic$(OBJ_EXT): ../src/muz/transforms/dl_mk_magic_symbolic.cpp muz/transforms/dl_mk_magic_symbolic.h.node muz/base/dl_context.h.node
	@echo src/muz/transforms/dl_mk_magic_symbolic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_magic_symbolic$(OBJ_EXT) ../src/muz/transforms/dl_mk_magic_symbolic.cpp
muz/transforms/dl_mk_quantifier_abstraction.h.node: ../src/muz/transforms/dl_mk_quantifier_abstraction.h muz/base/dl_rule_transformer.h.node ast/array_decl_plugin.h.node
	@echo done > muz/transforms/dl_mk_quantifier_abstraction.h.node
muz/transforms/dl_mk_quantifier_abstraction$(OBJ_EXT): ../src/muz/transforms/dl_mk_quantifier_abstraction.cpp muz/transforms/dl_mk_quantifier_abstraction.h.node muz/base/dl_context.h.node ast/rewriter/expr_safe_replace.h.node ast/expr_abstract.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/transforms/dl_mk_quantifier_abstraction.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_quantifier_abstraction$(OBJ_EXT) ../src/muz/transforms/dl_mk_quantifier_abstraction.cpp
muz/transforms/dl_mk_quantifier_instantiation.h.node: ../src/muz/transforms/dl_mk_quantifier_instantiation.h muz/base/dl_rule_transformer.h.node ast/rewriter/expr_safe_replace.h.node
	@echo done > muz/transforms/dl_mk_quantifier_instantiation.h.node
muz/transforms/dl_mk_quantifier_instantiation$(OBJ_EXT): ../src/muz/transforms/dl_mk_quantifier_instantiation.cpp muz/transforms/dl_mk_quantifier_instantiation.h.node muz/base/dl_context.h.node ast/pattern/pattern_inference.h.node
	@echo src/muz/transforms/dl_mk_quantifier_instantiation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_quantifier_instantiation$(OBJ_EXT) ../src/muz/transforms/dl_mk_quantifier_instantiation.cpp
muz/transforms/dl_mk_rule_inliner$(OBJ_EXT): ../src/muz/transforms/dl_mk_rule_inliner.cpp ast/ast_pp.h.node ast/rewriter/rewriter.h.node ast/rewriter/rewriter_def.h.node muz/transforms/dl_mk_rule_inliner.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/transforms/dl_mk_rule_inliner.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_rule_inliner$(OBJ_EXT) ../src/muz/transforms/dl_mk_rule_inliner.cpp
muz/transforms/dl_mk_scale.h.node: ../src/muz/transforms/dl_mk_scale.h muz/base/dl_rule_transformer.h.node ast/arith_decl_plugin.h.node
	@echo done > muz/transforms/dl_mk_scale.h.node
muz/transforms/dl_mk_scale$(OBJ_EXT): ../src/muz/transforms/dl_mk_scale.cpp muz/transforms/dl_mk_scale.h.node muz/base/dl_context.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/transforms/dl_mk_scale.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_scale$(OBJ_EXT) ../src/muz/transforms/dl_mk_scale.cpp
muz/transforms/dl_mk_separate_negated_tails.h.node: ../src/muz/transforms/dl_mk_separate_negated_tails.h muz/base/dl_rule_transformer.h.node muz/base/dl_context.h.node
	@echo done > muz/transforms/dl_mk_separate_negated_tails.h.node
muz/transforms/dl_mk_separate_negated_tails$(OBJ_EXT): ../src/muz/transforms/dl_mk_separate_negated_tails.cpp muz/transforms/dl_mk_separate_negated_tails.h.node muz/base/dl_context.h.node
	@echo src/muz/transforms/dl_mk_separate_negated_tails.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_separate_negated_tails$(OBJ_EXT) ../src/muz/transforms/dl_mk_separate_negated_tails.cpp
muz/transforms/dl_mk_slice.h.node: ../src/muz/transforms/dl_mk_slice.h muz/base/dl_context.h.node muz/base/dl_rule_set.h.node util/uint_set.h.node muz/base/dl_rule_transformer.h.node
	@echo done > muz/transforms/dl_mk_slice.h.node
muz/transforms/dl_mk_slice$(OBJ_EXT): ../src/muz/transforms/dl_mk_slice.cpp muz/transforms/dl_mk_slice.h.node ast/ast_pp.h.node ast/expr_functors.h.node muz/transforms/dl_mk_rule_inliner.h.node model/model_smt2_pp.h.node
	@echo src/muz/transforms/dl_mk_slice.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_slice$(OBJ_EXT) ../src/muz/transforms/dl_mk_slice.cpp
muz/transforms/dl_mk_subsumption_checker.h.node: ../src/muz/transforms/dl_mk_subsumption_checker.h muz/base/dl_context.h.node muz/base/dl_rule_transformer.h.node muz/base/dl_rule_subsumption_index.h.node
	@echo done > muz/transforms/dl_mk_subsumption_checker.h.node
muz/transforms/dl_mk_subsumption_checker$(OBJ_EXT): ../src/muz/transforms/dl_mk_subsumption_checker.cpp ast/ast_pp.h.node ast/rewriter/rewriter.h.node ast/rewriter/rewriter_def.h.node muz/transforms/dl_mk_subsumption_checker.h.node
	@echo src/muz/transforms/dl_mk_subsumption_checker.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_subsumption_checker$(OBJ_EXT) ../src/muz/transforms/dl_mk_subsumption_checker.cpp
muz/transforms/dl_mk_unbound_compressor.h.node: ../src/muz/transforms/dl_mk_unbound_compressor.h util/map.h.node util/obj_pair_hashtable.h.node muz/base/dl_context.h.node muz/base/dl_rule_set.h.node muz/base/dl_rule_transformer.h.node
	@echo done > muz/transforms/dl_mk_unbound_compressor.h.node
muz/transforms/dl_mk_unbound_compressor$(OBJ_EXT): ../src/muz/transforms/dl_mk_unbound_compressor.cpp muz/transforms/dl_mk_unbound_compressor.h.node
	@echo src/muz/transforms/dl_mk_unbound_compressor.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_unbound_compressor$(OBJ_EXT) ../src/muz/transforms/dl_mk_unbound_compressor.cpp
muz/transforms/dl_mk_unfold.h.node: ../src/muz/transforms/dl_mk_unfold.h muz/base/dl_context.h.node muz/base/dl_rule_set.h.node util/uint_set.h.node muz/base/dl_rule_transformer.h.node muz/transforms/dl_mk_rule_inliner.h.node
	@echo done > muz/transforms/dl_mk_unfold.h.node
muz/transforms/dl_mk_unfold$(OBJ_EXT): ../src/muz/transforms/dl_mk_unfold.cpp muz/transforms/dl_mk_unfold.h.node
	@echo src/muz/transforms/dl_mk_unfold.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_mk_unfold$(OBJ_EXT) ../src/muz/transforms/dl_mk_unfold.cpp
muz/transforms/dl_transforms.h.node: ../src/muz/transforms/dl_transforms.h muz/base/dl_context.h.node
	@echo done > muz/transforms/dl_transforms.h.node
muz/transforms/dl_transforms$(OBJ_EXT): ../src/muz/transforms/dl_transforms.cpp muz/transforms/dl_transforms.h.node muz/base/dl_rule_transformer.h.node muz/transforms/dl_mk_coi_filter.h.node muz/transforms/dl_mk_filter_rules.h.node muz/transforms/dl_mk_interp_tail_simplifier.h.node muz/transforms/dl_mk_rule_inliner.h.node muz/transforms/dl_mk_bit_blast.h.node muz/transforms/dl_mk_array_blast.h.node muz/transforms/dl_mk_karr_invariants.h.node muz/transforms/dl_mk_magic_symbolic.h.node muz/transforms/dl_mk_quantifier_abstraction.h.node muz/transforms/dl_mk_quantifier_instantiation.h.node muz/transforms/dl_mk_subsumption_checker.h.node muz/transforms/dl_mk_scale.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/transforms/dl_transforms.cpp
	@$(CXX) $(CXXFLAGS) $(includes_46) $(CXX_OUT_FLAG)muz/transforms/dl_transforms$(OBJ_EXT) ../src/muz/transforms/dl_transforms.cpp
muz/transforms/transforms$(LIB_EXT): muz/transforms/dl_mk_array_blast$(OBJ_EXT) muz/transforms/dl_mk_backwards$(OBJ_EXT) muz/transforms/dl_mk_bit_blast$(OBJ_EXT) muz/transforms/dl_mk_coalesce$(OBJ_EXT) muz/transforms/dl_mk_coi_filter$(OBJ_EXT) muz/transforms/dl_mk_filter_rules$(OBJ_EXT) muz/transforms/dl_mk_interp_tail_simplifier$(OBJ_EXT) muz/transforms/dl_mk_karr_invariants$(OBJ_EXT) muz/transforms/dl_mk_loop_counter$(OBJ_EXT) muz/transforms/dl_mk_magic_sets$(OBJ_EXT) muz/transforms/dl_mk_magic_symbolic$(OBJ_EXT) muz/transforms/dl_mk_quantifier_abstraction$(OBJ_EXT) muz/transforms/dl_mk_quantifier_instantiation$(OBJ_EXT) muz/transforms/dl_mk_rule_inliner$(OBJ_EXT) muz/transforms/dl_mk_scale$(OBJ_EXT) muz/transforms/dl_mk_separate_negated_tails$(OBJ_EXT) muz/transforms/dl_mk_slice$(OBJ_EXT) muz/transforms/dl_mk_subsumption_checker$(OBJ_EXT) muz/transforms/dl_mk_unbound_compressor$(OBJ_EXT) muz/transforms/dl_mk_unfold$(OBJ_EXT) muz/transforms/dl_transforms$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)muz/transforms/transforms$(LIB_EXT) muz/transforms/dl_mk_array_blast$(OBJ_EXT) muz/transforms/dl_mk_backwards$(OBJ_EXT) muz/transforms/dl_mk_bit_blast$(OBJ_EXT) muz/transforms/dl_mk_coalesce$(OBJ_EXT) muz/transforms/dl_mk_coi_filter$(OBJ_EXT) muz/transforms/dl_mk_filter_rules$(OBJ_EXT) muz/transforms/dl_mk_interp_tail_simplifier$(OBJ_EXT) muz/transforms/dl_mk_karr_invariants$(OBJ_EXT) muz/transforms/dl_mk_loop_counter$(OBJ_EXT) muz/transforms/dl_mk_magic_sets$(OBJ_EXT) muz/transforms/dl_mk_magic_symbolic$(OBJ_EXT) muz/transforms/dl_mk_quantifier_abstraction$(OBJ_EXT) muz/transforms/dl_mk_quantifier_instantiation$(OBJ_EXT) muz/transforms/dl_mk_rule_inliner$(OBJ_EXT) muz/transforms/dl_mk_scale$(OBJ_EXT) muz/transforms/dl_mk_separate_negated_tails$(OBJ_EXT) muz/transforms/dl_mk_slice$(OBJ_EXT) muz/transforms/dl_mk_subsumption_checker$(OBJ_EXT) muz/transforms/dl_mk_unbound_compressor$(OBJ_EXT) muz/transforms/dl_mk_unfold$(OBJ_EXT) muz/transforms/dl_transforms$(OBJ_EXT)
transforms: muz/transforms/transforms$(LIB_EXT)

includes_47 = -I../src/muz/base -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat -I../src/tactic/aig -I../src/qe -I../src/muz/transforms -I../src/math/hilbert
muz/rel/dl_base.h.node: ../src/muz/rel/dl_base.h ast/ast.h.node util/map.h.node util/vector.h.node util/ref.h.node muz/base/dl_util.h.node muz/base/dl_context.h.node
	@echo done > muz/rel/dl_base.h.node
muz/rel/dl_relation_manager.h.node: ../src/muz/rel/dl_relation_manager.h util/map.h.node util/vector.h.node muz/rel/dl_base.h.node
	@echo done > muz/rel/dl_relation_manager.h.node
muz/rel/dl_instruction.h.node: ../src/muz/rel/dl_instruction.h ast/ast.h.node util/vector.h.node muz/rel/dl_base.h.node muz/base/dl_costs.h.node muz/base/dl_context.h.node
	@echo done > muz/rel/dl_instruction.h.node
muz/rel/rel_context.h.node: ../src/muz/rel/rel_context.h ast/ast.h.node muz/rel/dl_relation_manager.h.node muz/rel/dl_instruction.h.node muz/base/dl_engine_base.h.node muz/base/dl_context.h.node util/lbool.h.node
	@echo done > muz/rel/rel_context.h.node
muz/rel/aig_exporter.h.node: ../src/muz/rel/aig_exporter.h tactic/aig/aig.h.node muz/base/dl_rule_set.h.node muz/rel/rel_context.h.node
	@echo done > muz/rel/aig_exporter.h.node
muz/rel/aig_exporter$(OBJ_EXT): ../src/muz/rel/aig_exporter.cpp muz/rel/aig_exporter.h.node muz/base/dl_context.h.node
	@echo src/muz/rel/aig_exporter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/aig_exporter$(OBJ_EXT) ../src/muz/rel/aig_exporter.cpp
muz/rel/dl_base$(OBJ_EXT): ../src/muz/rel/dl_base.cpp ast/ast_pp.h.node smt/union_find.h.node util/vector.h.node muz/base/dl_context.h.node muz/rel/dl_base.h.node ast/rewriter/bool_rewriter.h.node muz/rel/dl_relation_manager.h.node
	@echo src/muz/rel/dl_base.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_base$(OBJ_EXT) ../src/muz/rel/dl_base.cpp
muz/rel/dl_vector_relation.h.node: ../src/muz/rel/dl_vector_relation.h ast/ast_pp.h.node muz/base/dl_context.h.node smt/union_find.h.node
	@echo done > muz/rel/dl_vector_relation.h.node
muz/rel/dl_interval_relation.h.node: ../src/muz/rel/dl_interval_relation.h muz/base/dl_context.h.node muz/rel/dl_relation_manager.h.node muz/rel/dl_base.h.node smt/old_interval.h.node muz/rel/dl_vector_relation.h.node ast/arith_decl_plugin.h.node ast/simplifier/basic_simplifier_plugin.h.node
	@echo done > muz/rel/dl_interval_relation.h.node
muz/rel/dl_bound_relation.h.node: ../src/muz/rel/dl_bound_relation.h muz/base/dl_context.h.node muz/rel/dl_relation_manager.h.node muz/rel/dl_base.h.node util/uint_set.h.node muz/rel/dl_vector_relation.h.node muz/rel/dl_interval_relation.h.node ast/arith_decl_plugin.h.node ast/simplifier/basic_simplifier_plugin.h.node
	@echo done > muz/rel/dl_bound_relation.h.node
muz/rel/dl_bound_relation$(OBJ_EXT): ../src/muz/rel/dl_bound_relation.cpp muz/rel/dl_bound_relation.h.node util/debug.h.node ast/ast_pp.h.node
	@echo src/muz/rel/dl_bound_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_bound_relation$(OBJ_EXT) ../src/muz/rel/dl_bound_relation.cpp
muz/rel/dl_check_table.h.node: ../src/muz/rel/dl_check_table.h muz/rel/dl_base.h.node ast/dl_decl_plugin.h.node muz/rel/dl_relation_manager.h.node
	@echo done > muz/rel/dl_check_table.h.node
muz/rel/dl_table.h.node: ../src/muz/rel/dl_table.h ast/ast.h.node util/bit_vector.h.node util/buffer.h.node util/hashtable.h.node util/map.h.node util/ref_vector.h.node util/vector.h.node smt/union_find.h.node muz/rel/dl_base.h.node muz/base/dl_util.h.node util/bit_vector.h.node
	@echo done > muz/rel/dl_table.h.node
muz/rel/dl_check_table$(OBJ_EXT): ../src/muz/rel/dl_check_table.cpp muz/rel/dl_check_table.h.node muz/rel/dl_table.h.node
	@echo src/muz/rel/dl_check_table.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_check_table$(OBJ_EXT) ../src/muz/rel/dl_check_table.cpp
muz/rel/dl_compiler.h.node: ../src/muz/rel/dl_compiler.h ast/ast.h.node util/hashtable.h.node util/map.h.node util/obj_pair_hashtable.h.node util/ref_vector.h.node util/vector.h.node muz/rel/dl_base.h.node muz/base/dl_context.h.node muz/rel/dl_instruction.h.node
	@echo done > muz/rel/dl_compiler.h.node
muz/rel/dl_compiler$(OBJ_EXT): ../src/muz/rel/dl_compiler.cpp util/ref_vector.h.node muz/base/dl_context.h.node muz/rel/rel_context.h.node muz/base/dl_rule.h.node muz/base/dl_util.h.node muz/rel/dl_compiler.h.node ast/ast_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/muz/rel/dl_compiler.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_compiler$(OBJ_EXT) ../src/muz/rel/dl_compiler.cpp
muz/rel/dl_external_relation.h.node: ../src/muz/rel/dl_external_relation.h muz/rel/dl_base.h.node
	@echo done > muz/rel/dl_external_relation.h.node
muz/rel/dl_external_relation$(OBJ_EXT): ../src/muz/rel/dl_external_relation.cpp util/debug.h.node ast/ast_pp.h.node muz/base/dl_context.h.node muz/rel/dl_external_relation.h.node ast/dl_decl_plugin.h.node
	@echo src/muz/rel/dl_external_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_external_relation$(OBJ_EXT) ../src/muz/rel/dl_external_relation.cpp
muz/rel/dl_table_relation.h.node: ../src/muz/rel/dl_table_relation.h muz/rel/dl_base.h.node muz/base/dl_util.h.node
	@echo done > muz/rel/dl_table_relation.h.node
muz/rel/dl_finite_product_relation.h.node: ../src/muz/rel/dl_finite_product_relation.h muz/rel/dl_base.h.node muz/rel/dl_relation_manager.h.node muz/rel/dl_table_relation.h.node
	@echo done > muz/rel/dl_finite_product_relation.h.node
muz/rel/dl_finite_product_relation$(OBJ_EXT): ../src/muz/rel/dl_finite_product_relation.cpp muz/base/dl_context.h.node muz/rel/dl_relation_manager.h.node muz/rel/dl_table_relation.h.node muz/rel/dl_finite_product_relation.h.node ast/rewriter/bool_rewriter.h.node
	@echo src/muz/rel/dl_finite_product_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_finite_product_relation$(OBJ_EXT) ../src/muz/rel/dl_finite_product_relation.cpp
muz/rel/dl_instruction$(OBJ_EXT): ../src/muz/rel/dl_instruction.cpp ast/ast_pp.h.node util/stopwatch.h.node muz/base/dl_context.h.node muz/base/dl_util.h.node muz/rel/dl_instruction.h.node muz/rel/rel_context.h.node util/debug.h.node util/warning.h.node
	@echo src/muz/rel/dl_instruction.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_instruction$(OBJ_EXT) ../src/muz/rel/dl_instruction.cpp
muz/rel/dl_interval_relation$(OBJ_EXT): ../src/muz/rel/dl_interval_relation.cpp util/debug.h.node util/optional.h.node ast/ast_pp.h.node muz/rel/dl_interval_relation.h.node muz/rel/dl_relation_manager.h.node ast/rewriter/bool_rewriter.h.node
	@echo src/muz/rel/dl_interval_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_interval_relation$(OBJ_EXT) ../src/muz/rel/dl_interval_relation.cpp
muz/rel/dl_lazy_table.h.node: ../src/muz/rel/dl_lazy_table.h muz/rel/dl_base.h.node util/ref.h.node
	@echo done > muz/rel/dl_lazy_table.h.node
muz/rel/dl_lazy_table$(OBJ_EXT): ../src/muz/rel/dl_lazy_table.cpp muz/rel/dl_lazy_table.h.node muz/rel/dl_relation_manager.h.node
	@echo src/muz/rel/dl_lazy_table.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_lazy_table$(OBJ_EXT) ../src/muz/rel/dl_lazy_table.cpp
muz/rel/dl_product_relation.h.node: ../src/muz/rel/dl_product_relation.h muz/base/dl_context.h.node muz/rel/dl_relation_manager.h.node
	@echo done > muz/rel/dl_product_relation.h.node
muz/rel/dl_sieve_relation.h.node: ../src/muz/rel/dl_sieve_relation.h muz/base/dl_context.h.node muz/rel/dl_relation_manager.h.node
	@echo done > muz/rel/dl_sieve_relation.h.node
muz/rel/dl_mk_explanations.h.node: ../src/muz/rel/dl_mk_explanations.h muz/base/dl_context.h.node muz/base/dl_rule_transformer.h.node
	@echo done > muz/rel/dl_mk_explanations.h.node
muz/rel/dl_mk_explanations$(OBJ_EXT): ../src/muz/rel/dl_mk_explanations.cpp ast/ast_pp.h.node ast/ast_smt_pp.h.node muz/rel/dl_finite_product_relation.h.node muz/rel/dl_product_relation.h.node muz/rel/dl_sieve_relation.h.node muz/rel/dl_mk_explanations.h.node
	@echo src/muz/rel/dl_mk_explanations.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_mk_explanations$(OBJ_EXT) ../src/muz/rel/dl_mk_explanations.cpp
muz/rel/dl_mk_partial_equiv.h.node: ../src/muz/rel/dl_mk_partial_equiv.h muz/base/dl_context.h.node muz/base/dl_rule_transformer.h.node
	@echo done > muz/rel/dl_mk_partial_equiv.h.node
muz/rel/dl_mk_partial_equiv$(OBJ_EXT): ../src/muz/rel/dl_mk_partial_equiv.cpp muz/rel/dl_mk_partial_equiv.h.node muz/rel/dl_relation_manager.h.node ast/ast_pp.h.node
	@echo src/muz/rel/dl_mk_partial_equiv.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_mk_partial_equiv$(OBJ_EXT) ../src/muz/rel/dl_mk_partial_equiv.cpp
muz/rel/dl_mk_similarity_compressor.h.node: ../src/muz/rel/dl_mk_similarity_compressor.h util/map.h.node util/obj_pair_hashtable.h.node muz/base/dl_context.h.node muz/base/dl_rule_set.h.node muz/base/dl_rule_transformer.h.node
	@echo done > muz/rel/dl_mk_similarity_compressor.h.node
muz/rel/dl_mk_similarity_compressor$(OBJ_EXT): ../src/muz/rel/dl_mk_similarity_compressor.cpp muz/rel/dl_mk_similarity_compressor.h.node muz/rel/dl_relation_manager.h.node
	@echo src/muz/rel/dl_mk_similarity_compressor.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_mk_similarity_compressor$(OBJ_EXT) ../src/muz/rel/dl_mk_similarity_compressor.cpp
muz/rel/dl_mk_simple_joins.h.node: ../src/muz/rel/dl_mk_simple_joins.h util/map.h.node util/obj_pair_hashtable.h.node muz/base/dl_context.h.node muz/base/dl_rule_set.h.node muz/base/dl_rule_transformer.h.node
	@echo done > muz/rel/dl_mk_simple_joins.h.node
muz/rel/dl_mk_simple_joins$(OBJ_EXT): ../src/muz/rel/dl_mk_simple_joins.cpp muz/rel/dl_mk_simple_joins.h.node muz/rel/dl_relation_manager.h.node ast/ast_pp.h.node util/trace.h.node
	@echo src/muz/rel/dl_mk_simple_joins.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_mk_simple_joins$(OBJ_EXT) ../src/muz/rel/dl_mk_simple_joins.cpp
muz/rel/dl_product_relation$(OBJ_EXT): ../src/muz/rel/dl_product_relation.cpp muz/rel/dl_sieve_relation.h.node muz/rel/dl_table_relation.h.node muz/rel/dl_product_relation.h.node ast/rewriter/bool_rewriter.h.node ast/ast_pp.h.node
	@echo src/muz/rel/dl_product_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_product_relation$(OBJ_EXT) ../src/muz/rel/dl_product_relation.cpp
muz/rel/dl_relation_manager$(OBJ_EXT): ../src/muz/rel/dl_relation_manager.cpp ast/ast_pp.h.node muz/rel/dl_check_table.h.node muz/base/dl_context.h.node muz/rel/dl_finite_product_relation.h.node muz/rel/dl_product_relation.h.node muz/rel/dl_sieve_relation.h.node muz/rel/dl_table_relation.h.node muz/rel/dl_relation_manager.h.node
	@echo src/muz/rel/dl_relation_manager.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_relation_manager$(OBJ_EXT) ../src/muz/rel/dl_relation_manager.cpp
muz/rel/dl_sieve_relation$(OBJ_EXT): ../src/muz/rel/dl_sieve_relation.cpp ast/ast_pp.h.node muz/rel/dl_sieve_relation.h.node
	@echo src/muz/rel/dl_sieve_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_sieve_relation$(OBJ_EXT) ../src/muz/rel/dl_sieve_relation.cpp
muz/rel/dl_sparse_table.h.node: ../src/muz/rel/dl_sparse_table.h ast/ast.h.node util/bit_vector.h.node util/buffer.h.node util/hashtable.h.node util/map.h.node util/ref_vector.h.node util/vector.h.node muz/rel/dl_base.h.node
	@echo done > muz/rel/dl_sparse_table.h.node
muz/rel/dl_sparse_table$(OBJ_EXT): ../src/muz/rel/dl_sparse_table.cpp muz/base/dl_context.h.node muz/base/dl_util.h.node muz/rel/dl_sparse_table.h.node
	@echo src/muz/rel/dl_sparse_table.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_sparse_table$(OBJ_EXT) ../src/muz/rel/dl_sparse_table.cpp
muz/rel/dl_table$(OBJ_EXT): ../src/muz/rel/dl_table.cpp muz/base/dl_context.h.node muz/base/dl_util.h.node muz/rel/dl_table.h.node muz/rel/dl_relation_manager.h.node
	@echo src/muz/rel/dl_table.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_table$(OBJ_EXT) ../src/muz/rel/dl_table.cpp
muz/rel/dl_table_relation$(OBJ_EXT): ../src/muz/rel/dl_table_relation.cpp muz/base/dl_context.h.node muz/rel/dl_relation_manager.h.node muz/rel/dl_table_relation.h.node
	@echo src/muz/rel/dl_table_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/dl_table_relation$(OBJ_EXT) ../src/muz/rel/dl_table_relation.cpp
muz/rel/karr_relation.h.node: ../src/muz/rel/karr_relation.h muz/transforms/dl_mk_karr_invariants.h.node muz/rel/dl_relation_manager.h.node
	@echo done > muz/rel/karr_relation.h.node
muz/rel/karr_relation$(OBJ_EXT): ../src/muz/rel/karr_relation.cpp muz/rel/karr_relation.h.node ast/rewriter/bool_rewriter.h.node
	@echo src/muz/rel/karr_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/karr_relation$(OBJ_EXT) ../src/muz/rel/karr_relation.cpp
muz/rel/rel_context$(OBJ_EXT): ../src/muz/rel/rel_context.cpp muz/rel/rel_context.h.node muz/base/dl_context.h.node muz/rel/dl_compiler.h.node muz/rel/dl_instruction.h.node muz/rel/dl_mk_explanations.h.node muz/transforms/dl_mk_magic_sets.h.node muz/rel/dl_product_relation.h.node muz/rel/dl_bound_relation.h.node muz/rel/dl_interval_relation.h.node muz/rel/karr_relation.h.node muz/rel/dl_finite_product_relation.h.node muz/rel/dl_lazy_table.h.node muz/rel/dl_sparse_table.h.node muz/rel/dl_table.h.node muz/rel/dl_table_relation.h.node muz/rel/aig_exporter.h.node muz/rel/dl_mk_simple_joins.h.node muz/rel/dl_mk_similarity_compressor.h.node muz/transforms/dl_mk_unbound_compressor.h.node muz/transforms/dl_mk_subsumption_checker.h.node muz/rel/dl_mk_partial_equiv.h.node muz/transforms/dl_mk_coi_filter.h.node muz/transforms/dl_mk_filter_rules.h.node muz/transforms/dl_mk_rule_inliner.h.node muz/transforms/dl_mk_interp_tail_simplifier.h.node muz/transforms/dl_mk_bit_blast.h.node muz/transforms/dl_mk_separate_negated_tails.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/rel/rel_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_47) $(CXX_OUT_FLAG)muz/rel/rel_context$(OBJ_EXT) ../src/muz/rel/rel_context.cpp
muz/rel/rel$(LIB_EXT): muz/rel/aig_exporter$(OBJ_EXT) muz/rel/dl_base$(OBJ_EXT) muz/rel/dl_bound_relation$(OBJ_EXT) muz/rel/dl_check_table$(OBJ_EXT) muz/rel/dl_compiler$(OBJ_EXT) muz/rel/dl_external_relation$(OBJ_EXT) muz/rel/dl_finite_product_relation$(OBJ_EXT) muz/rel/dl_instruction$(OBJ_EXT) muz/rel/dl_interval_relation$(OBJ_EXT) muz/rel/dl_lazy_table$(OBJ_EXT) muz/rel/dl_mk_explanations$(OBJ_EXT) muz/rel/dl_mk_partial_equiv$(OBJ_EXT) muz/rel/dl_mk_similarity_compressor$(OBJ_EXT) muz/rel/dl_mk_simple_joins$(OBJ_EXT) muz/rel/dl_product_relation$(OBJ_EXT) muz/rel/dl_relation_manager$(OBJ_EXT) muz/rel/dl_sieve_relation$(OBJ_EXT) muz/rel/dl_sparse_table$(OBJ_EXT) muz/rel/dl_table$(OBJ_EXT) muz/rel/dl_table_relation$(OBJ_EXT) muz/rel/karr_relation$(OBJ_EXT) muz/rel/rel_context$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)muz/rel/rel$(LIB_EXT) muz/rel/aig_exporter$(OBJ_EXT) muz/rel/dl_base$(OBJ_EXT) muz/rel/dl_bound_relation$(OBJ_EXT) muz/rel/dl_check_table$(OBJ_EXT) muz/rel/dl_compiler$(OBJ_EXT) muz/rel/dl_external_relation$(OBJ_EXT) muz/rel/dl_finite_product_relation$(OBJ_EXT) muz/rel/dl_instruction$(OBJ_EXT) muz/rel/dl_interval_relation$(OBJ_EXT) muz/rel/dl_lazy_table$(OBJ_EXT) muz/rel/dl_mk_explanations$(OBJ_EXT) muz/rel/dl_mk_partial_equiv$(OBJ_EXT) muz/rel/dl_mk_similarity_compressor$(OBJ_EXT) muz/rel/dl_mk_simple_joins$(OBJ_EXT) muz/rel/dl_product_relation$(OBJ_EXT) muz/rel/dl_relation_manager$(OBJ_EXT) muz/rel/dl_sieve_relation$(OBJ_EXT) muz/rel/dl_sparse_table$(OBJ_EXT) muz/rel/dl_table$(OBJ_EXT) muz/rel/dl_table_relation$(OBJ_EXT) muz/rel/karr_relation$(OBJ_EXT) muz/rel/rel_context$(OBJ_EXT)
rel: muz/rel/rel$(LIB_EXT)

includes_48 = -I../src/muz/base -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat -I../src/tactic/aig -I../src/qe -I../src/muz/transforms -I../src/math/hilbert -I../src/tactic/arith -I../src/tactic/core -I../src/smt/tactic
muz/pdr/pdr_closure.h.node: ../src/muz/pdr/pdr_closure.h ast/arith_decl_plugin.h.node
	@echo done > muz/pdr/pdr_closure.h.node
muz/pdr/pdr_util.h.node: ../src/muz/pdr/pdr_util.h ast/ast.h.node ast/ast_pp.h.node util/obj_hashtable.h.node util/ref_vector.h.node ast/simplifier/simplifier.h.node util/trace.h.node util/vector.h.node ast/arith_decl_plugin.h.node ast/array_decl_plugin.h.node ast/bv_decl_plugin.h.node
	@echo done > muz/pdr/pdr_util.h.node
muz/pdr/pdr_sym_mux.h.node: ../src/muz/pdr/pdr_sym_mux.h ast/ast.h.node util/map.h.node util/vector.h.node
	@echo done > muz/pdr/pdr_sym_mux.h.node
muz/pdr/pdr_farkas_learner.h.node: ../src/muz/pdr/pdr_farkas_learner.h ast/arith_decl_plugin.h.node ast/ast_translation.h.node ast/bv_decl_plugin.h.node smt/smt_kernel.h.node ast/rewriter/bool_rewriter.h.node muz/pdr/pdr_util.h.node smt/params/smt_params.h.node tactic/tactic.h.node
	@echo done > muz/pdr/pdr_farkas_learner.h.node
muz/pdr/pdr_smt_context_manager.h.node: ../src/muz/pdr/pdr_smt_context_manager.h smt/smt_kernel.h.node sat/sat_solver.h.node ast/func_decl_dependencies.h.node muz/base/dl_util.h.node
	@echo done > muz/pdr/pdr_smt_context_manager.h.node
muz/pdr/pdr_manager.h.node: ../src/muz/pdr/pdr_manager.h ast/rewriter/bool_rewriter.h.node ast/rewriter/expr_replacer.h.node ast/expr_substitution.h.node util/map.h.node util/ref_vector.h.node smt/smt_kernel.h.node muz/pdr/pdr_util.h.node muz/pdr/pdr_sym_mux.h.node muz/pdr/pdr_farkas_learner.h.node muz/pdr/pdr_smt_context_manager.h.node muz/base/dl_rule.h.node
	@echo done > muz/pdr/pdr_manager.h.node
muz/pdr/pdr_prop_solver.h.node: ../src/muz/pdr/pdr_prop_solver.h ast/ast.h.node util/obj_hashtable.h.node smt/smt_kernel.h.node util/util.h.node util/vector.h.node muz/pdr/pdr_manager.h.node muz/pdr/pdr_smt_context_manager.h.node
	@echo done > muz/pdr/pdr_prop_solver.h.node
muz/pdr/pdr_reachable_cache.h.node: ../src/muz/pdr/pdr_reachable_cache.h ast/ast.h.node util/ref_vector.h.node muz/pdr/pdr_manager.h.node muz/pdr/pdr_smt_context_manager.h.node
	@echo done > muz/pdr/pdr_reachable_cache.h.node
muz/pdr/pdr_context.h.node: ../src/muz/pdr/pdr_context.h muz/pdr/pdr_manager.h.node muz/pdr/pdr_prop_solver.h.node muz/pdr/pdr_reachable_cache.h.node muz/base/fixedpoint_params.hpp.node
	@echo done > muz/pdr/pdr_context.h.node
muz/pdr/pdr_closure$(OBJ_EXT): ../src/muz/pdr/pdr_closure.cpp muz/pdr/pdr_closure.h.node muz/pdr/pdr_context.h.node ast/rewriter/expr_safe_replace.h.node
	@echo src/muz/pdr/pdr_closure.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_closure$(OBJ_EXT) ../src/muz/pdr/pdr_closure.cpp
muz/pdr/pdr_generalizers.h.node: ../src/muz/pdr/pdr_generalizers.h muz/pdr/pdr_context.h.node muz/pdr/pdr_closure.h.node ast/arith_decl_plugin.h.node
	@echo done > muz/pdr/pdr_generalizers.h.node
muz/pdr/pdr_context$(OBJ_EXT): ../src/muz/pdr/pdr_context.cpp muz/base/dl_util.h.node ast/rewriter/rewriter.h.node ast/rewriter/rewriter_def.h.node ast/rewriter/var_subst.h.node util/util.h.node muz/pdr/pdr_prop_solver.h.node muz/pdr/pdr_context.h.node muz/pdr/pdr_generalizers.h.node ast/for_each_expr.h.node muz/base/dl_rule_set.h.node smt/tactic/unit_subsumption_tactic.h.node model/model_smt2_pp.h.node muz/transforms/dl_mk_rule_inliner.h.node ast/ast_smt2_pp.h.node qe/qe_lite.h.node ast/ast_ll_pp.h.node ast/proof_checker/proof_checker.h.node smt/smt_value_sort.h.node muz/base/proof_utils.h.node muz/base/dl_boogie_proof.h.node qe/qe_util.h.node ast/scoped_proof.h.node ast/rewriter/expr_safe_replace.h.node
	@echo src/muz/pdr/pdr_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_context$(OBJ_EXT) ../src/muz/pdr/pdr_context.cpp
muz/pdr/pdr_dl_interface.h.node: ../src/muz/pdr/pdr_dl_interface.h util/lbool.h.node muz/base/dl_rule.h.node muz/base/dl_rule_set.h.node muz/base/dl_util.h.node muz/base/dl_engine_base.h.node util/statistics.h.node
	@echo done > muz/pdr/pdr_dl_interface.h.node
muz/pdr/pdr_dl_interface$(OBJ_EXT): ../src/muz/pdr/pdr_dl_interface.cpp muz/base/dl_context.h.node muz/transforms/dl_mk_coi_filter.h.node muz/transforms/dl_mk_interp_tail_simplifier.h.node muz/transforms/dl_mk_subsumption_checker.h.node muz/transforms/dl_mk_rule_inliner.h.node muz/base/dl_rule.h.node muz/base/dl_rule_transformer.h.node parsers/smt2/smt2parser.h.node muz/pdr/pdr_context.h.node muz/pdr/pdr_dl_interface.h.node muz/base/dl_rule_set.h.node muz/transforms/dl_mk_slice.h.node muz/transforms/dl_mk_unfold.h.node muz/transforms/dl_mk_coalesce.h.node muz/transforms/dl_transforms.h.node ast/scoped_proof.h.node model/model_smt2_pp.h.node
	@echo src/muz/pdr/pdr_dl_interface.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_dl_interface$(OBJ_EXT) ../src/muz/pdr/pdr_dl_interface.cpp
muz/pdr/pdr_farkas_learner$(OBJ_EXT): ../src/muz/pdr/pdr_farkas_learner.cpp ast/ast_smt2_pp.h.node ast/array_decl_plugin.h.node ast/rewriter/bool_rewriter.h.node ast/dl_decl_plugin.h.node ast/for_each_expr.h.node muz/base/dl_util.h.node ast/rewriter/rewriter.h.node ast/rewriter/rewriter_def.h.node muz/pdr/pdr_util.h.node muz/pdr/pdr_farkas_learner.h.node ast/rewriter/th_rewriter.h.node ast/ast_ll_pp.h.node tactic/arith/arith_bounds_tactic.h.node muz/base/proof_utils.h.node ast/reg_decl_plugins.h.node
	@echo src/muz/pdr/pdr_farkas_learner.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_farkas_learner$(OBJ_EXT) ../src/muz/pdr/pdr_farkas_learner.cpp
muz/pdr/pdr_generalizers$(OBJ_EXT): ../src/muz/pdr/pdr_generalizers.cpp muz/pdr/pdr_context.h.node muz/pdr/pdr_farkas_learner.h.node muz/pdr/pdr_generalizers.h.node ast/expr_abstract.h.node ast/rewriter/var_subst.h.node ast/rewriter/expr_safe_replace.h.node model/model_smt2_pp.h.node
	@echo src/muz/pdr/pdr_generalizers.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_generalizers$(OBJ_EXT) ../src/muz/pdr/pdr_generalizers.cpp
muz/pdr/pdr_manager$(OBJ_EXT): ../src/muz/pdr/pdr_manager.cpp muz/pdr/pdr_manager.h.node ast/ast_smt2_pp.h.node ast/for_each_expr.h.node ast/has_free_vars.h.node ast/rewriter/expr_replacer.h.node ast/expr_abstract.h.node model/model2expr.h.node model/model_smt2_pp.h.node tactic/model_converter.h.node
	@echo src/muz/pdr/pdr_manager.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_manager$(OBJ_EXT) ../src/muz/pdr/pdr_manager.cpp
muz/pdr/pdr_prop_solver$(OBJ_EXT): ../src/muz/pdr/pdr_prop_solver.cpp model/model.h.node muz/pdr/pdr_util.h.node muz/pdr/pdr_prop_solver.h.node ast/ast_smt2_pp.h.node muz/base/dl_util.h.node model/model_pp.h.node smt/params/smt_params.h.node ast/datatype_decl_plugin.h.node ast/bv_decl_plugin.h.node muz/pdr/pdr_farkas_learner.h.node ast/ast_smt2_pp.h.node ast/rewriter/expr_replacer.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/pdr/pdr_prop_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_prop_solver$(OBJ_EXT) ../src/muz/pdr/pdr_prop_solver.cpp
muz/pdr/pdr_reachable_cache$(OBJ_EXT): ../src/muz/pdr/pdr_reachable_cache.cpp muz/pdr/pdr_reachable_cache.h.node
	@echo src/muz/pdr/pdr_reachable_cache.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_reachable_cache$(OBJ_EXT) ../src/muz/pdr/pdr_reachable_cache.cpp
muz/pdr/pdr_smt_context_manager$(OBJ_EXT): ../src/muz/pdr/pdr_smt_context_manager.cpp muz/pdr/pdr_smt_context_manager.h.node ast/has_free_vars.h.node ast/ast_pp.h.node ast/ast_smt_pp.h.node smt/params/smt_params.h.node
	@echo src/muz/pdr/pdr_smt_context_manager.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_smt_context_manager$(OBJ_EXT) ../src/muz/pdr/pdr_smt_context_manager.cpp
muz/pdr/pdr_sym_mux$(OBJ_EXT): ../src/muz/pdr/pdr_sym_mux.cpp ast/ast_pp.h.node ast/for_each_expr.h.node model/model.h.node ast/rewriter/rewriter.h.node ast/rewriter/rewriter_def.h.node muz/pdr/pdr_util.h.node muz/pdr/pdr_sym_mux.h.node
	@echo src/muz/pdr/pdr_sym_mux.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_sym_mux$(OBJ_EXT) ../src/muz/pdr/pdr_sym_mux.cpp
muz/pdr/pdr_util$(OBJ_EXT): ../src/muz/pdr/pdr_util.cpp ast/simplifier/arith_simplifier_plugin.h.node ast/array_decl_plugin.h.node ast/ast_pp.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/bv_simplifier_plugin.h.node ast/rewriter/bool_rewriter.h.node muz/base/dl_util.h.node ast/for_each_expr.h.node smt/params/smt_params.h.node model/model.h.node util/ref_vector.h.node ast/rewriter/rewriter.h.node ast/rewriter/rewriter_def.h.node util/util.h.node muz/pdr/pdr_manager.h.node muz/pdr/pdr_util.h.node ast/arith_decl_plugin.h.node ast/rewriter/expr_replacer.h.node model/model_smt2_pp.h.node ast/rewriter/poly_rewriter.h.node ast/rewriter/poly_rewriter_def.h.node ast/rewriter/arith_rewriter.h.node ast/scoped_proof.h.node
	@echo src/muz/pdr/pdr_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_48) $(CXX_OUT_FLAG)muz/pdr/pdr_util$(OBJ_EXT) ../src/muz/pdr/pdr_util.cpp
muz/pdr/pdr$(LIB_EXT): muz/pdr/pdr_closure$(OBJ_EXT) muz/pdr/pdr_context$(OBJ_EXT) muz/pdr/pdr_dl_interface$(OBJ_EXT) muz/pdr/pdr_farkas_learner$(OBJ_EXT) muz/pdr/pdr_generalizers$(OBJ_EXT) muz/pdr/pdr_manager$(OBJ_EXT) muz/pdr/pdr_prop_solver$(OBJ_EXT) muz/pdr/pdr_reachable_cache$(OBJ_EXT) muz/pdr/pdr_smt_context_manager$(OBJ_EXT) muz/pdr/pdr_sym_mux$(OBJ_EXT) muz/pdr/pdr_util$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)muz/pdr/pdr$(LIB_EXT) muz/pdr/pdr_closure$(OBJ_EXT) muz/pdr/pdr_context$(OBJ_EXT) muz/pdr/pdr_dl_interface$(OBJ_EXT) muz/pdr/pdr_farkas_learner$(OBJ_EXT) muz/pdr/pdr_generalizers$(OBJ_EXT) muz/pdr/pdr_manager$(OBJ_EXT) muz/pdr/pdr_prop_solver$(OBJ_EXT) muz/pdr/pdr_reachable_cache$(OBJ_EXT) muz/pdr/pdr_smt_context_manager$(OBJ_EXT) muz/pdr/pdr_sym_mux$(OBJ_EXT) muz/pdr/pdr_util$(OBJ_EXT)
pdr: muz/pdr/pdr$(LIB_EXT)

includes_49 = -I../src/muz/base -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat -I../src/tactic/aig -I../src/qe -I../src/muz/transforms -I../src/math/hilbert
muz/clp/clp_context.h.node: ../src/muz/clp/clp_context.h ast/ast.h.node util/lbool.h.node util/statistics.h.node muz/base/dl_engine_base.h.node
	@echo done > muz/clp/clp_context.h.node
muz/clp/clp_context$(OBJ_EXT): ../src/muz/clp/clp_context.cpp muz/clp/clp_context.h.node muz/base/dl_context.h.node ast/substitution/unifier.h.node ast/rewriter/var_subst.h.node ast/substitution/substitution.h.node smt/smt_kernel.h.node muz/transforms/dl_transforms.h.node
	@echo src/muz/clp/clp_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_49) $(CXX_OUT_FLAG)muz/clp/clp_context$(OBJ_EXT) ../src/muz/clp/clp_context.cpp
muz/clp/clp$(LIB_EXT): muz/clp/clp_context$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)muz/clp/clp$(LIB_EXT) muz/clp/clp_context$(OBJ_EXT)
clp: muz/clp/clp$(LIB_EXT)

includes_50 = -I../src/muz/base -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat -I../src/tactic/aig -I../src/qe -I../src/muz/transforms -I../src/math/hilbert
muz/tab/tab_context.h.node: ../src/muz/tab/tab_context.h ast/ast.h.node util/lbool.h.node util/statistics.h.node muz/base/dl_engine_base.h.node
	@echo done > muz/tab/tab_context.h.node
muz/tab/tab_context$(OBJ_EXT): ../src/muz/tab/tab_context.cpp muz/tab/tab_context.h.node ast/trail.h.node muz/base/dl_rule_set.h.node muz/base/dl_context.h.node muz/transforms/dl_mk_rule_inliner.h.node smt/smt_kernel.h.node qe/qe_lite.h.node ast/rewriter/bool_rewriter.h.node ast/rewriter/th_rewriter.h.node ast/datatype_decl_plugin.h.node ast/for_each_expr.h.node ast/substitution/matcher.h.node ast/scoped_proof.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/tab/tab_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_50) $(CXX_OUT_FLAG)muz/tab/tab_context$(OBJ_EXT) ../src/muz/tab/tab_context.cpp
muz/tab/tab$(LIB_EXT): muz/tab/tab_context$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)muz/tab/tab$(LIB_EXT) muz/tab/tab_context$(OBJ_EXT)
tab: muz/tab/tab$(LIB_EXT)

includes_51 = -I../src/muz/base -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat -I../src/tactic/aig -I../src/qe -I../src/muz/transforms -I../src/math/hilbert
muz/bmc/dl_bmc_engine.h.node: ../src/muz/bmc/dl_bmc_engine.h util/params.h.node util/statistics.h.node smt/smt_kernel.h.node ast/bv_decl_plugin.h.node smt/params/smt_params.h.node
	@echo done > muz/bmc/dl_bmc_engine.h.node
muz/bmc/dl_bmc_engine$(OBJ_EXT): ../src/muz/bmc/dl_bmc_engine.cpp muz/base/dl_context.h.node muz/base/dl_rule_transformer.h.node muz/bmc/dl_bmc_engine.h.node muz/transforms/dl_mk_slice.h.node smt/smt_kernel.h.node ast/datatype_decl_plugin.h.node ast/dl_decl_plugin.h.node ast/rewriter/bool_rewriter.h.node model/model_smt2_pp.h.node ast/ast_smt_pp.h.node ast/well_sorted.h.node ast/rewriter/rewriter_def.h.node muz/transforms/dl_transforms.h.node muz/transforms/dl_mk_rule_inliner.h.node ast/scoped_proof.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/bmc/dl_bmc_engine.cpp
	@$(CXX) $(CXXFLAGS) $(includes_51) $(CXX_OUT_FLAG)muz/bmc/dl_bmc_engine$(OBJ_EXT) ../src/muz/bmc/dl_bmc_engine.cpp
muz/bmc/bmc$(LIB_EXT): muz/bmc/dl_bmc_engine$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)muz/bmc/bmc$(LIB_EXT) muz/bmc/dl_bmc_engine$(OBJ_EXT)
bmc: muz/bmc/bmc$(LIB_EXT)

includes_52 = -I../src/muz/base -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat -I../src/tactic/aig -I../src/qe -I../src/muz/transforms -I../src/math/hilbert -I../src/duality
muz/duality/duality_dl_interface.h.node: ../src/muz/duality/duality_dl_interface.h util/lbool.h.node muz/base/dl_rule.h.node muz/base/dl_rule_set.h.node muz/base/dl_engine_base.h.node util/statistics.h.node
	@echo done > muz/duality/duality_dl_interface.h.node
muz/duality/duality_dl_interface$(OBJ_EXT): ../src/muz/duality/duality_dl_interface.cpp muz/base/dl_context.h.node muz/transforms/dl_mk_coi_filter.h.node muz/transforms/dl_mk_interp_tail_simplifier.h.node muz/transforms/dl_mk_subsumption_checker.h.node muz/transforms/dl_mk_rule_inliner.h.node muz/base/dl_rule.h.node muz/base/dl_rule_transformer.h.node parsers/smt2/smt2parser.h.node muz/duality/duality_dl_interface.h.node muz/base/dl_rule_set.h.node muz/transforms/dl_mk_slice.h.node muz/transforms/dl_mk_unfold.h.node muz/transforms/dl_mk_coalesce.h.node ast/expr_abstract.h.node model/model_smt2_pp.h.node model/model_v2_pp.h.node muz/base/fixedpoint_params.hpp.node ast/used_vars.h.node ast/func_decl_dependencies.h.node muz/transforms/dl_transforms.h.node duality/duality.h.node duality/duality_profiling.h.node
	@echo src/muz/duality/duality_dl_interface.cpp
	@$(CXX) $(CXXFLAGS) $(includes_52) $(CXX_OUT_FLAG)muz/duality/duality_dl_interface$(OBJ_EXT) ../src/muz/duality/duality_dl_interface.cpp
muz/duality/duality_intf$(LIB_EXT): muz/duality/duality_dl_interface$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)muz/duality/duality_intf$(LIB_EXT) muz/duality/duality_dl_interface$(OBJ_EXT)
duality_intf: muz/duality/duality_intf$(LIB_EXT)

includes_53 = -I../src/muz/base -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/ast/simplifier -I../src/ast/macros -I../src/ast/normal_forms -I../src/cmd_context -I../src/solver -I../src/model -I../src/tactic -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/sat -I../src/tactic/aig -I../src/qe -I../src/muz/pdr -I../src/muz/transforms -I../src/math/hilbert -I../src/tactic/arith -I../src/tactic/core -I../src/smt/tactic -I../src/muz/clp -I../src/muz/tab -I../src/muz/rel -I../src/muz/bmc -I../src/muz/duality -I../src/duality
muz/fp/datalog_parser.h.node: ../src/muz/fp/datalog_parser.h ast/ast.h.node muz/base/dl_context.h.node
	@echo done > muz/fp/datalog_parser.h.node
muz/fp/datalog_parser$(OBJ_EXT): ../src/muz/fp/datalog_parser.cpp muz/fp/datalog_parser.h.node util/string_buffer.h.node util/str_hashtable.h.node ast/ast_pp.h.node ast/arith_decl_plugin.h.node util/region.h.node util/warning.h.node
	@echo src/muz/fp/datalog_parser.cpp
	@$(CXX) $(CXXFLAGS) $(includes_53) $(CXX_OUT_FLAG)muz/fp/datalog_parser$(OBJ_EXT) ../src/muz/fp/datalog_parser.cpp
muz/fp/dl_cmds.h.node: ../src/muz/fp/dl_cmds.h ast/ast.h.node
	@echo done > muz/fp/dl_cmds.h.node
muz/fp/dl_register_engine.h.node: ../src/muz/fp/dl_register_engine.h muz/base/dl_context.h.node
	@echo done > muz/fp/dl_register_engine.h.node
muz/fp/dl_cmds$(OBJ_EXT): ../src/muz/fp/dl_cmds.cpp cmd_context/cmd_context.h.node muz/fp/dl_cmds.h.node muz/rel/dl_external_relation.h.node muz/base/dl_context.h.node muz/fp/dl_register_engine.h.node ast/dl_decl_plugin.h.node muz/rel/dl_instruction.h.node muz/rel/dl_compiler.h.node muz/base/dl_rule.h.node ast/ast_pp.h.node cmd_context/parametric_cmd.h.node util/cancel_eh.h.node util/scoped_ctrl_c.h.node util/scoped_timer.h.node ast/trail.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/fp/dl_cmds.cpp
	@$(CXX) $(CXXFLAGS) $(includes_53) $(CXX_OUT_FLAG)muz/fp/dl_cmds$(OBJ_EXT) ../src/muz/fp/dl_cmds.cpp
muz/fp/dl_register_engine$(OBJ_EXT): ../src/muz/fp/dl_register_engine.cpp muz/fp/dl_register_engine.h.node muz/bmc/dl_bmc_engine.h.node muz/clp/clp_context.h.node muz/tab/tab_context.h.node muz/rel/rel_context.h.node muz/pdr/pdr_dl_interface.h.node muz/duality/duality_dl_interface.h.node
	@echo src/muz/fp/dl_register_engine.cpp
	@$(CXX) $(CXXFLAGS) $(includes_53) $(CXX_OUT_FLAG)muz/fp/dl_register_engine$(OBJ_EXT) ../src/muz/fp/dl_register_engine.cpp
muz/fp/horn_tactic.h.node: ../src/muz/fp/horn_tactic.h util/params.h.node
	@echo done > muz/fp/horn_tactic.h.node
muz/fp/horn_tactic$(OBJ_EXT): ../src/muz/fp/horn_tactic.cpp tactic/tactical.h.node tactic/model_converter.h.node tactic/proof_converter.h.node muz/fp/horn_tactic.h.node muz/base/dl_context.h.node muz/fp/dl_register_engine.h.node ast/rewriter/expr_replacer.h.node muz/base/dl_rule_transformer.h.node muz/transforms/dl_mk_slice.h.node tactic/filter_model_converter.h.node muz/transforms/dl_transforms.h.node muz/base/fixedpoint_params.hpp.node
	@echo src/muz/fp/horn_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_53) $(CXX_OUT_FLAG)muz/fp/horn_tactic$(OBJ_EXT) ../src/muz/fp/horn_tactic.cpp
muz/fp/fp$(LIB_EXT): muz/fp/datalog_parser$(OBJ_EXT) muz/fp/dl_cmds$(OBJ_EXT) muz/fp/dl_register_engine$(OBJ_EXT) muz/fp/horn_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)muz/fp/fp$(LIB_EXT) muz/fp/datalog_parser$(OBJ_EXT) muz/fp/dl_cmds$(OBJ_EXT) muz/fp/dl_register_engine$(OBJ_EXT) muz/fp/horn_tactic$(OBJ_EXT)
fp: muz/fp/fp$(LIB_EXT)

includes_54 = -I../src/tactic/arith -I../src/tactic/core -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/sat -I../src/tactic/bv -I../src/ast/rewriter/bit_blaster -I../src/ast/simplifier -I../src/nlsat/tactic -I../src/nlsat -I../src/sat/tactic -I../src/smt/tactic -I../src/smt -I../src/ast/macros -I../src/cmd_context -I../src/solver -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/tactic/aig -I../src/muz/fp -I../src/muz/base -I../src/qe -I../src/muz/pdr -I../src/muz/transforms -I../src/math/hilbert -I../src/muz/clp -I../src/muz/tab -I../src/muz/rel -I../src/muz/bmc -I../src/muz/duality -I../src/duality
smt/tactic/smt_tactic.h.node: ../src/smt/tactic/smt_tactic.h util/params.h.node
	@echo done > smt/tactic/smt_tactic.h.node
qe/qe_tactic.h.node: ../src/qe/qe_tactic.h util/params.h.node
	@echo done > qe/qe_tactic.h.node
nlsat/tactic/qfnra_nlsat_tactic.h.node: ../src/nlsat/tactic/qfnra_nlsat_tactic.h util/params.h.node
	@echo done > nlsat/tactic/qfnra_nlsat_tactic.h.node
tactic/arith/probe_arith.h.node: ../src/tactic/arith/probe_arith.h
	@echo done > tactic/arith/probe_arith.h.node
tactic/smtlogics/nra_tactic$(OBJ_EXT): ../src/tactic/smtlogics/nra_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node smt/tactic/smt_tactic.h.node tactic/core/nnf_tactic.h.node qe/qe_tactic.h.node nlsat/tactic/qfnra_nlsat_tactic.h.node tactic/arith/probe_arith.h.node
	@echo src/tactic/smtlogics/nra_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/nra_tactic$(OBJ_EXT) ../src/tactic/smtlogics/nra_tactic.cpp
tactic/smtlogics/qfaufbv_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qfaufbv_tactic.cpp tactic/core/solve_eqs_tactic.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/bv/bit_blaster_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node tactic/bv/bv_size_reduction_tactic.h.node tactic/core/ctx_simplify_tactic.h.node sat/tactic/sat_tactic.h.node smt/tactic/smt_tactic.h.node
	@echo src/tactic/smtlogics/qfaufbv_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qfaufbv_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qfaufbv_tactic.cpp
tactic/arith/propagate_ineqs_tactic.h.node: ../src/tactic/arith/propagate_ineqs_tactic.h util/params.h.node
	@echo done > tactic/arith/propagate_ineqs_tactic.h.node
tactic/smtlogics/qfauflia_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qfauflia_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/arith/propagate_ineqs_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node smt/tactic/smt_tactic.h.node
	@echo src/tactic/smtlogics/qfauflia_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qfauflia_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qfauflia_tactic.cpp
tactic/bv/bv1_blaster_tactic.h.node: ../src/tactic/bv/bv1_blaster_tactic.h util/params.h.node
	@echo done > tactic/bv/bv1_blaster_tactic.h.node
tactic/aig/aig_tactic.h.node: ../src/tactic/aig/aig_tactic.h util/params.h.node
	@echo done > tactic/aig/aig_tactic.h.node
tactic/smtlogics/qfbv_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qfbv_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node smt/tactic/smt_tactic.h.node tactic/bv/bit_blaster_tactic.h.node tactic/bv/bv1_blaster_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node tactic/bv/bv_size_reduction_tactic.h.node tactic/aig/aig_tactic.h.node sat/tactic/sat_tactic.h.node
	@echo src/tactic/smtlogics/qfbv_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qfbv_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qfbv_tactic.cpp
tactic/arith/normalize_bounds_tactic.h.node: ../src/tactic/arith/normalize_bounds_tactic.h util/params.h.node
	@echo done > tactic/arith/normalize_bounds_tactic.h.node
tactic/arith/fix_dl_var_tactic.h.node: ../src/tactic/arith/fix_dl_var_tactic.h util/params.h.node
	@echo done > tactic/arith/fix_dl_var_tactic.h.node
tactic/arith/lia2pb_tactic.h.node: ../src/tactic/arith/lia2pb_tactic.h util/params.h.node
	@echo done > tactic/arith/lia2pb_tactic.h.node
tactic/arith/diff_neq_tactic.h.node: ../src/tactic/arith/diff_neq_tactic.h util/params.h.node
	@echo done > tactic/arith/diff_neq_tactic.h.node
tactic/smtlogics/qfidl_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qfidl_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/arith/propagate_ineqs_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node tactic/arith/normalize_bounds_tactic.h.node tactic/arith/fix_dl_var_tactic.h.node smt/tactic/smt_tactic.h.node tactic/arith/lia2pb_tactic.h.node tactic/arith/pb2bv_tactic.h.node tactic/arith/diff_neq_tactic.h.node tactic/bv/bit_blaster_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node tactic/aig/aig_tactic.h.node sat/tactic/sat_tactic.h.node
	@echo src/tactic/smtlogics/qfidl_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qfidl_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qfidl_tactic.cpp
tactic/arith/add_bounds_tactic.h.node: ../src/tactic/arith/add_bounds_tactic.h util/params.h.node
	@echo done > tactic/arith/add_bounds_tactic.h.node
tactic/smtlogics/qflia_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qflia_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/arith/propagate_ineqs_tactic.h.node tactic/arith/normalize_bounds_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node smt/tactic/smt_tactic.h.node tactic/arith/add_bounds_tactic.h.node tactic/arith/pb2bv_tactic.h.node tactic/arith/lia2pb_tactic.h.node tactic/core/ctx_simplify_tactic.h.node tactic/bv/bit_blaster_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node tactic/aig/aig_tactic.h.node sat/tactic/sat_tactic.h.node tactic/arith/bound_manager.h.node tactic/arith/probe_arith.h.node
	@echo src/tactic/smtlogics/qflia_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qflia_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qflia_tactic.cpp
tactic/arith/recover_01_tactic.h.node: ../src/tactic/arith/recover_01_tactic.h util/params.h.node
	@echo done > tactic/arith/recover_01_tactic.h.node
tactic/smtlogics/qflra_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qflra_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node smt/tactic/smt_tactic.h.node tactic/arith/recover_01_tactic.h.node tactic/core/ctx_simplify_tactic.h.node tactic/arith/probe_arith.h.node
	@echo src/tactic/smtlogics/qflra_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qflra_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qflra_tactic.cpp
tactic/arith/nla2bv_tactic.h.node: ../src/tactic/arith/nla2bv_tactic.h util/params.h.node
	@echo done > tactic/arith/nla2bv_tactic.h.node
tactic/core/cofactor_term_ite_tactic.h.node: ../src/tactic/core/cofactor_term_ite_tactic.h util/params.h.node
	@echo done > tactic/core/cofactor_term_ite_tactic.h.node
tactic/smtlogics/qfnia_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qfnia_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node smt/tactic/smt_tactic.h.node tactic/bv/bit_blaster_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node sat/tactic/sat_tactic.h.node tactic/arith/nla2bv_tactic.h.node tactic/core/ctx_simplify_tactic.h.node tactic/core/cofactor_term_ite_tactic.h.node
	@echo src/tactic/smtlogics/qfnia_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qfnia_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qfnia_tactic.cpp
tactic/smtlogics/qfnra_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qfnra_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/arith/nla2bv_tactic.h.node smt/tactic/smt_tactic.h.node nlsat/tactic/qfnra_nlsat_tactic.h.node
	@echo src/tactic/smtlogics/qfnra_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qfnra_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qfnra_tactic.cpp
tactic/core/symmetry_reduce_tactic.h.node: ../src/tactic/core/symmetry_reduce_tactic.h util/params.h.node
	@echo done > tactic/core/symmetry_reduce_tactic.h.node
tactic/smtlogics/qfuf_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qfuf_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/symmetry_reduce_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/propagate_values_tactic.h.node smt/tactic/smt_tactic.h.node
	@echo src/tactic/smtlogics/qfuf_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qfuf_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qfuf_tactic.cpp
tactic/core/reduce_args_tactic.h.node: ../src/tactic/core/reduce_args_tactic.h util/params.h.node
	@echo done > tactic/core/reduce_args_tactic.h.node
tactic/smtlogics/qfufbv_tactic$(OBJ_EXT): ../src/tactic/smtlogics/qfufbv_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node smt/tactic/smt_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node tactic/bv/bv_size_reduction_tactic.h.node tactic/core/reduce_args_tactic.h.node
	@echo src/tactic/smtlogics/qfufbv_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/qfufbv_tactic$(OBJ_EXT) ../src/tactic/smtlogics/qfufbv_tactic.cpp
tactic/smtlogics/quant_tactics$(OBJ_EXT): ../src/tactic/smtlogics/quant_tactics.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node qe/qe_tactic.h.node qe/qe_sat_tactic.h.node tactic/core/ctx_simplify_tactic.h.node smt/tactic/smt_tactic.h.node
	@echo src/tactic/smtlogics/quant_tactics.cpp
	@$(CXX) $(CXXFLAGS) $(includes_54) $(CXX_OUT_FLAG)tactic/smtlogics/quant_tactics$(OBJ_EXT) ../src/tactic/smtlogics/quant_tactics.cpp
tactic/smtlogics/smtlogic_tactics$(LIB_EXT): tactic/smtlogics/nra_tactic$(OBJ_EXT) tactic/smtlogics/qfaufbv_tactic$(OBJ_EXT) tactic/smtlogics/qfauflia_tactic$(OBJ_EXT) tactic/smtlogics/qfbv_tactic$(OBJ_EXT) tactic/smtlogics/qfidl_tactic$(OBJ_EXT) tactic/smtlogics/qflia_tactic$(OBJ_EXT) tactic/smtlogics/qflra_tactic$(OBJ_EXT) tactic/smtlogics/qfnia_tactic$(OBJ_EXT) tactic/smtlogics/qfnra_tactic$(OBJ_EXT) tactic/smtlogics/qfuf_tactic$(OBJ_EXT) tactic/smtlogics/qfufbv_tactic$(OBJ_EXT) tactic/smtlogics/quant_tactics$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/smtlogics/smtlogic_tactics$(LIB_EXT) tactic/smtlogics/nra_tactic$(OBJ_EXT) tactic/smtlogics/qfaufbv_tactic$(OBJ_EXT) tactic/smtlogics/qfauflia_tactic$(OBJ_EXT) tactic/smtlogics/qfbv_tactic$(OBJ_EXT) tactic/smtlogics/qfidl_tactic$(OBJ_EXT) tactic/smtlogics/qflia_tactic$(OBJ_EXT) tactic/smtlogics/qflra_tactic$(OBJ_EXT) tactic/smtlogics/qfnia_tactic$(OBJ_EXT) tactic/smtlogics/qfnra_tactic$(OBJ_EXT) tactic/smtlogics/qfuf_tactic$(OBJ_EXT) tactic/smtlogics/qfufbv_tactic$(OBJ_EXT) tactic/smtlogics/quant_tactics$(OBJ_EXT)
smtlogic_tactics: tactic/smtlogics/smtlogic_tactics$(LIB_EXT)

includes_55 = -I../src/ast/normal_forms -I../src/ast/rewriter -I../src/ast -I../src/util -I../src/math/polynomial -I../src/tactic/core -I../src/tactic -I../src/model -I../src/ast/macros -I../src/ast/simplifier -I../src/smt/tactic -I../src/smt -I../src/ast/rewriter/bit_blaster -I../src/cmd_context -I../src/solver -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa
tactic/ufbv/macro_finder_tactic.h.node: ../src/tactic/ufbv/macro_finder_tactic.h util/params.h.node
	@echo done > tactic/ufbv/macro_finder_tactic.h.node
tactic/ufbv/macro_finder_tactic$(OBJ_EXT): ../src/tactic/ufbv/macro_finder_tactic.cpp tactic/tactical.h.node ast/simplifier/simplifier.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/arith_simplifier_plugin.h.node ast/simplifier/bv_simplifier_plugin.h.node ast/macros/macro_manager.h.node ast/macros/macro_finder.h.node tactic/extension_model_converter.h.node tactic/ufbv/macro_finder_tactic.h.node
	@echo src/tactic/ufbv/macro_finder_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_55) $(CXX_OUT_FLAG)tactic/ufbv/macro_finder_tactic$(OBJ_EXT) ../src/tactic/ufbv/macro_finder_tactic.cpp
tactic/ufbv/quasi_macros_tactic.h.node: ../src/tactic/ufbv/quasi_macros_tactic.h util/params.h.node
	@echo done > tactic/ufbv/quasi_macros_tactic.h.node
tactic/ufbv/quasi_macros_tactic$(OBJ_EXT): ../src/tactic/ufbv/quasi_macros_tactic.cpp tactic/tactical.h.node ast/simplifier/simplifier.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/arith_simplifier_plugin.h.node ast/simplifier/bv_simplifier_plugin.h.node ast/macros/macro_manager.h.node ast/macros/macro_finder.h.node tactic/extension_model_converter.h.node ast/macros/quasi_macros.h.node tactic/ufbv/quasi_macros_tactic.h.node
	@echo src/tactic/ufbv/quasi_macros_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_55) $(CXX_OUT_FLAG)tactic/ufbv/quasi_macros_tactic$(OBJ_EXT) ../src/tactic/ufbv/quasi_macros_tactic.cpp
util/array_map.h.node: ../src/util/array_map.h util/vector.h.node util/optional.h.node
	@echo done > util/array_map.h.node
tactic/ufbv/ufbv_rewriter.h.node: ../src/tactic/ufbv/ufbv_rewriter.h ast/ast.h.node ast/substitution/substitution.h.node util/obj_hashtable.h.node util/obj_pair_hashtable.h.node util/array_map.h.node ast/simplifier/basic_simplifier_plugin.h.node
	@echo done > tactic/ufbv/ufbv_rewriter.h.node
tactic/ufbv/ufbv_rewriter$(OBJ_EXT): ../src/tactic/ufbv/ufbv_rewriter.cpp ast/ast_pp.h.node tactic/ufbv/ufbv_rewriter.h.node ast/for_each_expr.h.node ast/rewriter/var_subst.h.node util/uint_set.h.node
	@echo src/tactic/ufbv/ufbv_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_55) $(CXX_OUT_FLAG)tactic/ufbv/ufbv_rewriter$(OBJ_EXT) ../src/tactic/ufbv/ufbv_rewriter.cpp
tactic/ufbv/ufbv_rewriter_tactic.h.node: ../src/tactic/ufbv/ufbv_rewriter_tactic.h util/params.h.node
	@echo done > tactic/ufbv/ufbv_rewriter_tactic.h.node
tactic/ufbv/ufbv_rewriter_tactic$(OBJ_EXT): ../src/tactic/ufbv/ufbv_rewriter_tactic.cpp tactic/tactical.h.node ast/simplifier/simplifier.h.node ast/simplifier/basic_simplifier_plugin.h.node tactic/ufbv/ufbv_rewriter.h.node tactic/ufbv/ufbv_rewriter_tactic.h.node
	@echo src/tactic/ufbv/ufbv_rewriter_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_55) $(CXX_OUT_FLAG)tactic/ufbv/ufbv_rewriter_tactic$(OBJ_EXT) ../src/tactic/ufbv/ufbv_rewriter_tactic.cpp
tactic/core/distribute_forall_tactic.h.node: ../src/tactic/core/distribute_forall_tactic.h util/params.h.node
	@echo done > tactic/core/distribute_forall_tactic.h.node
tactic/core/der_tactic.h.node: ../src/tactic/core/der_tactic.h
	@echo done > tactic/core/der_tactic.h.node
tactic/ufbv/ufbv_tactic.h.node: ../src/tactic/ufbv/ufbv_tactic.h util/params.h.node
	@echo done > tactic/ufbv/ufbv_tactic.h.node
tactic/ufbv/ufbv_tactic$(OBJ_EXT): ../src/tactic/ufbv/ufbv_tactic.cpp tactic/tactical.h.node tactic/core/simplify_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/distribute_forall_tactic.h.node tactic/core/der_tactic.h.node tactic/core/reduce_args_tactic.h.node smt/tactic/smt_tactic.h.node tactic/core/nnf_tactic.h.node tactic/ufbv/macro_finder_tactic.h.node tactic/ufbv/ufbv_rewriter_tactic.h.node tactic/ufbv/quasi_macros_tactic.h.node tactic/ufbv/ufbv_tactic.h.node
	@echo src/tactic/ufbv/ufbv_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_55) $(CXX_OUT_FLAG)tactic/ufbv/ufbv_tactic$(OBJ_EXT) ../src/tactic/ufbv/ufbv_tactic.cpp
tactic/ufbv/ufbv_tactic$(LIB_EXT): tactic/ufbv/macro_finder_tactic$(OBJ_EXT) tactic/ufbv/quasi_macros_tactic$(OBJ_EXT) tactic/ufbv/ufbv_rewriter$(OBJ_EXT) tactic/ufbv/ufbv_rewriter_tactic$(OBJ_EXT) tactic/ufbv/ufbv_tactic$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/ufbv/ufbv_tactic$(LIB_EXT) tactic/ufbv/macro_finder_tactic$(OBJ_EXT) tactic/ufbv/quasi_macros_tactic$(OBJ_EXT) tactic/ufbv/ufbv_rewriter$(OBJ_EXT) tactic/ufbv/ufbv_rewriter_tactic$(OBJ_EXT) tactic/ufbv/ufbv_tactic$(OBJ_EXT)
ufbv_tactic: tactic/ufbv/ufbv_tactic$(LIB_EXT)

includes_56 = -I../src/tactic/smtlogics -I../src/tactic/arith -I../src/tactic/core -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/sat -I../src/tactic/bv -I../src/ast/rewriter/bit_blaster -I../src/ast/simplifier -I../src/nlsat/tactic -I../src/nlsat -I../src/sat/tactic -I../src/smt/tactic -I../src/smt -I../src/ast/macros -I../src/cmd_context -I../src/solver -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/tactic/aig -I../src/muz/fp -I../src/muz/base -I../src/qe -I../src/muz/pdr -I../src/muz/transforms -I../src/math/hilbert -I../src/muz/clp -I../src/muz/tab -I../src/muz/rel -I../src/muz/bmc -I../src/muz/duality -I../src/duality -I../src/tactic/ufbv -I../src/tactic/fpa -I../src/tactic/sls -I../src/math/subpaving/tactic -I../src/math/subpaving -I../src/math/interval
tactic/portfolio/default_tactic.h.node: ../src/tactic/portfolio/default_tactic.h util/params.h.node
	@echo done > tactic/portfolio/default_tactic.h.node
tactic/smtlogics/qfbv_tactic.h.node: ../src/tactic/smtlogics/qfbv_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qfbv_tactic.h.node
tactic/smtlogics/qflia_tactic.h.node: ../src/tactic/smtlogics/qflia_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qflia_tactic.h.node
tactic/smtlogics/qflra_tactic.h.node: ../src/tactic/smtlogics/qflra_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qflra_tactic.h.node
tactic/smtlogics/qfnia_tactic.h.node: ../src/tactic/smtlogics/qfnia_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qfnia_tactic.h.node
tactic/smtlogics/qfnra_tactic.h.node: ../src/tactic/smtlogics/qfnra_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qfnra_tactic.h.node
tactic/smtlogics/nra_tactic.h.node: ../src/tactic/smtlogics/nra_tactic.h
	@echo done > tactic/smtlogics/nra_tactic.h.node
tactic/smtlogics/quant_tactics.h.node: ../src/tactic/smtlogics/quant_tactics.h util/params.h.node
	@echo done > tactic/smtlogics/quant_tactics.h.node
tactic/portfolio/default_tactic$(OBJ_EXT): ../src/tactic/portfolio/default_tactic.cpp tactic/portfolio/default_tactic.h.node tactic/core/simplify_tactic.h.node tactic/smtlogics/qfbv_tactic.h.node smt/tactic/smt_tactic.h.node tactic/smtlogics/qflia_tactic.h.node tactic/smtlogics/qflra_tactic.h.node tactic/smtlogics/qfnia_tactic.h.node tactic/smtlogics/qfnra_tactic.h.node tactic/smtlogics/nra_tactic.h.node tactic/arith/probe_arith.h.node tactic/smtlogics/quant_tactics.h.node tactic/fpa/qffpa_tactic.h.node
	@echo src/tactic/portfolio/default_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_56) $(CXX_OUT_FLAG)tactic/portfolio/default_tactic$(OBJ_EXT) ../src/tactic/portfolio/default_tactic.cpp
solver/combined_solver.h.node: ../src/solver/combined_solver.h util/params.h.node
	@echo done > solver/combined_solver.h.node
solver/tactic2solver.h.node: ../src/solver/tactic2solver.h util/params.h.node
	@echo done > solver/tactic2solver.h.node
tactic/smtlogics/qfuf_tactic.h.node: ../src/tactic/smtlogics/qfuf_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qfuf_tactic.h.node
tactic/smtlogics/qfauflia_tactic.h.node: ../src/tactic/smtlogics/qfauflia_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qfauflia_tactic.h.node
tactic/smtlogics/qfaufbv_tactic.h.node: ../src/tactic/smtlogics/qfaufbv_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qfaufbv_tactic.h.node
tactic/smtlogics/qfufbv_tactic.h.node: ../src/tactic/smtlogics/qfufbv_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qfufbv_tactic.h.node
tactic/smtlogics/qfidl_tactic.h.node: ../src/tactic/smtlogics/qfidl_tactic.h util/params.h.node
	@echo done > tactic/smtlogics/qfidl_tactic.h.node
tactic/portfolio/smt_strategic_solver$(OBJ_EXT): ../src/tactic/portfolio/smt_strategic_solver.cpp cmd_context/cmd_context.h.node solver/combined_solver.h.node solver/tactic2solver.h.node tactic/smtlogics/qfbv_tactic.h.node tactic/smtlogics/qflia_tactic.h.node tactic/smtlogics/qfnia_tactic.h.node tactic/smtlogics/qfnra_tactic.h.node tactic/smtlogics/qfuf_tactic.h.node tactic/smtlogics/qflra_tactic.h.node tactic/smtlogics/quant_tactics.h.node tactic/smtlogics/qfauflia_tactic.h.node tactic/smtlogics/qfaufbv_tactic.h.node tactic/smtlogics/qfufbv_tactic.h.node tactic/smtlogics/qfidl_tactic.h.node tactic/portfolio/default_tactic.h.node tactic/ufbv/ufbv_tactic.h.node tactic/fpa/qffpa_tactic.h.node muz/fp/horn_tactic.h.node smt/smt_solver.h.node
	@echo src/tactic/portfolio/smt_strategic_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_56) $(CXX_OUT_FLAG)tactic/portfolio/smt_strategic_solver$(OBJ_EXT) ../src/tactic/portfolio/smt_strategic_solver.cpp
tactic/portfolio/portfolio$(LIB_EXT): tactic/portfolio/default_tactic$(OBJ_EXT) tactic/portfolio/smt_strategic_solver$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)tactic/portfolio/portfolio$(LIB_EXT) tactic/portfolio/default_tactic$(OBJ_EXT) tactic/portfolio/smt_strategic_solver$(OBJ_EXT)
portfolio: tactic/portfolio/portfolio$(LIB_EXT)

includes_57 = -I../src/tactic/portfolio -I../src/tactic/smtlogics -I../src/tactic/arith -I../src/tactic/core -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/sat -I../src/tactic/bv -I../src/ast/rewriter/bit_blaster -I../src/ast/simplifier -I../src/nlsat/tactic -I../src/nlsat -I../src/sat/tactic -I../src/smt/tactic -I../src/smt -I../src/ast/macros -I../src/cmd_context -I../src/solver -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/tactic/aig -I../src/muz/fp -I../src/muz/base -I../src/qe -I../src/muz/pdr -I../src/muz/transforms -I../src/math/hilbert -I../src/muz/clp -I../src/muz/tab -I../src/muz/rel -I../src/muz/bmc -I../src/muz/duality -I../src/duality -I../src/tactic/ufbv -I../src/tactic/fpa -I../src/tactic/sls -I../src/math/subpaving/tactic -I../src/math/subpaving -I../src/math/interval
parsers/smt/smtlib.h.node: ../src/parsers/smt/smtlib.h ast/ast.h.node util/symbol_table.h.node util/map.h.node ast/arith_decl_plugin.h.node
	@echo done > parsers/smt/smtlib.h.node
parsers/smt/smtlib$(OBJ_EXT): ../src/parsers/smt/smtlib.cpp parsers/smt/smtlib.h.node ast/ast_pp.h.node ast/ast_smt2_pp.h.node
	@echo src/parsers/smt/smtlib.cpp
	@$(CXX) $(CXXFLAGS) $(includes_57) $(CXX_OUT_FLAG)parsers/smt/smtlib$(OBJ_EXT) ../src/parsers/smt/smtlib.cpp
parsers/smt/smtparser.h.node: ../src/parsers/smt/smtparser.h ast/ast.h.node util/vector.h.node parsers/smt/smtlib.h.node
	@echo done > parsers/smt/smtparser.h.node
parsers/smt/smtlib_solver.h.node: ../src/parsers/smt/smtlib_solver.h parsers/smt/smtparser.h.node cmd_context/context_params.h.node util/lbool.h.node
	@echo done > parsers/smt/smtlib_solver.h.node
tactic/portfolio/smt_strategic_solver.h.node: ../src/tactic/portfolio/smt_strategic_solver.h
	@echo done > tactic/portfolio/smt_strategic_solver.h.node
parsers/smt/smtlib_solver$(OBJ_EXT): ../src/parsers/smt/smtlib_solver.cpp parsers/smt/smtparser.h.node parsers/smt/smtlib_solver.h.node util/warning.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/well_sorted.h.node model/model.h.node model/model_v2_pp.h.node solver/solver.h.node tactic/portfolio/smt_strategic_solver.h.node cmd_context/cmd_context.h.node model/model_params.hpp.node parsers/util/parser_params.hpp.node
	@echo src/parsers/smt/smtlib_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_57) $(CXX_OUT_FLAG)parsers/smt/smtlib_solver$(OBJ_EXT) ../src/parsers/smt/smtlib_solver.cpp
parsers/smt/smtparser$(OBJ_EXT): ../src/parsers/smt/smtparser.cpp util/region.h.node parsers/util/scanner.h.node util/symbol.h.node util/vector.h.node util/symbol_table.h.node parsers/smt/smtlib.h.node parsers/smt/smtparser.h.node ast/ast_pp.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node util/warning.h.node util/error_codes.h.node parsers/util/pattern_validation.h.node ast/rewriter/var_subst.h.node ast/well_sorted.h.node util/str_hashtable.h.node util/stopwatch.h.node
	@echo src/parsers/smt/smtparser.cpp
	@$(CXX) $(CXXFLAGS) $(includes_57) $(CXX_OUT_FLAG)parsers/smt/smtparser$(OBJ_EXT) ../src/parsers/smt/smtparser.cpp
parsers/smt/smtparser$(LIB_EXT): parsers/smt/smtlib$(OBJ_EXT) parsers/smt/smtlib_solver$(OBJ_EXT) parsers/smt/smtparser$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)parsers/smt/smtparser$(LIB_EXT) parsers/smt/smtlib$(OBJ_EXT) parsers/smt/smtlib_solver$(OBJ_EXT) parsers/smt/smtparser$(OBJ_EXT)
smtparser: parsers/smt/smtparser$(LIB_EXT)

includes_58 = -I../src/tactic/portfolio -I../src/tactic/smtlogics -I../src/tactic/arith -I../src/tactic/core -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/sat -I../src/tactic/bv -I../src/ast/rewriter/bit_blaster -I../src/ast/simplifier -I../src/nlsat/tactic -I../src/nlsat -I../src/sat/tactic -I../src/smt/tactic -I../src/smt -I../src/ast/macros -I../src/cmd_context -I../src/solver -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/tactic/aig -I../src/muz/fp -I../src/muz/base -I../src/qe -I../src/muz/pdr -I../src/muz/transforms -I../src/math/hilbert -I../src/muz/clp -I../src/muz/tab -I../src/muz/rel -I../src/muz/bmc -I../src/muz/duality -I../src/duality -I../src/tactic/ufbv -I../src/tactic/fpa -I../src/tactic/sls -I../src/math/subpaving/tactic -I../src/math/subpaving -I../src/math/interval -I../src/smt/user_plugin -I../src/parsers/smt -I../src/math/realclosure
api/z3_macros.h.node: ../src/api/z3_macros.h
	@echo done > api/z3_macros.h.node
api/z3_api.h.node: ../src/api/z3_api.h
	@echo done > api/z3_api.h.node
api/z3_algebraic.h.node: ../src/api/z3_algebraic.h
	@echo done > api/z3_algebraic.h.node
api/z3_polynomial.h.node: ../src/api/z3_polynomial.h
	@echo done > api/z3_polynomial.h.node
api/z3_rcf.h.node: ../src/api/z3_rcf.h
	@echo done > api/z3_rcf.h.node
api/z3_interp.h.node: ../src/api/z3_interp.h
	@echo done > api/z3_interp.h.node
api/z3.h.node: ../src/api/z3.h api/z3_macros.h.node api/z3_api.h.node api/z3_algebraic.h.node api/z3_polynomial.h.node api/z3_rcf.h.node api/z3_interp.h.node
	@echo done > api/z3.h.node
api/api_log_macros.h.node: ../src/api/api_log_macros.h api/z3.h.node
	@echo done > api/api_log_macros.h.node
api/api_util.h.node: ../src/api/api_util.h util/params.h.node util/lbool.h.node ast/ast.h.node
	@echo done > api/api_util.h.node
api/api_polynomial.h.node: ../src/api/api_polynomial.h math/polynomial/polynomial.h.node
	@echo done > api/api_polynomial.h.node
api/api_context.h.node: ../src/api/api_context.h api/z3.h.node ast/ast.h.node api/api_util.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/datatype_decl_plugin.h.node ast/dl_decl_plugin.h.node smt/smt_kernel.h.node smt/params/smt_params.h.node util/event_handler.h.node cmd_context/tactic_manager.h.node cmd_context/context_params.h.node api/api_polynomial.h.node
	@echo done > api/api_context.h.node
api/api_ast_vector.h.node: ../src/api/api_ast_vector.h api/api_util.h.node
	@echo done > api/api_ast_vector.h.node
api/api_algebraic$(OBJ_EXT): ../src/api/api_algebraic.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_ast_vector.h.node math/polynomial/algebraic_numbers.h.node ast/expr2polynomial.h.node util/cancel_eh.h.node util/scoped_timer.h.node
	@echo src/api/api_algebraic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_algebraic$(OBJ_EXT) ../src/api/api_algebraic.cpp
api/api_arith$(OBJ_EXT): ../src/api/api_arith.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node ast/arith_decl_plugin.h.node math/polynomial/algebraic_numbers.h.node
	@echo src/api/api_arith.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_arith$(OBJ_EXT) ../src/api/api_arith.cpp
api/api_array$(OBJ_EXT): ../src/api/api_array.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node ast/array_decl_plugin.h.node
	@echo src/api/api_array.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_array$(OBJ_EXT) ../src/api/api_array.cpp
api/api_ast$(OBJ_EXT): ../src/api/api_ast.cpp api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node ast/well_sorted.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/datatype_decl_plugin.h.node ast/array_decl_plugin.h.node ast/ast_translation.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node ast/ast_smt_pp.h.node ast/ast_smt2_pp.h.node ast/rewriter/th_rewriter.h.node ast/rewriter/var_subst.h.node ast/rewriter/expr_safe_replace.h.node ast/pp.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node util/scoped_timer.h.node ast/pp_params.hpp.node
	@echo src/api/api_ast.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_ast$(OBJ_EXT) ../src/api/api_ast.cpp
api/api_ast_map.h.node: ../src/api/api_ast_map.h api/api_util.h.node util/obj_hashtable.h.node
	@echo done > api/api_ast_map.h.node
api/api_ast_map$(OBJ_EXT): ../src/api/api_ast_map.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_ast_map.h.node api/api_ast_vector.h.node ast/ast_smt2_pp.h.node util/dec_ref_util.h.node
	@echo src/api/api_ast_map.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_ast_map$(OBJ_EXT) ../src/api/api_ast_map.cpp
api/api_ast_vector$(OBJ_EXT): ../src/api/api_ast_vector.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_ast_vector.h.node ast/ast_translation.h.node ast/ast_smt2_pp.h.node
	@echo src/api/api_ast_vector.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_ast_vector$(OBJ_EXT) ../src/api/api_ast_vector.cpp
api/api_bv$(OBJ_EXT): ../src/api/api_bv.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node ast/bv_decl_plugin.h.node
	@echo src/api/api_bv.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_bv$(OBJ_EXT) ../src/api/api_bv.cpp
api/z3_replayer.h.node: ../src/api/z3_replayer.h api/z3.h.node util/z3_exception.h.node
	@echo done > api/z3_replayer.h.node
api/api_commands$(OBJ_EXT): ../src/api/api_commands.cpp api/z3.h.node api/z3_replayer.h.node
	@echo src/api/api_commands.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_commands$(OBJ_EXT) ../src/api/api_commands.cpp
api/api_config_params$(OBJ_EXT): ../src/api/api_config_params.cpp api/z3.h.node api/api_context.h.node ast/pp.h.node api/api_log_macros.h.node api/api_util.h.node cmd_context/cmd_context.h.node util/symbol.h.node util/gparams.h.node util/env_params.h.node cmd_context/context_params.h.node
	@echo src/api/api_config_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_config_params$(OBJ_EXT) ../src/api/api_config_params.cpp
api/api_context$(OBJ_EXT): ../src/api/api_context.cpp api/api_context.h.node parsers/smt/smtparser.h.node util/version.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node api/api_log_macros.h.node api/api_util.h.node ast/reg_decl_plugins.h.node math/realclosure/realclosure.h.node
	@echo src/api/api_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_context$(OBJ_EXT) ../src/api/api_context.cpp
api/api_datalog.h.node: ../src/api/api_datalog.h api/z3.h.node ast/ast.h.node smt/params/smt_params.h.node smt/smt_kernel.h.node api/api_util.h.node
	@echo done > api/api_datalog.h.node
api/api_stats.h.node: ../src/api/api_stats.h api/api_util.h.node util/statistics.h.node
	@echo done > api/api_stats.h.node
api/api_datalog$(OBJ_EXT): ../src/api/api_datalog.cpp api/api_datalog.h.node api/api_context.h.node api/api_util.h.node ast/ast_pp.h.node api/api_ast_vector.h.node api/api_log_macros.h.node api/api_stats.h.node muz/fp/datalog_parser.h.node util/cancel_eh.h.node util/scoped_timer.h.node muz/fp/dl_cmds.h.node cmd_context/cmd_context.h.node parsers/smt2/smt2parser.h.node muz/base/dl_context.h.node muz/fp/dl_register_engine.h.node muz/rel/dl_external_relation.h.node ast/dl_decl_plugin.h.node muz/rel/rel_context.h.node
	@echo src/api/api_datalog.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_datalog$(OBJ_EXT) ../src/api/api_datalog.cpp
api/api_datatype$(OBJ_EXT): ../src/api/api_datatype.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node ast/datatype_decl_plugin.h.node
	@echo src/api/api_datatype.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_datatype$(OBJ_EXT) ../src/api/api_datatype.cpp
api/api_goal.h.node: ../src/api/api_goal.h api/api_util.h.node tactic/goal.h.node
	@echo done > api/api_goal.h.node
api/api_goal$(OBJ_EXT): ../src/api/api_goal.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_goal.h.node ast/ast_translation.h.node
	@echo src/api/api_goal.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_goal$(OBJ_EXT) ../src/api/api_goal.cpp
api/api_tactic.h.node: ../src/api/api_tactic.h api/api_goal.h.node tactic/tactical.h.node
	@echo done > api/api_tactic.h.node
api/api_solver.h.node: ../src/api/api_solver.h api/api_util.h.node solver/solver.h.node
	@echo done > api/api_solver.h.node
api/api_model.h.node: ../src/api/api_model.h api/api_util.h.node model/model.h.node
	@echo done > api/api_model.h.node
api/api_interp$(OBJ_EXT): ../src/api/api_interp.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_tactic.h.node api/api_solver.h.node api/api_model.h.node api/api_stats.h.node api/api_ast_vector.h.node solver/tactic2solver.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node util/scoped_timer.h.node tactic/portfolio/smt_strategic_solver.h.node smt/smt_solver.h.node smt/smt_implied_equalities.h.node interp/iz3interp.h.node interp/iz3profiling.h.node interp/iz3hash.h.node interp/iz3pp.h.node interp/iz3checker.h.node ast/scoped_proof.h.node
	@echo src/api/api_interp.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_interp$(OBJ_EXT) ../src/api/api_interp.cpp
api/api_log$(OBJ_EXT): ../src/api/api_log.cpp api/z3.h.node api/api_log_macros.h.node util/util.h.node
	@echo src/api/api_log.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_log$(OBJ_EXT) ../src/api/api_log.cpp
api/z3_logger.h.node: ../src/api/z3_logger.h util/symbol.h.node
	@echo done > api/z3_logger.h.node
api/api_log_macros$(OBJ_EXT): ../src/api/api_log_macros.cpp api/z3.h.node api/api_log_macros.h.node api/z3_logger.h.node
	@echo src/api/api_log_macros.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_log_macros$(OBJ_EXT) ../src/api/api_log_macros.cpp
api/api_model$(OBJ_EXT): ../src/api/api_model.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_model.h.node api/api_ast_vector.h.node ast/array_decl_plugin.h.node model/model.h.node model/model_v2_pp.h.node model/model_smt2_pp.h.node model/model_params.hpp.node model/model_evaluator_params.hpp.node
	@echo src/api/api_model.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_model$(OBJ_EXT) ../src/api/api_model.cpp
api/api_numeral$(OBJ_EXT): ../src/api/api_numeral.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node math/polynomial/algebraic_numbers.h.node
	@echo src/api/api_numeral.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_numeral$(OBJ_EXT) ../src/api/api_numeral.cpp
api/api_params$(OBJ_EXT): ../src/api/api_params.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node util/params.h.node
	@echo src/api/api_params.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_params$(OBJ_EXT) ../src/api/api_params.cpp
api/api_parsers$(OBJ_EXT): ../src/api/api_parsers.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node cmd_context/cmd_context.h.node parsers/smt2/smt2parser.h.node parsers/smt/smtparser.h.node solver/solver_na2as.h.node
	@echo src/api/api_parsers.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_parsers$(OBJ_EXT) ../src/api/api_parsers.cpp
api/api_polynomial$(OBJ_EXT): ../src/api/api_polynomial.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_polynomial.h.node api/api_ast_vector.h.node ast/expr2polynomial.h.node util/cancel_eh.h.node util/scoped_timer.h.node ast/expr2var.h.node
	@echo src/api/api_polynomial.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_polynomial$(OBJ_EXT) ../src/api/api_polynomial.cpp
api/api_quant$(OBJ_EXT): ../src/api/api_quant.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node parsers/util/pattern_validation.h.node ast/expr_abstract.h.node
	@echo src/api/api_quant.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_quant$(OBJ_EXT) ../src/api/api_quant.cpp
api/api_rcf$(OBJ_EXT): ../src/api/api_rcf.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node math/realclosure/realclosure.h.node
	@echo src/api/api_rcf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_rcf$(OBJ_EXT) ../src/api/api_rcf.cpp
api/api_solver$(OBJ_EXT): ../src/api/api_solver.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_tactic.h.node api/api_solver.h.node api/api_model.h.node api/api_stats.h.node api/api_ast_vector.h.node solver/tactic2solver.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node util/scoped_timer.h.node tactic/portfolio/smt_strategic_solver.h.node smt/smt_solver.h.node smt/smt_implied_equalities.h.node
	@echo src/api/api_solver.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_solver$(OBJ_EXT) ../src/api/api_solver.cpp
api/api_solver_old$(OBJ_EXT): ../src/api/api_solver_old.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_model.h.node util/cancel_eh.h.node
	@echo src/api/api_solver_old.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_solver_old$(OBJ_EXT) ../src/api/api_solver_old.cpp
api/api_stats$(OBJ_EXT): ../src/api/api_stats.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_stats.h.node
	@echo src/api/api_stats.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_stats$(OBJ_EXT) ../src/api/api_stats.cpp
api/api_tactic$(OBJ_EXT): ../src/api/api_tactic.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_tactic.h.node api/api_model.h.node util/scoped_ctrl_c.h.node util/cancel_eh.h.node util/scoped_timer.h.node
	@echo src/api/api_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_tactic$(OBJ_EXT) ../src/api/api_tactic.cpp
api/api_user_theory$(OBJ_EXT): ../src/api/api_user_theory.cpp api/z3.h.node api/api_log_macros.h.node api/api_context.h.node api/api_util.h.node smt/user_plugin/user_smt_theory.h.node
	@echo src/api/api_user_theory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/api_user_theory$(OBJ_EXT) ../src/api/api_user_theory.cpp
util/stream_buffer.h.node: ../src/util/stream_buffer.h
	@echo done > util/stream_buffer.h.node
api/z3_replayer$(OBJ_EXT): ../src/api/z3_replayer.cpp util/vector.h.node util/map.h.node api/z3_replayer.h.node util/stream_buffer.h.node util/symbol.h.node util/trace.h.node
	@echo src/api/z3_replayer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_58) $(CXX_OUT_FLAG)api/z3_replayer$(OBJ_EXT) ../src/api/z3_replayer.cpp
api/api$(LIB_EXT): api/api_algebraic$(OBJ_EXT) api/api_arith$(OBJ_EXT) api/api_array$(OBJ_EXT) api/api_ast$(OBJ_EXT) api/api_ast_map$(OBJ_EXT) api/api_ast_vector$(OBJ_EXT) api/api_bv$(OBJ_EXT) api/api_commands$(OBJ_EXT) api/api_config_params$(OBJ_EXT) api/api_context$(OBJ_EXT) api/api_datalog$(OBJ_EXT) api/api_datatype$(OBJ_EXT) api/api_goal$(OBJ_EXT) api/api_interp$(OBJ_EXT) api/api_log$(OBJ_EXT) api/api_log_macros$(OBJ_EXT) api/api_model$(OBJ_EXT) api/api_numeral$(OBJ_EXT) api/api_params$(OBJ_EXT) api/api_parsers$(OBJ_EXT) api/api_polynomial$(OBJ_EXT) api/api_quant$(OBJ_EXT) api/api_rcf$(OBJ_EXT) api/api_solver$(OBJ_EXT) api/api_solver_old$(OBJ_EXT) api/api_stats$(OBJ_EXT) api/api_tactic$(OBJ_EXT) api/api_user_theory$(OBJ_EXT) api/z3_replayer$(OBJ_EXT)
	@$(AR) $(AR_FLAGS) $(AR_OUTFLAG)api/api$(LIB_EXT) api/api_algebraic$(OBJ_EXT) api/api_arith$(OBJ_EXT) api/api_array$(OBJ_EXT) api/api_ast$(OBJ_EXT) api/api_ast_map$(OBJ_EXT) api/api_ast_vector$(OBJ_EXT) api/api_bv$(OBJ_EXT) api/api_commands$(OBJ_EXT) api/api_config_params$(OBJ_EXT) api/api_context$(OBJ_EXT) api/api_datalog$(OBJ_EXT) api/api_datatype$(OBJ_EXT) api/api_goal$(OBJ_EXT) api/api_interp$(OBJ_EXT) api/api_log$(OBJ_EXT) api/api_log_macros$(OBJ_EXT) api/api_model$(OBJ_EXT) api/api_numeral$(OBJ_EXT) api/api_params$(OBJ_EXT) api/api_parsers$(OBJ_EXT) api/api_polynomial$(OBJ_EXT) api/api_quant$(OBJ_EXT) api/api_rcf$(OBJ_EXT) api/api_solver$(OBJ_EXT) api/api_solver_old$(OBJ_EXT) api/api_stats$(OBJ_EXT) api/api_tactic$(OBJ_EXT) api/api_user_theory$(OBJ_EXT) api/z3_replayer$(OBJ_EXT)
api: api/api$(LIB_EXT)

includes_59 = -I../src/api -I../src/tactic/portfolio -I../src/tactic/smtlogics -I../src/tactic/arith -I../src/tactic/core -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/sat -I../src/tactic/bv -I../src/ast/rewriter/bit_blaster -I../src/ast/simplifier -I../src/nlsat/tactic -I../src/nlsat -I../src/sat/tactic -I../src/smt/tactic -I../src/smt -I../src/ast/macros -I../src/cmd_context -I../src/solver -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/tactic/aig -I../src/muz/fp -I../src/muz/base -I../src/qe -I../src/muz/pdr -I../src/muz/transforms -I../src/math/hilbert -I../src/muz/clp -I../src/muz/tab -I../src/muz/rel -I../src/muz/bmc -I../src/muz/duality -I../src/duality -I../src/tactic/ufbv -I../src/tactic/fpa -I../src/tactic/sls -I../src/math/subpaving/tactic -I../src/math/subpaving -I../src/math/interval -I../src/smt/user_plugin -I../src/parsers/smt -I../src/math/realclosure -I../src/cmd_context/extra_cmds
shell/datalog_frontend.h.node: ../src/shell/datalog_frontend.h
	@echo done > shell/datalog_frontend.h.node
shell/datalog_frontend$(OBJ_EXT): ../src/shell/datalog_frontend.cpp util/stopwatch.h.node smt/params/smt_params.h.node ast/arith_decl_plugin.h.node muz/rel/dl_compiler.h.node muz/transforms/dl_mk_filter_rules.h.node muz/rel/dl_finite_product_relation.h.node muz/base/dl_context.h.node muz/rel/rel_context.h.node muz/fp/dl_register_engine.h.node muz/fp/datalog_parser.h.node shell/datalog_frontend.h.node util/timeout.h.node
	@echo src/shell/datalog_frontend.cpp
	@$(CXX) $(CXXFLAGS) $(includes_59) $(CXX_OUT_FLAG)shell/datalog_frontend$(OBJ_EXT) ../src/shell/datalog_frontend.cpp
shell/dimacs_frontend$(OBJ_EXT): ../src/shell/dimacs_frontend.cpp util/timeout.h.node sat/dimacs.h.node sat/sat_solver.h.node
	@echo src/shell/dimacs_frontend.cpp
	@$(CXX) $(CXXFLAGS) $(includes_59) $(CXX_OUT_FLAG)shell/dimacs_frontend$(OBJ_EXT) ../src/shell/dimacs_frontend.cpp
shell/gparams_register_modules$(OBJ_EXT): ../src/shell/gparams_register_modules.cpp util/gparams.h.node ast/pp_params.hpp.node util/env_params.h.node math/polynomial/algebraic_params.hpp.node model/model_evaluator_params.hpp.node model/model_params.hpp.node ast/rewriter/arith_rewriter_params.hpp.node ast/rewriter/array_rewriter_params.hpp.node ast/rewriter/bool_rewriter_params.hpp.node ast/rewriter/bv_rewriter_params.hpp.node ast/rewriter/poly_rewriter_params.hpp.node ast/rewriter/rewriter_params.hpp.node ast/normal_forms/nnf.h.node ast/normal_forms/nnf_params.hpp.node sat/sat_asymm_branch_params.hpp.node sat/sat_params.hpp.node sat/sat_scc_params.hpp.node sat/sat_simplifier_params.hpp.node ast/simplifier/arith_simplifier_params_helper.hpp.node ast/simplifier/array_simplifier_params_helper.hpp.node ast/simplifier/bv_simplifier_params_helper.hpp.node nlsat/nlsat_params.hpp.node cmd_context/context_params.h.node solver/combined_solver_params.hpp.node interp/interp_params.hpp.node smt/params/smt_params_helper.hpp.node ast/pattern/pattern_inference_params_helper.hpp.node parsers/util/parser_params.hpp.node muz/base/fixedpoint_params.hpp.node tactic/sls/sls_params.hpp.node math/realclosure/rcf_params.hpp.node
	@echo src/shell/gparams_register_modules.cpp
	@$(CXX) $(CXXFLAGS) $(includes_59) $(CXX_OUT_FLAG)shell/gparams_register_modules$(OBJ_EXT) ../src/shell/gparams_register_modules.cpp
qe/vsubst_tactic.h.node: ../src/qe/vsubst_tactic.h util/params.h.node
	@echo done > qe/vsubst_tactic.h.node
math/subpaving/tactic/subpaving_tactic.h.node: ../src/math/subpaving/tactic/subpaving_tactic.h util/params.h.node
	@echo done > math/subpaving/tactic/subpaving_tactic.h.node
shell/install_tactic$(OBJ_EXT): ../src/shell/install_tactic.cpp tactic/tactic.h.node cmd_context/tactic_cmds.h.node cmd_context/cmd_context.h.node tactic/smtlogics/qfbv_tactic.h.node tactic/smtlogics/qflia_tactic.h.node tactic/smtlogics/qflra_tactic.h.node tactic/smtlogics/qfnia_tactic.h.node tactic/smtlogics/qfnra_tactic.h.node tactic/arith/add_bounds_tactic.h.node tactic/arith/degree_shift_tactic.h.node tactic/arith/diff_neq_tactic.h.node tactic/arith/factor_tactic.h.node tactic/arith/fix_dl_var_tactic.h.node tactic/arith/fm_tactic.h.node tactic/arith/lia2pb_tactic.h.node tactic/arith/nla2bv_tactic.h.node tactic/arith/normalize_bounds_tactic.h.node tactic/arith/pb2bv_tactic.h.node tactic/arith/probe_arith.h.node tactic/arith/propagate_ineqs_tactic.h.node tactic/arith/purify_arith_tactic.h.node tactic/arith/recover_01_tactic.h.node tactic/core/cofactor_term_ite_tactic.h.node tactic/core/ctx_simplify_tactic.h.node tactic/core/der_tactic.h.node tactic/core/distribute_forall_tactic.h.node tactic/core/elim_term_ite_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node tactic/core/nnf_tactic.h.node tactic/core/occf_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/reduce_args_tactic.h.node tactic/core/simplify_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/split_clause_tactic.h.node tactic/core/symmetry_reduce_tactic.h.node tactic/core/tseitin_cnf_tactic.h.node tactic/probe.h.node tactic/tactic.h.node tactic/bv/bit_blaster_tactic.h.node tactic/bv/bv1_blaster_tactic.h.node tactic/bv/bv_size_reduction_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node nlsat/tactic/nlsat_tactic.h.node nlsat/tactic/qfnra_nlsat_tactic.h.node sat/tactic/sat_tactic.h.node smt/tactic/ctx_solver_simplify_tactic.h.node smt/tactic/smt_tactic.h.node smt/tactic/unit_subsumption_tactic.h.node tactic/aig/aig_tactic.h.node muz/fp/horn_tactic.h.node qe/qe_lite.h.node qe/qe_sat_tactic.h.node qe/qe_tactic.h.node qe/vsubst_tactic.h.node tactic/ufbv/macro_finder_tactic.h.node tactic/ufbv/quasi_macros_tactic.h.node tactic/ufbv/ufbv_tactic.h.node tactic/fpa/fpa2bv_tactic.h.node tactic/fpa/qffpa_tactic.h.node tactic/sls/sls_tactic.h.node math/subpaving/tactic/subpaving_tactic.h.node
	@echo src/shell/install_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_59) $(CXX_OUT_FLAG)shell/install_tactic$(OBJ_EXT) ../src/shell/install_tactic.cpp
shell/smtlib_frontend.h.node: ../src/shell/smtlib_frontend.h
	@echo done > shell/smtlib_frontend.h.node
shell/z3_log_frontend.h.node: ../src/shell/z3_log_frontend.h
	@echo done > shell/z3_log_frontend.h.node
shell/dimacs_frontend.h.node: ../src/shell/dimacs_frontend.h
	@echo done > shell/dimacs_frontend.h.node
shell/main$(OBJ_EXT): ../src/shell/main.cpp util/memory_manager.h.node util/trace.h.node util/debug.h.node util/util.h.node ast/pp.h.node shell/smtlib_frontend.h.node shell/z3_log_frontend.h.node util/warning.h.node util/version.h.node shell/dimacs_frontend.h.node shell/datalog_frontend.h.node util/timeout.h.node util/z3_exception.h.node util/error_codes.h.node util/gparams.h.node util/env_params.h.node
	@echo src/shell/main.cpp
	@$(CXX) $(CXXFLAGS) $(includes_59) $(CXX_OUT_FLAG)shell/main$(OBJ_EXT) ../src/shell/main.cpp
shell/mem_initializer$(OBJ_EXT): ../src/shell/mem_initializer.cpp util/debug.h.node util/gparams.h.node util/prime_generator.h.node util/rational.h.node util/symbol.h.node util/trace.h.node
	@echo src/shell/mem_initializer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_59) $(CXX_OUT_FLAG)shell/mem_initializer$(OBJ_EXT) ../src/shell/mem_initializer.cpp
cmd_context/extra_cmds/dbg_cmds.h.node: ../src/cmd_context/extra_cmds/dbg_cmds.h
	@echo done > cmd_context/extra_cmds/dbg_cmds.h.node
cmd_context/extra_cmds/polynomial_cmds.h.node: ../src/cmd_context/extra_cmds/polynomial_cmds.h
	@echo done > cmd_context/extra_cmds/polynomial_cmds.h.node
cmd_context/extra_cmds/subpaving_cmds.h.node: ../src/cmd_context/extra_cmds/subpaving_cmds.h
	@echo done > cmd_context/extra_cmds/subpaving_cmds.h.node
shell/smtlib_frontend$(OBJ_EXT): ../src/shell/smtlib_frontend.cpp parsers/smt/smtlib_solver.h.node util/timeout.h.node parsers/smt2/smt2parser.h.node muz/fp/dl_cmds.h.node cmd_context/extra_cmds/dbg_cmds.h.node cmd_context/extra_cmds/polynomial_cmds.h.node cmd_context/extra_cmds/subpaving_cmds.h.node tactic/portfolio/smt_strategic_solver.h.node smt/smt_solver.h.node
	@echo src/shell/smtlib_frontend.cpp
	@$(CXX) $(CXXFLAGS) $(includes_59) $(CXX_OUT_FLAG)shell/smtlib_frontend$(OBJ_EXT) ../src/shell/smtlib_frontend.cpp
shell/z3_log_frontend$(OBJ_EXT): ../src/shell/z3_log_frontend.cpp util/util.h.node util/error_codes.h.node api/z3_replayer.h.node
	@echo src/shell/z3_log_frontend.cpp
	@$(CXX) $(CXXFLAGS) $(includes_59) $(CXX_OUT_FLAG)shell/z3_log_frontend$(OBJ_EXT) ../src/shell/z3_log_frontend.cpp
z3$(EXE_EXT): shell/datalog_frontend$(OBJ_EXT) shell/dimacs_frontend$(OBJ_EXT) shell/gparams_register_modules$(OBJ_EXT) shell/install_tactic$(OBJ_EXT) shell/main$(OBJ_EXT) shell/mem_initializer$(OBJ_EXT) shell/smtlib_frontend$(OBJ_EXT) shell/z3_log_frontend$(OBJ_EXT) api/api$(LIB_EXT) parsers/smt/smtparser$(LIB_EXT) tactic/portfolio/portfolio$(LIB_EXT) tactic/ufbv/ufbv_tactic$(LIB_EXT) tactic/smtlogics/smtlogic_tactics$(LIB_EXT) muz/fp/fp$(LIB_EXT) muz/duality/duality_intf$(LIB_EXT) muz/bmc/bmc$(LIB_EXT) muz/tab/tab$(LIB_EXT) muz/clp/clp$(LIB_EXT) muz/pdr/pdr$(LIB_EXT) muz/rel/rel$(LIB_EXT) muz/transforms/transforms$(LIB_EXT) muz/base/muz$(LIB_EXT) duality/duality$(LIB_EXT) qe/qe$(LIB_EXT) tactic/sls/sls_tactic$(LIB_EXT) smt/tactic/smt_tactic$(LIB_EXT) tactic/fpa/fpa_tactics$(LIB_EXT) tactic/bv/bv_tactics$(LIB_EXT) smt/user_plugin/user_plugin$(LIB_EXT) smt/smt$(LIB_EXT) smt/proto_model/proto_model$(LIB_EXT) smt/params/smt_params$(LIB_EXT) ast/rewriter/bit_blaster/bit_blaster$(LIB_EXT) ast/pattern/pattern$(LIB_EXT) ast/macros/macros$(LIB_EXT) ast/fpa/fpa$(LIB_EXT) ast/simplifier/simplifier$(LIB_EXT) ast/proof_checker/proof_checker$(LIB_EXT) parsers/smt2/smt2parser$(LIB_EXT) cmd_context/extra_cmds/extra_cmds$(LIB_EXT) cmd_context/cmd_context$(LIB_EXT) interp/interp$(LIB_EXT) solver/solver$(LIB_EXT) tactic/aig/aig_tactic$(LIB_EXT) math/subpaving/tactic/subpaving_tactic$(LIB_EXT) nlsat/tactic/nlsat_tactic$(LIB_EXT) tactic/arith/arith_tactics$(LIB_EXT) sat/tactic/sat_tactic$(LIB_EXT) tactic/core/core_tactics$(LIB_EXT) math/euclid/euclid$(LIB_EXT) math/grobner/grobner$(LIB_EXT) parsers/util/parser_util$(LIB_EXT) ast/substitution/substitution$(LIB_EXT) tactic/tactic$(LIB_EXT) model/model$(LIB_EXT) ast/normal_forms/normal_forms$(LIB_EXT) ast/rewriter/rewriter$(LIB_EXT) ast/ast$(LIB_EXT) math/subpaving/subpaving$(LIB_EXT) math/realclosure/realclosure$(LIB_EXT) math/interval/interval$(LIB_EXT) math/hilbert/hilbert$(LIB_EXT) nlsat/nlsat$(LIB_EXT) sat/sat$(LIB_EXT) math/polynomial/polynomial$(LIB_EXT) util/util$(LIB_EXT)
	$(LINK) $(LINK_OUT_FLAG)z3$(EXE_EXT) $(LINK_FLAGS) shell/datalog_frontend$(OBJ_EXT) shell/dimacs_frontend$(OBJ_EXT) shell/gparams_register_modules$(OBJ_EXT) shell/install_tactic$(OBJ_EXT) shell/main$(OBJ_EXT) shell/mem_initializer$(OBJ_EXT) shell/smtlib_frontend$(OBJ_EXT) shell/z3_log_frontend$(OBJ_EXT) api/api$(LIB_EXT) parsers/smt/smtparser$(LIB_EXT) tactic/portfolio/portfolio$(LIB_EXT) tactic/ufbv/ufbv_tactic$(LIB_EXT) tactic/smtlogics/smtlogic_tactics$(LIB_EXT) muz/fp/fp$(LIB_EXT) muz/duality/duality_intf$(LIB_EXT) muz/bmc/bmc$(LIB_EXT) muz/tab/tab$(LIB_EXT) muz/clp/clp$(LIB_EXT) muz/pdr/pdr$(LIB_EXT) muz/rel/rel$(LIB_EXT) muz/transforms/transforms$(LIB_EXT) muz/base/muz$(LIB_EXT) duality/duality$(LIB_EXT) qe/qe$(LIB_EXT) tactic/sls/sls_tactic$(LIB_EXT) smt/tactic/smt_tactic$(LIB_EXT) tactic/fpa/fpa_tactics$(LIB_EXT) tactic/bv/bv_tactics$(LIB_EXT) smt/user_plugin/user_plugin$(LIB_EXT) smt/smt$(LIB_EXT) smt/proto_model/proto_model$(LIB_EXT) smt/params/smt_params$(LIB_EXT) ast/rewriter/bit_blaster/bit_blaster$(LIB_EXT) ast/pattern/pattern$(LIB_EXT) ast/macros/macros$(LIB_EXT) ast/fpa/fpa$(LIB_EXT) ast/simplifier/simplifier$(LIB_EXT) ast/proof_checker/proof_checker$(LIB_EXT) parsers/smt2/smt2parser$(LIB_EXT) cmd_context/extra_cmds/extra_cmds$(LIB_EXT) cmd_context/cmd_context$(LIB_EXT) interp/interp$(LIB_EXT) solver/solver$(LIB_EXT) tactic/aig/aig_tactic$(LIB_EXT) math/subpaving/tactic/subpaving_tactic$(LIB_EXT) nlsat/tactic/nlsat_tactic$(LIB_EXT) tactic/arith/arith_tactics$(LIB_EXT) sat/tactic/sat_tactic$(LIB_EXT) tactic/core/core_tactics$(LIB_EXT) math/euclid/euclid$(LIB_EXT) math/grobner/grobner$(LIB_EXT) parsers/util/parser_util$(LIB_EXT) ast/substitution/substitution$(LIB_EXT) tactic/tactic$(LIB_EXT) model/model$(LIB_EXT) ast/normal_forms/normal_forms$(LIB_EXT) ast/rewriter/rewriter$(LIB_EXT) ast/ast$(LIB_EXT) math/subpaving/subpaving$(LIB_EXT) math/realclosure/realclosure$(LIB_EXT) math/interval/interval$(LIB_EXT) math/hilbert/hilbert$(LIB_EXT) nlsat/nlsat$(LIB_EXT) sat/sat$(LIB_EXT) math/polynomial/polynomial$(LIB_EXT) util/util$(LIB_EXT)  $(LINK_EXTRA_FLAGS)
shell: z3$(EXE_EXT)

includes_60 = -I../src/api -I../src/tactic/portfolio -I../src/tactic/smtlogics -I../src/tactic/arith -I../src/tactic/core -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/sat -I../src/tactic/bv -I../src/ast/rewriter/bit_blaster -I../src/ast/simplifier -I../src/nlsat/tactic -I../src/nlsat -I../src/sat/tactic -I../src/smt/tactic -I../src/smt -I../src/ast/macros -I../src/cmd_context -I../src/solver -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/tactic/aig -I../src/muz/fp -I../src/muz/base -I../src/qe -I../src/muz/pdr -I../src/muz/transforms -I../src/math/hilbert -I../src/muz/clp -I../src/muz/tab -I../src/muz/rel -I../src/muz/bmc -I../src/muz/duality -I../src/duality -I../src/tactic/ufbv -I../src/tactic/fpa -I../src/tactic/sls -I../src/math/subpaving/tactic -I../src/math/subpaving -I../src/math/interval -I../src/smt/user_plugin -I../src/parsers/smt -I../src/math/realclosure -I../src/test/fuzzing
test/algebraic$(OBJ_EXT): ../src/test/algebraic.cpp math/polynomial/algebraic_numbers.h.node math/polynomial/polynomial_var2value.h.node util/mpbq.h.node
	@echo src/test/algebraic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/algebraic$(OBJ_EXT) ../src/test/algebraic.cpp
api/z3_private.h.node: ../src/api/z3_private.h util/rational.h.node api/z3_macros.h.node
	@echo done > api/z3_private.h.node
test/api$(OBJ_EXT): ../src/test/api.cpp api/z3.h.node api/z3_private.h.node util/util.h.node util/trace.h.node util/trace.h.node
	@echo src/test/api.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/api$(OBJ_EXT) ../src/test/api.cpp
test/api_bug$(OBJ_EXT): ../src/test/api_bug.cpp api/z3.h.node
	@echo src/test/api_bug.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/api_bug$(OBJ_EXT) ../src/test/api_bug.cpp
test/arith_rewriter$(OBJ_EXT): ../src/test/arith_rewriter.cpp ast/rewriter/arith_rewriter.h.node ast/bv_decl_plugin.h.node ast/ast_pp.h.node ast/reg_decl_plugins.h.node ast/rewriter/th_rewriter.h.node model/model.h.node muz/pdr/pdr_util.h.node parsers/smt2/smt2parser.h.node
	@echo src/test/arith_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/arith_rewriter$(OBJ_EXT) ../src/test/arith_rewriter.cpp
test/arith_simplifier_plugin$(OBJ_EXT): ../src/test/arith_simplifier_plugin.cpp smt/arith_eq_solver.h.node smt/params/smt_params.h.node
	@echo src/test/arith_simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/arith_simplifier_plugin$(OBJ_EXT) ../src/test/arith_simplifier_plugin.cpp
test/ast$(OBJ_EXT): ../src/test/ast.cpp ast/ast.h.node
	@echo src/test/ast.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/ast$(OBJ_EXT) ../src/test/ast.cpp
test/bit_blaster$(OBJ_EXT): ../src/test/bit_blaster.cpp ast/rewriter/bit_blaster/bit_blaster.h.node ast/ast_pp.h.node ast/ast_ll_pp.h.node
	@echo src/test/bit_blaster.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/bit_blaster$(OBJ_EXT) ../src/test/bit_blaster.cpp
test/bit_vector$(OBJ_EXT): ../src/test/bit_vector.cpp util/bit_vector.h.node util/vector.h.node
	@echo src/test/bit_vector.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/bit_vector$(OBJ_EXT) ../src/test/bit_vector.cpp
test/bits$(OBJ_EXT): ../src/test/bits.cpp util/util.h.node util/debug.h.node util/vector.h.node util/mpz.h.node util/bit_util.h.node
	@echo src/test/bits.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/bits$(OBJ_EXT) ../src/test/bits.cpp
util/ptr_scoped_buffer.h.node: ../src/util/ptr_scoped_buffer.h util/util.h.node util/debug.h.node util/buffer.h.node
	@echo done > util/ptr_scoped_buffer.h.node
test/buffer$(OBJ_EXT): ../src/test/buffer.cpp util/ptr_scoped_buffer.h.node
	@echo src/test/buffer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/buffer$(OBJ_EXT) ../src/test/buffer.cpp
test/bv_simplifier_plugin$(OBJ_EXT): ../src/test/bv_simplifier_plugin.cpp ast/simplifier/bv_simplifier_plugin.h.node ast/arith_decl_plugin.h.node ast/ast_pp.h.node ast/reg_decl_plugins.h.node
	@echo src/test/bv_simplifier_plugin.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/bv_simplifier_plugin$(OBJ_EXT) ../src/test/bv_simplifier_plugin.cpp
test/chashtable$(OBJ_EXT): ../src/test/chashtable.cpp util/chashtable.h.node util/hashtable.h.node util/hash.h.node util/util.h.node
	@echo src/test/chashtable.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/chashtable$(OBJ_EXT) ../src/test/chashtable.cpp
test/check_assumptions$(OBJ_EXT): ../src/test/check_assumptions.cpp util/memory_manager.h.node smt/params/smt_params.h.node ast/ast.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node smt/smt_context.h.node ast/reg_decl_plugins.h.node
	@echo src/test/check_assumptions.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/check_assumptions$(OBJ_EXT) ../src/test/check_assumptions.cpp
test/datalog_parser$(OBJ_EXT): ../src/test/datalog_parser.cpp muz/fp/datalog_parser.h.node ast/ast_pp.h.node ast/arith_decl_plugin.h.node muz/base/dl_context.h.node muz/fp/dl_register_engine.h.node smt/params/smt_params.h.node ast/reg_decl_plugins.h.node
	@echo src/test/datalog_parser.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/datalog_parser$(OBJ_EXT) ../src/test/datalog_parser.cpp
test/diff_logic$(OBJ_EXT): ../src/test/diff_logic.cpp util/rational.h.node smt/diff_logic.h.node smt/smt_literal.h.node util/util.h.node util/debug.h.node
	@echo src/test/diff_logic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/diff_logic$(OBJ_EXT) ../src/test/diff_logic.cpp
test/dl_context$(OBJ_EXT): ../src/test/dl_context.cpp muz/fp/datalog_parser.h.node ast/ast_pp.h.node ast/arith_decl_plugin.h.node muz/base/dl_context.h.node smt/params/smt_params.h.node muz/fp/dl_register_engine.h.node
	@echo src/test/dl_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/dl_context$(OBJ_EXT) ../src/test/dl_context.cpp
test/dl_product_relation$(OBJ_EXT): ../src/test/dl_product_relation.cpp muz/base/dl_context.h.node muz/fp/dl_register_engine.h.node muz/rel/dl_finite_product_relation.h.node muz/rel/dl_sparse_table.h.node muz/rel/rel_context.h.node
	@echo src/test/dl_product_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/dl_product_relation$(OBJ_EXT) ../src/test/dl_product_relation.cpp
test/dl_query$(OBJ_EXT): ../src/test/dl_query.cpp muz/fp/datalog_parser.h.node ast/ast_pp.h.node muz/rel/dl_table_relation.h.node muz/base/dl_context.h.node muz/fp/dl_register_engine.h.node smt/params/smt_params.h.node util/stopwatch.h.node ast/reg_decl_plugins.h.node muz/rel/dl_relation_manager.h.node
	@echo src/test/dl_query.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/dl_query$(OBJ_EXT) ../src/test/dl_query.cpp
test/dl_relation$(OBJ_EXT): ../src/test/dl_relation.cpp muz/base/dl_context.h.node muz/fp/dl_register_engine.h.node muz/rel/dl_relation_manager.h.node muz/rel/dl_interval_relation.h.node muz/rel/dl_bound_relation.h.node muz/rel/dl_product_relation.h.node util/util.h.node
	@echo src/test/dl_relation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/dl_relation$(OBJ_EXT) ../src/test/dl_relation.cpp
test/dl_table$(OBJ_EXT): ../src/test/dl_table.cpp muz/base/dl_context.h.node muz/rel/dl_table.h.node muz/fp/dl_register_engine.h.node muz/rel/dl_relation_manager.h.node
	@echo src/test/dl_table.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/dl_table$(OBJ_EXT) ../src/test/dl_table.cpp
test/dl_util$(OBJ_EXT): ../src/test/dl_util.cpp muz/base/dl_util.h.node
	@echo src/test/dl_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/dl_util$(OBJ_EXT) ../src/test/dl_util.cpp
test/escaped$(OBJ_EXT): ../src/test/escaped.cpp util/util.h.node
	@echo src/test/escaped.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/escaped$(OBJ_EXT) ../src/test/escaped.cpp
test/ex$(OBJ_EXT): ../src/test/ex.cpp util/z3_exception.h.node
	@echo src/test/ex.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/ex$(OBJ_EXT) ../src/test/ex.cpp
test/expr_rand$(OBJ_EXT): ../src/test/expr_rand.cpp test/fuzzing/expr_rand.h.node ast/ast_pp.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node ast/arith_decl_plugin.h.node ast/ast_smt_pp.h.node ast/reg_decl_plugins.h.node
	@echo src/test/expr_rand.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/expr_rand$(OBJ_EXT) ../src/test/expr_rand.cpp
test/expr_substitution$(OBJ_EXT): ../src/test/expr_substitution.cpp ast/expr_substitution.h.node smt/params/smt_params.h.node ast/substitution/substitution.h.node ast/substitution/unifier.h.node ast/bv_decl_plugin.h.node ast/ast_pp.h.node ast/arith_decl_plugin.h.node ast/reg_decl_plugins.h.node ast/rewriter/th_rewriter.h.node
	@echo src/test/expr_substitution.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/expr_substitution$(OBJ_EXT) ../src/test/expr_substitution.cpp
test/ext_numeral$(OBJ_EXT): ../src/test/ext_numeral.cpp util/mpq.h.node util/ext_numeral.h.node
	@echo src/test/ext_numeral.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/ext_numeral$(OBJ_EXT) ../src/test/ext_numeral.cpp
test/f2n$(OBJ_EXT): ../src/test/f2n.cpp util/f2n.h.node util/hwf.h.node util/mpf.h.node
	@echo src/test/f2n.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/f2n$(OBJ_EXT) ../src/test/f2n.cpp
test/factor_rewriter$(OBJ_EXT): ../src/test/factor_rewriter.cpp ast/rewriter/factor_rewriter.h.node ast/bv_decl_plugin.h.node ast/ast_pp.h.node ast/reg_decl_plugins.h.node
	@echo src/test/factor_rewriter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/factor_rewriter$(OBJ_EXT) ../src/test/factor_rewriter.cpp
test/for_each_file.h.node: ../src/test/for_each_file.h
	@echo done > test/for_each_file.h.node
test/for_each_file$(OBJ_EXT): ../src/test/for_each_file.cpp test/for_each_file.h.node
	@echo src/test/for_each_file.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/for_each_file$(OBJ_EXT) ../src/test/for_each_file.cpp
test/get_implied_equalities$(OBJ_EXT): ../src/test/get_implied_equalities.cpp api/z3.h.node util/trace.h.node util/debug.h.node
	@echo src/test/get_implied_equalities.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/get_implied_equalities$(OBJ_EXT) ../src/test/get_implied_equalities.cpp
test/gparams_register_modules$(OBJ_EXT): ../src/test/gparams_register_modules.cpp util/gparams.h.node ast/pp_params.hpp.node util/env_params.h.node math/polynomial/algebraic_params.hpp.node model/model_evaluator_params.hpp.node model/model_params.hpp.node ast/rewriter/arith_rewriter_params.hpp.node ast/rewriter/array_rewriter_params.hpp.node ast/rewriter/bool_rewriter_params.hpp.node ast/rewriter/bv_rewriter_params.hpp.node ast/rewriter/poly_rewriter_params.hpp.node ast/rewriter/rewriter_params.hpp.node ast/normal_forms/nnf.h.node ast/normal_forms/nnf_params.hpp.node sat/sat_asymm_branch_params.hpp.node sat/sat_params.hpp.node sat/sat_scc_params.hpp.node sat/sat_simplifier_params.hpp.node ast/simplifier/arith_simplifier_params_helper.hpp.node ast/simplifier/array_simplifier_params_helper.hpp.node ast/simplifier/bv_simplifier_params_helper.hpp.node nlsat/nlsat_params.hpp.node cmd_context/context_params.h.node solver/combined_solver_params.hpp.node interp/interp_params.hpp.node smt/params/smt_params_helper.hpp.node ast/pattern/pattern_inference_params_helper.hpp.node parsers/util/parser_params.hpp.node muz/base/fixedpoint_params.hpp.node tactic/sls/sls_params.hpp.node math/realclosure/rcf_params.hpp.node
	@echo src/test/gparams_register_modules.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/gparams_register_modules$(OBJ_EXT) ../src/test/gparams_register_modules.cpp
test/hashtable$(OBJ_EXT): ../src/test/hashtable.cpp util/hashtable.h.node
	@echo src/test/hashtable.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/hashtable$(OBJ_EXT) ../src/test/hashtable.cpp
test/heap$(OBJ_EXT): ../src/test/heap.cpp util/heap.h.node util/hashtable.h.node util/trace.h.node
	@echo src/test/heap.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/heap$(OBJ_EXT) ../src/test/heap.cpp
test/heap_trie$(OBJ_EXT): ../src/test/heap_trie.cpp math/hilbert/heap_trie.h.node
	@echo src/test/heap_trie.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/heap_trie$(OBJ_EXT) ../src/test/heap_trie.cpp
test/hilbert_basis$(OBJ_EXT): ../src/test/hilbert_basis.cpp math/hilbert/hilbert_basis.h.node ast/ast_pp.h.node ast/reg_decl_plugins.h.node ast/arith_decl_plugin.h.node tactic/smtlogics/quant_tactics.h.node tactic/tactic.h.node solver/tactic2solver.h.node solver/solver.h.node
	@echo src/test/hilbert_basis.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/hilbert_basis$(OBJ_EXT) ../src/test/hilbert_basis.cpp
test/horn_subsume_model_converter$(OBJ_EXT): ../src/test/horn_subsume_model_converter.cpp tactic/horn_subsume_model_converter.h.node ast/arith_decl_plugin.h.node model/model_smt2_pp.h.node ast/reg_decl_plugins.h.node
	@echo src/test/horn_subsume_model_converter.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/horn_subsume_model_converter$(OBJ_EXT) ../src/test/horn_subsume_model_converter.cpp
test/hwf$(OBJ_EXT): ../src/test/hwf.cpp util/hwf.h.node util/f2n.h.node util/rational.h.node
	@echo src/test/hwf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/hwf$(OBJ_EXT) ../src/test/hwf.cpp
test/inf_rational$(OBJ_EXT): ../src/test/inf_rational.cpp util/inf_rational.h.node
	@echo src/test/inf_rational.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/inf_rational$(OBJ_EXT) ../src/test/inf_rational.cpp
test/install_tactic$(OBJ_EXT): ../src/test/install_tactic.cpp tactic/tactic.h.node cmd_context/tactic_cmds.h.node cmd_context/cmd_context.h.node tactic/smtlogics/qfbv_tactic.h.node tactic/smtlogics/qflia_tactic.h.node tactic/smtlogics/qflra_tactic.h.node tactic/smtlogics/qfnia_tactic.h.node tactic/smtlogics/qfnra_tactic.h.node tactic/arith/add_bounds_tactic.h.node tactic/arith/degree_shift_tactic.h.node tactic/arith/diff_neq_tactic.h.node tactic/arith/factor_tactic.h.node tactic/arith/fix_dl_var_tactic.h.node tactic/arith/fm_tactic.h.node tactic/arith/lia2pb_tactic.h.node tactic/arith/nla2bv_tactic.h.node tactic/arith/normalize_bounds_tactic.h.node tactic/arith/pb2bv_tactic.h.node tactic/arith/probe_arith.h.node tactic/arith/propagate_ineqs_tactic.h.node tactic/arith/purify_arith_tactic.h.node tactic/arith/recover_01_tactic.h.node tactic/core/cofactor_term_ite_tactic.h.node tactic/core/ctx_simplify_tactic.h.node tactic/core/der_tactic.h.node tactic/core/distribute_forall_tactic.h.node tactic/core/elim_term_ite_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node tactic/core/nnf_tactic.h.node tactic/core/occf_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/reduce_args_tactic.h.node tactic/core/simplify_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/split_clause_tactic.h.node tactic/core/symmetry_reduce_tactic.h.node tactic/core/tseitin_cnf_tactic.h.node tactic/probe.h.node tactic/tactic.h.node tactic/bv/bit_blaster_tactic.h.node tactic/bv/bv1_blaster_tactic.h.node tactic/bv/bv_size_reduction_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node nlsat/tactic/nlsat_tactic.h.node nlsat/tactic/qfnra_nlsat_tactic.h.node sat/tactic/sat_tactic.h.node smt/tactic/ctx_solver_simplify_tactic.h.node smt/tactic/smt_tactic.h.node smt/tactic/unit_subsumption_tactic.h.node tactic/aig/aig_tactic.h.node muz/fp/horn_tactic.h.node qe/qe_lite.h.node qe/qe_sat_tactic.h.node qe/qe_tactic.h.node qe/vsubst_tactic.h.node tactic/ufbv/macro_finder_tactic.h.node tactic/ufbv/quasi_macros_tactic.h.node tactic/ufbv/ufbv_tactic.h.node tactic/fpa/fpa2bv_tactic.h.node tactic/fpa/qffpa_tactic.h.node tactic/sls/sls_tactic.h.node math/subpaving/tactic/subpaving_tactic.h.node
	@echo src/test/install_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/install_tactic$(OBJ_EXT) ../src/test/install_tactic.cpp
test/im_float_config.h.node: ../src/test/im_float_config.h util/f2n.h.node util/mpf.h.node util/hwf.h.node
	@echo done > test/im_float_config.h.node
test/interval$(OBJ_EXT): ../src/test/interval.cpp math/interval/interval_def.h.node util/dependency.h.node util/mpq.h.node ast/ast.h.node util/debug.h.node test/im_float_config.h.node
	@echo src/test/interval.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/interval$(OBJ_EXT) ../src/test/interval.cpp
test/karr$(OBJ_EXT): ../src/test/karr.cpp math/hilbert/hilbert_basis.h.node
	@echo src/test/karr.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/karr$(OBJ_EXT) ../src/test/karr.cpp
test/list$(OBJ_EXT): ../src/test/list.cpp util/trace.h.node util/util.h.node util/region.h.node util/list.h.node
	@echo src/test/list.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/list$(OBJ_EXT) ../src/test/list.cpp
test/main$(OBJ_EXT): ../src/test/main.cpp util/util.h.node util/trace.h.node util/debug.h.node util/timeit.h.node util/warning.h.node util/memory_manager.h.node
	@echo src/test/main.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/main$(OBJ_EXT) ../src/test/main.cpp
test/map$(OBJ_EXT): ../src/test/map.cpp util/map.h.node util/str_hashtable.h.node
	@echo src/test/map.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/map$(OBJ_EXT) ../src/test/map.cpp
test/matcher$(OBJ_EXT): ../src/test/matcher.cpp ast/substitution/matcher.h.node ast/ast_pp.h.node ast/reg_decl_plugins.h.node
	@echo src/test/matcher.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/matcher$(OBJ_EXT) ../src/test/matcher.cpp
test/mem_initializer$(OBJ_EXT): ../src/test/mem_initializer.cpp util/debug.h.node util/gparams.h.node util/prime_generator.h.node util/rational.h.node util/symbol.h.node util/trace.h.node
	@echo src/test/mem_initializer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/mem_initializer$(OBJ_EXT) ../src/test/mem_initializer.cpp
test/memory$(OBJ_EXT): ../src/test/memory.cpp api/z3.h.node api/z3_private.h.node util/util.h.node util/trace.h.node
	@echo src/test/memory.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/memory$(OBJ_EXT) ../src/test/memory.cpp
test/model2expr$(OBJ_EXT): ../src/test/model2expr.cpp model/model2expr.h.node ast/ast_pp.h.node ast/arith_decl_plugin.h.node model/model_smt2_pp.h.node ast/reg_decl_plugins.h.node
	@echo src/test/model2expr.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/model2expr$(OBJ_EXT) ../src/test/model2expr.cpp
test/model_retrieval$(OBJ_EXT): ../src/test/model_retrieval.cpp ast/ast.h.node smt/params/smt_params.h.node smt/smt_context.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node model/model_v2_pp.h.node ast/reg_decl_plugins.h.node
	@echo src/test/model_retrieval.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/model_retrieval$(OBJ_EXT) ../src/test/model_retrieval.cpp
test/mpbq$(OBJ_EXT): ../src/test/mpbq.cpp util/mpbq.h.node
	@echo src/test/mpbq.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/mpbq$(OBJ_EXT) ../src/test/mpbq.cpp
test/mpf$(OBJ_EXT): ../src/test/mpf.cpp util/mpf.h.node util/f2n.h.node
	@echo src/test/mpf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/mpf$(OBJ_EXT) ../src/test/mpf.cpp
test/mpff$(OBJ_EXT): ../src/test/mpff.cpp util/mpff.h.node util/mpz.h.node util/mpq.h.node
	@echo src/test/mpff.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/mpff$(OBJ_EXT) ../src/test/mpff.cpp
test/mpfx$(OBJ_EXT): ../src/test/mpfx.cpp util/mpfx.h.node
	@echo src/test/mpfx.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/mpfx$(OBJ_EXT) ../src/test/mpfx.cpp
test/mpq$(OBJ_EXT): ../src/test/mpq.cpp util/mpq.h.node util/rational.h.node util/timeit.h.node
	@echo src/test/mpq.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/mpq$(OBJ_EXT) ../src/test/mpq.cpp
test/mpz$(OBJ_EXT): ../src/test/mpz.cpp util/mpz.h.node util/rational.h.node util/timeit.h.node util/scoped_numeral.h.node
	@echo src/test/mpz.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/mpz$(OBJ_EXT) ../src/test/mpz.cpp
test/nlarith_util$(OBJ_EXT): ../src/test/nlarith_util.cpp qe/nlarith_util.h.node ast/arith_decl_plugin.h.node ast/ast_pp.h.node ast/reg_decl_plugins.h.node
	@echo src/test/nlarith_util.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/nlarith_util$(OBJ_EXT) ../src/test/nlarith_util.cpp
test/nlsat$(OBJ_EXT): ../src/test/nlsat.cpp nlsat/nlsat_assignment.h.node nlsat/nlsat_interval_set.h.node nlsat/nlsat_evaluator.h.node nlsat/nlsat_solver.h.node util/util.h.node
	@echo src/test/nlsat.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/nlsat$(OBJ_EXT) ../src/test/nlsat.cpp
test/no_overflow$(OBJ_EXT): ../src/test/no_overflow.cpp api/z3.h.node util/trace.h.node util/rational.h.node
	@echo src/test/no_overflow.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/no_overflow$(OBJ_EXT) ../src/test/no_overflow.cpp
util/object_allocator.h.node: ../src/util/object_allocator.h util/util.h.node util/vector.h.node
	@echo done > util/object_allocator.h.node
test/object_allocator$(OBJ_EXT): ../src/test/object_allocator.cpp util/rational.h.node util/object_allocator.h.node
	@echo src/test/object_allocator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/object_allocator$(OBJ_EXT) ../src/test/object_allocator.cpp
test/old_interval$(OBJ_EXT): ../src/test/old_interval.cpp smt/old_interval.h.node util/basic_interval.h.node util/mpz.h.node util/scoped_numeral.h.node
	@echo src/test/old_interval.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/old_interval$(OBJ_EXT) ../src/test/old_interval.cpp
test/optional$(OBJ_EXT): ../src/test/optional.cpp util/trace.h.node util/debug.h.node util/optional.h.node
	@echo src/test/optional.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/optional$(OBJ_EXT) ../src/test/optional.cpp
test/parray$(OBJ_EXT): ../src/test/parray.cpp util/parray.h.node util/small_object_allocator.h.node ast/ast.h.node
	@echo src/test/parray.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/parray$(OBJ_EXT) ../src/test/parray.cpp
test/permutation$(OBJ_EXT): ../src/test/permutation.cpp util/permutation.h.node util/util.h.node util/vector.h.node
	@echo src/test/permutation.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/permutation$(OBJ_EXT) ../src/test/permutation.cpp
test/polynomial$(OBJ_EXT): ../src/test/polynomial.cpp math/polynomial/polynomial.h.node math/polynomial/polynomial_factorization.h.node math/polynomial/polynomial_var2value.h.node math/polynomial/polynomial_cache.h.node math/polynomial/linear_eq_solver.h.node
	@echo src/test/polynomial.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/polynomial$(OBJ_EXT) ../src/test/polynomial.cpp
test/polynomial_factorization$(OBJ_EXT): ../src/test/polynomial_factorization.cpp math/polynomial/upolynomial_factorization_int.h.node util/timeit.h.node math/polynomial/polynomial.h.node math/polynomial/polynomial_factorization.h.node
	@echo src/test/polynomial_factorization.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/polynomial_factorization$(OBJ_EXT) ../src/test/polynomial_factorization.cpp
test/polynorm$(OBJ_EXT): ../src/test/polynorm.cpp ast/rewriter/th_rewriter.h.node parsers/smt2/smt2parser.h.node ast/arith_decl_plugin.h.node ast/reg_decl_plugins.h.node ast/rewriter/arith_rewriter.h.node ast/ast_pp.h.node
	@echo src/test/polynorm.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/polynorm$(OBJ_EXT) ../src/test/polynorm.cpp
test/prime_generator$(OBJ_EXT): ../src/test/prime_generator.cpp util/mpz.h.node util/prime_generator.h.node
	@echo src/test/prime_generator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/prime_generator$(OBJ_EXT) ../src/test/prime_generator.cpp
test/proof_checker$(OBJ_EXT): ../src/test/proof_checker.cpp ast/proof_checker/proof_checker.h.node ast/ast_ll_pp.h.node
	@echo src/test/proof_checker.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/proof_checker$(OBJ_EXT) ../src/test/proof_checker.cpp
test/qe_arith$(OBJ_EXT): ../src/test/qe_arith.cpp qe/qe_arith.h.node qe/qe.h.node ast/rewriter/th_rewriter.h.node parsers/smt2/smt2parser.h.node ast/arith_decl_plugin.h.node ast/reg_decl_plugins.h.node ast/rewriter/arith_rewriter.h.node ast/ast_pp.h.node qe/qe_util.h.node smt/smt_context.h.node ast/expr_abstract.h.node
	@echo src/test/qe_arith.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/qe_arith$(OBJ_EXT) ../src/test/qe_arith.cpp
test/quant_elim$(OBJ_EXT): ../src/test/quant_elim.cpp ast/ast.h.node smt/params/smt_params.h.node ast/simplifier/simplifier.h.node qe/qe.h.node ast/simplifier/basic_simplifier_plugin.h.node ast/simplifier/arith_simplifier_plugin.h.node ast/simplifier/array_simplifier_plugin.h.node ast/simplifier/bv_simplifier_plugin.h.node ast/ast_pp.h.node parsers/smt/smtlib.h.node parsers/smt/smtparser.h.node util/lbool.h.node ast/reg_decl_plugins.h.node
	@echo src/test/quant_elim.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/quant_elim$(OBJ_EXT) ../src/test/quant_elim.cpp
test/quant_solve$(OBJ_EXT): ../src/test/quant_solve.cpp ast/ast.h.node smt/params/smt_params.h.node qe/qe.h.node ast/arith_decl_plugin.h.node ast/ast_pp.h.node util/lbool.h.node ast/rewriter/expr_replacer.h.node smt/smt_kernel.h.node ast/reg_decl_plugins.h.node ast/expr_abstract.h.node model/model_smt2_pp.h.node parsers/smt2/smt2parser.h.node ast/rewriter/var_subst.h.node
	@echo src/test/quant_solve.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/quant_solve$(OBJ_EXT) ../src/test/quant_solve.cpp
test/random$(OBJ_EXT): ../src/test/random.cpp util/util.h.node util/trace.h.node
	@echo src/test/random.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/random$(OBJ_EXT) ../src/test/random.cpp
util/ext_gcd.h.node: ../src/util/ext_gcd.h
	@echo done > util/ext_gcd.h.node
test/rational$(OBJ_EXT): ../src/test/rational.cpp util/vector.h.node util/rational.h.node util/trace.h.node util/ext_gcd.h.node util/timeit.h.node
	@echo src/test/rational.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/rational$(OBJ_EXT) ../src/test/rational.cpp
test/rcf$(OBJ_EXT): ../src/test/rcf.cpp math/realclosure/realclosure.h.node math/realclosure/mpz_matrix.h.node
	@echo src/test/rcf.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/rcf$(OBJ_EXT) ../src/test/rcf.cpp
test/region$(OBJ_EXT): ../src/test/region.cpp util/region.h.node
	@echo src/test/region.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/region$(OBJ_EXT) ../src/test/region.cpp
test/simple_parser$(OBJ_EXT): ../src/test/simple_parser.cpp parsers/util/cost_parser.h.node smt/cost_evaluator.h.node ast/arith_decl_plugin.h.node ast/ast_pp.h.node ast/well_sorted.h.node util/warning.h.node ast/reg_decl_plugins.h.node
	@echo src/test/simple_parser.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/simple_parser$(OBJ_EXT) ../src/test/simple_parser.cpp
test/simplifier$(OBJ_EXT): ../src/test/simplifier.cpp api/z3.h.node api/z3_private.h.node util/util.h.node util/trace.h.node
	@echo src/test/simplifier.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/simplifier$(OBJ_EXT) ../src/test/simplifier.cpp
test/small_object_allocator$(OBJ_EXT): ../src/test/small_object_allocator.cpp util/util.h.node util/trace.h.node util/small_object_allocator.h.node
	@echo src/test/small_object_allocator.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/small_object_allocator$(OBJ_EXT) ../src/test/small_object_allocator.cpp
test/smt2print_parse$(OBJ_EXT): ../src/test/smt2print_parse.cpp api/z3.h.node
	@echo src/test/smt2print_parse.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/smt2print_parse$(OBJ_EXT) ../src/test/smt2print_parse.cpp
test/smt_context$(OBJ_EXT): ../src/test/smt_context.cpp smt/smt_context.h.node ast/reg_decl_plugins.h.node
	@echo src/test/smt_context.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/smt_context$(OBJ_EXT) ../src/test/smt_context.cpp
test/stack$(OBJ_EXT): ../src/test/stack.cpp util/stack.h.node util/vector.h.node
	@echo src/test/stack.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/stack$(OBJ_EXT) ../src/test/stack.cpp
test/string_buffer$(OBJ_EXT): ../src/test/string_buffer.cpp util/debug.h.node util/string_buffer.h.node util/trace.h.node
	@echo src/test/string_buffer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/string_buffer$(OBJ_EXT) ../src/test/string_buffer.cpp
test/substitution$(OBJ_EXT): ../src/test/substitution.cpp ast/expr_substitution.h.node smt/params/smt_params.h.node ast/substitution/substitution.h.node ast/substitution/unifier.h.node ast/bv_decl_plugin.h.node ast/ast_pp.h.node ast/arith_decl_plugin.h.node ast/reg_decl_plugins.h.node
	@echo src/test/substitution.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/substitution$(OBJ_EXT) ../src/test/substitution.cpp
test/symbol$(OBJ_EXT): ../src/test/symbol.cpp util/symbol.h.node util/debug.h.node
	@echo src/test/symbol.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/symbol$(OBJ_EXT) ../src/test/symbol.cpp
test/symbol_table$(OBJ_EXT): ../src/test/symbol_table.cpp util/symbol_table.h.node
	@echo src/test/symbol_table.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/symbol_table$(OBJ_EXT) ../src/test/symbol_table.cpp
test/theory_dl$(OBJ_EXT): ../src/test/theory_dl.cpp smt/smt_context.h.node ast/dl_decl_plugin.h.node ast/ast_pp.h.node model/model_v2_pp.h.node ast/reg_decl_plugins.h.node
	@echo src/test/theory_dl.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/theory_dl$(OBJ_EXT) ../src/test/theory_dl.cpp
test/timeout$(OBJ_EXT): ../src/test/timeout.cpp util/timeout.h.node util/trace.h.node
	@echo src/test/timeout.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/timeout$(OBJ_EXT) ../src/test/timeout.cpp
util/uint_map.h.node: ../src/util/uint_map.h util/vector.h.node
	@echo done > util/uint_map.h.node
util/total_order.h.node: ../src/util/total_order.h util/util.h.node util/small_object_allocator.h.node util/map.h.node util/uint_map.h.node util/trace.h.node
	@echo done > util/total_order.h.node
test/total_order$(OBJ_EXT): ../src/test/total_order.cpp util/total_order.h.node util/timeit.h.node
	@echo src/test/total_order.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/total_order$(OBJ_EXT) ../src/test/total_order.cpp
test/trigo$(OBJ_EXT): ../src/test/trigo.cpp math/interval/interval_def.h.node util/dependency.h.node util/mpq.h.node ast/ast.h.node util/debug.h.node test/im_float_config.h.node
	@echo src/test/trigo.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/trigo$(OBJ_EXT) ../src/test/trigo.cpp
test/uint_set$(OBJ_EXT): ../src/test/uint_set.cpp util/uint_set.h.node util/vector.h.node
	@echo src/test/uint_set.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/uint_set$(OBJ_EXT) ../src/test/uint_set.cpp
test/upolynomial$(OBJ_EXT): ../src/test/upolynomial.cpp math/polynomial/upolynomial.h.node util/timeit.h.node
	@echo src/test/upolynomial.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/upolynomial$(OBJ_EXT) ../src/test/upolynomial.cpp
test/var_subst$(OBJ_EXT): ../src/test/var_subst.cpp ast/rewriter/var_subst.h.node ast/ast_pp.h.node ast/arith_decl_plugin.h.node ast/bv_decl_plugin.h.node ast/array_decl_plugin.h.node ast/for_each_expr.h.node ast/reg_decl_plugins.h.node
	@echo src/test/var_subst.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/var_subst$(OBJ_EXT) ../src/test/var_subst.cpp
test/vector$(OBJ_EXT): ../src/test/vector.cpp util/vector.h.node
	@echo src/test/vector.cpp
	@$(CXX) $(CXXFLAGS) $(includes_60) $(CXX_OUT_FLAG)test/vector$(OBJ_EXT) ../src/test/vector.cpp
test-z3$(EXE_EXT): test/algebraic$(OBJ_EXT) test/api$(OBJ_EXT) test/api_bug$(OBJ_EXT) test/arith_rewriter$(OBJ_EXT) test/arith_simplifier_plugin$(OBJ_EXT) test/ast$(OBJ_EXT) test/bit_blaster$(OBJ_EXT) test/bit_vector$(OBJ_EXT) test/bits$(OBJ_EXT) test/buffer$(OBJ_EXT) test/bv_simplifier_plugin$(OBJ_EXT) test/chashtable$(OBJ_EXT) test/check_assumptions$(OBJ_EXT) test/datalog_parser$(OBJ_EXT) test/diff_logic$(OBJ_EXT) test/dl_context$(OBJ_EXT) test/dl_product_relation$(OBJ_EXT) test/dl_query$(OBJ_EXT) test/dl_relation$(OBJ_EXT) test/dl_table$(OBJ_EXT) test/dl_util$(OBJ_EXT) test/escaped$(OBJ_EXT) test/ex$(OBJ_EXT) test/expr_rand$(OBJ_EXT) test/expr_substitution$(OBJ_EXT) test/ext_numeral$(OBJ_EXT) test/f2n$(OBJ_EXT) test/factor_rewriter$(OBJ_EXT) test/for_each_file$(OBJ_EXT) test/get_implied_equalities$(OBJ_EXT) test/gparams_register_modules$(OBJ_EXT) test/hashtable$(OBJ_EXT) test/heap$(OBJ_EXT) test/heap_trie$(OBJ_EXT) test/hilbert_basis$(OBJ_EXT) test/horn_subsume_model_converter$(OBJ_EXT) test/hwf$(OBJ_EXT) test/inf_rational$(OBJ_EXT) test/install_tactic$(OBJ_EXT) test/interval$(OBJ_EXT) test/karr$(OBJ_EXT) test/list$(OBJ_EXT) test/main$(OBJ_EXT) test/map$(OBJ_EXT) test/matcher$(OBJ_EXT) test/mem_initializer$(OBJ_EXT) test/memory$(OBJ_EXT) test/model2expr$(OBJ_EXT) test/model_retrieval$(OBJ_EXT) test/mpbq$(OBJ_EXT) test/mpf$(OBJ_EXT) test/mpff$(OBJ_EXT) test/mpfx$(OBJ_EXT) test/mpq$(OBJ_EXT) test/mpz$(OBJ_EXT) test/nlarith_util$(OBJ_EXT) test/nlsat$(OBJ_EXT) test/no_overflow$(OBJ_EXT) test/object_allocator$(OBJ_EXT) test/old_interval$(OBJ_EXT) test/optional$(OBJ_EXT) test/parray$(OBJ_EXT) test/permutation$(OBJ_EXT) test/polynomial$(OBJ_EXT) test/polynomial_factorization$(OBJ_EXT) test/polynorm$(OBJ_EXT) test/prime_generator$(OBJ_EXT) test/proof_checker$(OBJ_EXT) test/qe_arith$(OBJ_EXT) test/quant_elim$(OBJ_EXT) test/quant_solve$(OBJ_EXT) test/random$(OBJ_EXT) test/rational$(OBJ_EXT) test/rcf$(OBJ_EXT) test/region$(OBJ_EXT) test/simple_parser$(OBJ_EXT) test/simplifier$(OBJ_EXT) test/small_object_allocator$(OBJ_EXT) test/smt2print_parse$(OBJ_EXT) test/smt_context$(OBJ_EXT) test/stack$(OBJ_EXT) test/string_buffer$(OBJ_EXT) test/substitution$(OBJ_EXT) test/symbol$(OBJ_EXT) test/symbol_table$(OBJ_EXT) test/theory_dl$(OBJ_EXT) test/timeout$(OBJ_EXT) test/total_order$(OBJ_EXT) test/trigo$(OBJ_EXT) test/uint_set$(OBJ_EXT) test/upolynomial$(OBJ_EXT) test/var_subst$(OBJ_EXT) test/vector$(OBJ_EXT) api/api$(LIB_EXT) parsers/smt/smtparser$(LIB_EXT) tactic/portfolio/portfolio$(LIB_EXT) tactic/ufbv/ufbv_tactic$(LIB_EXT) tactic/smtlogics/smtlogic_tactics$(LIB_EXT) muz/fp/fp$(LIB_EXT) muz/duality/duality_intf$(LIB_EXT) muz/bmc/bmc$(LIB_EXT) muz/tab/tab$(LIB_EXT) muz/clp/clp$(LIB_EXT) muz/pdr/pdr$(LIB_EXT) muz/rel/rel$(LIB_EXT) muz/transforms/transforms$(LIB_EXT) muz/base/muz$(LIB_EXT) duality/duality$(LIB_EXT) qe/qe$(LIB_EXT) tactic/sls/sls_tactic$(LIB_EXT) smt/tactic/smt_tactic$(LIB_EXT) tactic/fpa/fpa_tactics$(LIB_EXT) test/fuzzing/fuzzing$(LIB_EXT) tactic/bv/bv_tactics$(LIB_EXT) smt/user_plugin/user_plugin$(LIB_EXT) smt/smt$(LIB_EXT) smt/proto_model/proto_model$(LIB_EXT) smt/params/smt_params$(LIB_EXT) ast/rewriter/bit_blaster/bit_blaster$(LIB_EXT) ast/pattern/pattern$(LIB_EXT) ast/macros/macros$(LIB_EXT) ast/fpa/fpa$(LIB_EXT) ast/simplifier/simplifier$(LIB_EXT) ast/proof_checker/proof_checker$(LIB_EXT) parsers/smt2/smt2parser$(LIB_EXT) cmd_context/cmd_context$(LIB_EXT) interp/interp$(LIB_EXT) solver/solver$(LIB_EXT) tactic/aig/aig_tactic$(LIB_EXT) math/subpaving/tactic/subpaving_tactic$(LIB_EXT) nlsat/tactic/nlsat_tactic$(LIB_EXT) tactic/arith/arith_tactics$(LIB_EXT) sat/tactic/sat_tactic$(LIB_EXT) tactic/core/core_tactics$(LIB_EXT) math/euclid/euclid$(LIB_EXT) math/grobner/grobner$(LIB_EXT) parsers/util/parser_util$(LIB_EXT) ast/substitution/substitution$(LIB_EXT) tactic/tactic$(LIB_EXT) model/model$(LIB_EXT) ast/normal_forms/normal_forms$(LIB_EXT) ast/rewriter/rewriter$(LIB_EXT) ast/ast$(LIB_EXT) math/subpaving/subpaving$(LIB_EXT) math/realclosure/realclosure$(LIB_EXT) math/interval/interval$(LIB_EXT) math/hilbert/hilbert$(LIB_EXT) nlsat/nlsat$(LIB_EXT) sat/sat$(LIB_EXT) math/polynomial/polynomial$(LIB_EXT) util/util$(LIB_EXT)
	$(LINK) $(LINK_OUT_FLAG)test-z3$(EXE_EXT) $(LINK_FLAGS) test/algebraic$(OBJ_EXT) test/api$(OBJ_EXT) test/api_bug$(OBJ_EXT) test/arith_rewriter$(OBJ_EXT) test/arith_simplifier_plugin$(OBJ_EXT) test/ast$(OBJ_EXT) test/bit_blaster$(OBJ_EXT) test/bit_vector$(OBJ_EXT) test/bits$(OBJ_EXT) test/buffer$(OBJ_EXT) test/bv_simplifier_plugin$(OBJ_EXT) test/chashtable$(OBJ_EXT) test/check_assumptions$(OBJ_EXT) test/datalog_parser$(OBJ_EXT) test/diff_logic$(OBJ_EXT) test/dl_context$(OBJ_EXT) test/dl_product_relation$(OBJ_EXT) test/dl_query$(OBJ_EXT) test/dl_relation$(OBJ_EXT) test/dl_table$(OBJ_EXT) test/dl_util$(OBJ_EXT) test/escaped$(OBJ_EXT) test/ex$(OBJ_EXT) test/expr_rand$(OBJ_EXT) test/expr_substitution$(OBJ_EXT) test/ext_numeral$(OBJ_EXT) test/f2n$(OBJ_EXT) test/factor_rewriter$(OBJ_EXT) test/for_each_file$(OBJ_EXT) test/get_implied_equalities$(OBJ_EXT) test/gparams_register_modules$(OBJ_EXT) test/hashtable$(OBJ_EXT) test/heap$(OBJ_EXT) test/heap_trie$(OBJ_EXT) test/hilbert_basis$(OBJ_EXT) test/horn_subsume_model_converter$(OBJ_EXT) test/hwf$(OBJ_EXT) test/inf_rational$(OBJ_EXT) test/install_tactic$(OBJ_EXT) test/interval$(OBJ_EXT) test/karr$(OBJ_EXT) test/list$(OBJ_EXT) test/main$(OBJ_EXT) test/map$(OBJ_EXT) test/matcher$(OBJ_EXT) test/mem_initializer$(OBJ_EXT) test/memory$(OBJ_EXT) test/model2expr$(OBJ_EXT) test/model_retrieval$(OBJ_EXT) test/mpbq$(OBJ_EXT) test/mpf$(OBJ_EXT) test/mpff$(OBJ_EXT) test/mpfx$(OBJ_EXT) test/mpq$(OBJ_EXT) test/mpz$(OBJ_EXT) test/nlarith_util$(OBJ_EXT) test/nlsat$(OBJ_EXT) test/no_overflow$(OBJ_EXT) test/object_allocator$(OBJ_EXT) test/old_interval$(OBJ_EXT) test/optional$(OBJ_EXT) test/parray$(OBJ_EXT) test/permutation$(OBJ_EXT) test/polynomial$(OBJ_EXT) test/polynomial_factorization$(OBJ_EXT) test/polynorm$(OBJ_EXT) test/prime_generator$(OBJ_EXT) test/proof_checker$(OBJ_EXT) test/qe_arith$(OBJ_EXT) test/quant_elim$(OBJ_EXT) test/quant_solve$(OBJ_EXT) test/random$(OBJ_EXT) test/rational$(OBJ_EXT) test/rcf$(OBJ_EXT) test/region$(OBJ_EXT) test/simple_parser$(OBJ_EXT) test/simplifier$(OBJ_EXT) test/small_object_allocator$(OBJ_EXT) test/smt2print_parse$(OBJ_EXT) test/smt_context$(OBJ_EXT) test/stack$(OBJ_EXT) test/string_buffer$(OBJ_EXT) test/substitution$(OBJ_EXT) test/symbol$(OBJ_EXT) test/symbol_table$(OBJ_EXT) test/theory_dl$(OBJ_EXT) test/timeout$(OBJ_EXT) test/total_order$(OBJ_EXT) test/trigo$(OBJ_EXT) test/uint_set$(OBJ_EXT) test/upolynomial$(OBJ_EXT) test/var_subst$(OBJ_EXT) test/vector$(OBJ_EXT) api/api$(LIB_EXT) parsers/smt/smtparser$(LIB_EXT) tactic/portfolio/portfolio$(LIB_EXT) tactic/ufbv/ufbv_tactic$(LIB_EXT) tactic/smtlogics/smtlogic_tactics$(LIB_EXT) muz/fp/fp$(LIB_EXT) muz/duality/duality_intf$(LIB_EXT) muz/bmc/bmc$(LIB_EXT) muz/tab/tab$(LIB_EXT) muz/clp/clp$(LIB_EXT) muz/pdr/pdr$(LIB_EXT) muz/rel/rel$(LIB_EXT) muz/transforms/transforms$(LIB_EXT) muz/base/muz$(LIB_EXT) duality/duality$(LIB_EXT) qe/qe$(LIB_EXT) tactic/sls/sls_tactic$(LIB_EXT) smt/tactic/smt_tactic$(LIB_EXT) tactic/fpa/fpa_tactics$(LIB_EXT) test/fuzzing/fuzzing$(LIB_EXT) tactic/bv/bv_tactics$(LIB_EXT) smt/user_plugin/user_plugin$(LIB_EXT) smt/smt$(LIB_EXT) smt/proto_model/proto_model$(LIB_EXT) smt/params/smt_params$(LIB_EXT) ast/rewriter/bit_blaster/bit_blaster$(LIB_EXT) ast/pattern/pattern$(LIB_EXT) ast/macros/macros$(LIB_EXT) ast/fpa/fpa$(LIB_EXT) ast/simplifier/simplifier$(LIB_EXT) ast/proof_checker/proof_checker$(LIB_EXT) parsers/smt2/smt2parser$(LIB_EXT) cmd_context/cmd_context$(LIB_EXT) interp/interp$(LIB_EXT) solver/solver$(LIB_EXT) tactic/aig/aig_tactic$(LIB_EXT) math/subpaving/tactic/subpaving_tactic$(LIB_EXT) nlsat/tactic/nlsat_tactic$(LIB_EXT) tactic/arith/arith_tactics$(LIB_EXT) sat/tactic/sat_tactic$(LIB_EXT) tactic/core/core_tactics$(LIB_EXT) math/euclid/euclid$(LIB_EXT) math/grobner/grobner$(LIB_EXT) parsers/util/parser_util$(LIB_EXT) ast/substitution/substitution$(LIB_EXT) tactic/tactic$(LIB_EXT) model/model$(LIB_EXT) ast/normal_forms/normal_forms$(LIB_EXT) ast/rewriter/rewriter$(LIB_EXT) ast/ast$(LIB_EXT) math/subpaving/subpaving$(LIB_EXT) math/realclosure/realclosure$(LIB_EXT) math/interval/interval$(LIB_EXT) math/hilbert/hilbert$(LIB_EXT) nlsat/nlsat$(LIB_EXT) sat/sat$(LIB_EXT) math/polynomial/polynomial$(LIB_EXT) util/util$(LIB_EXT)  $(LINK_EXTRA_FLAGS)
test: test-z3$(EXE_EXT)

includes_61 = -I../src/api -I../src/tactic/portfolio -I../src/tactic/smtlogics -I../src/tactic/arith -I../src/tactic/core -I../src/tactic -I../src/ast -I../src/util -I../src/math/polynomial -I../src/model -I../src/ast/rewriter -I../src/ast/normal_forms -I../src/sat -I../src/tactic/bv -I../src/ast/rewriter/bit_blaster -I../src/ast/simplifier -I../src/nlsat/tactic -I../src/nlsat -I../src/sat/tactic -I../src/smt/tactic -I../src/smt -I../src/ast/macros -I../src/cmd_context -I../src/solver -I../src/interp -I../src/smt/proto_model -I../src/smt/params -I../src/ast/pattern -I../src/parsers/smt2 -I../src/parsers/util -I../src/ast/substitution -I../src/math/grobner -I../src/math/euclid -I../src/ast/proof_checker -I../src/ast/fpa -I../src/tactic/aig -I../src/muz/fp -I../src/muz/base -I../src/qe -I../src/muz/pdr -I../src/muz/transforms -I../src/math/hilbert -I../src/muz/clp -I../src/muz/tab -I../src/muz/rel -I../src/muz/bmc -I../src/muz/duality -I../src/duality -I../src/tactic/ufbv -I../src/tactic/fpa -I../src/tactic/sls -I../src/math/subpaving/tactic -I../src/math/subpaving -I../src/math/interval -I../src/smt/user_plugin -I../src/parsers/smt -I../src/math/realclosure -I../src/cmd_context/extra_cmds
api/dll/dll$(OBJ_EXT): ../src/api/dll/dll.cpp
	@echo src/api/dll/dll.cpp
	@$(CXX) $(CXXFLAGS) $(includes_61) $(CXX_OUT_FLAG)api/dll/dll$(OBJ_EXT) ../src/api/dll/dll.cpp
api/dll/gparams_register_modules$(OBJ_EXT): ../src/api/dll/gparams_register_modules.cpp util/gparams.h.node ast/pp_params.hpp.node util/env_params.h.node math/polynomial/algebraic_params.hpp.node model/model_evaluator_params.hpp.node model/model_params.hpp.node ast/rewriter/arith_rewriter_params.hpp.node ast/rewriter/array_rewriter_params.hpp.node ast/rewriter/bool_rewriter_params.hpp.node ast/rewriter/bv_rewriter_params.hpp.node ast/rewriter/poly_rewriter_params.hpp.node ast/rewriter/rewriter_params.hpp.node ast/normal_forms/nnf.h.node ast/normal_forms/nnf_params.hpp.node sat/sat_asymm_branch_params.hpp.node sat/sat_params.hpp.node sat/sat_scc_params.hpp.node sat/sat_simplifier_params.hpp.node ast/simplifier/arith_simplifier_params_helper.hpp.node ast/simplifier/array_simplifier_params_helper.hpp.node ast/simplifier/bv_simplifier_params_helper.hpp.node nlsat/nlsat_params.hpp.node cmd_context/context_params.h.node solver/combined_solver_params.hpp.node interp/interp_params.hpp.node smt/params/smt_params_helper.hpp.node ast/pattern/pattern_inference_params_helper.hpp.node parsers/util/parser_params.hpp.node muz/base/fixedpoint_params.hpp.node tactic/sls/sls_params.hpp.node math/realclosure/rcf_params.hpp.node
	@echo src/api/dll/gparams_register_modules.cpp
	@$(CXX) $(CXXFLAGS) $(includes_61) $(CXX_OUT_FLAG)api/dll/gparams_register_modules$(OBJ_EXT) ../src/api/dll/gparams_register_modules.cpp
api/dll/install_tactic$(OBJ_EXT): ../src/api/dll/install_tactic.cpp tactic/tactic.h.node cmd_context/tactic_cmds.h.node cmd_context/cmd_context.h.node tactic/smtlogics/qfbv_tactic.h.node tactic/smtlogics/qflia_tactic.h.node tactic/smtlogics/qflra_tactic.h.node tactic/smtlogics/qfnia_tactic.h.node tactic/smtlogics/qfnra_tactic.h.node tactic/arith/add_bounds_tactic.h.node tactic/arith/degree_shift_tactic.h.node tactic/arith/diff_neq_tactic.h.node tactic/arith/factor_tactic.h.node tactic/arith/fix_dl_var_tactic.h.node tactic/arith/fm_tactic.h.node tactic/arith/lia2pb_tactic.h.node tactic/arith/nla2bv_tactic.h.node tactic/arith/normalize_bounds_tactic.h.node tactic/arith/pb2bv_tactic.h.node tactic/arith/probe_arith.h.node tactic/arith/propagate_ineqs_tactic.h.node tactic/arith/purify_arith_tactic.h.node tactic/arith/recover_01_tactic.h.node tactic/core/cofactor_term_ite_tactic.h.node tactic/core/ctx_simplify_tactic.h.node tactic/core/der_tactic.h.node tactic/core/distribute_forall_tactic.h.node tactic/core/elim_term_ite_tactic.h.node tactic/core/elim_uncnstr_tactic.h.node tactic/core/nnf_tactic.h.node tactic/core/occf_tactic.h.node tactic/core/propagate_values_tactic.h.node tactic/core/reduce_args_tactic.h.node tactic/core/simplify_tactic.h.node tactic/core/solve_eqs_tactic.h.node tactic/core/split_clause_tactic.h.node tactic/core/symmetry_reduce_tactic.h.node tactic/core/tseitin_cnf_tactic.h.node tactic/probe.h.node tactic/tactic.h.node tactic/bv/bit_blaster_tactic.h.node tactic/bv/bv1_blaster_tactic.h.node tactic/bv/bv_size_reduction_tactic.h.node tactic/bv/max_bv_sharing_tactic.h.node nlsat/tactic/nlsat_tactic.h.node nlsat/tactic/qfnra_nlsat_tactic.h.node sat/tactic/sat_tactic.h.node smt/tactic/ctx_solver_simplify_tactic.h.node smt/tactic/smt_tactic.h.node smt/tactic/unit_subsumption_tactic.h.node tactic/aig/aig_tactic.h.node muz/fp/horn_tactic.h.node qe/qe_lite.h.node qe/qe_sat_tactic.h.node qe/qe_tactic.h.node qe/vsubst_tactic.h.node tactic/ufbv/macro_finder_tactic.h.node tactic/ufbv/quasi_macros_tactic.h.node tactic/ufbv/ufbv_tactic.h.node tactic/fpa/fpa2bv_tactic.h.node tactic/fpa/qffpa_tactic.h.node tactic/sls/sls_tactic.h.node math/subpaving/tactic/subpaving_tactic.h.node
	@echo src/api/dll/install_tactic.cpp
	@$(CXX) $(CXXFLAGS) $(includes_61) $(CXX_OUT_FLAG)api/dll/install_tactic$(OBJ_EXT) ../src/api/dll/install_tactic.cpp
api/dll/mem_initializer$(OBJ_EXT): ../src/api/dll/mem_initializer.cpp util/debug.h.node util/gparams.h.node util/prime_generator.h.node util/rational.h.node util/symbol.h.node util/trace.h.node
	@echo src/api/dll/mem_initializer.cpp
	@$(CXX) $(CXXFLAGS) $(includes_61) $(CXX_OUT_FLAG)api/dll/mem_initializer$(OBJ_EXT) ../src/api/dll/mem_initializer.cpp
libz3$(SO_EXT): api/dll/dll$(OBJ_EXT) api/dll/gparams_register_modules$(OBJ_EXT) api/dll/install_tactic$(OBJ_EXT) api/dll/mem_initializer$(OBJ_EXT) api/api_algebraic$(OBJ_EXT) api/api_arith$(OBJ_EXT) api/api_array$(OBJ_EXT) api/api_ast$(OBJ_EXT) api/api_ast_map$(OBJ_EXT) api/api_ast_vector$(OBJ_EXT) api/api_bv$(OBJ_EXT) api/api_commands$(OBJ_EXT) api/api_config_params$(OBJ_EXT) api/api_context$(OBJ_EXT) api/api_datalog$(OBJ_EXT) api/api_datatype$(OBJ_EXT) api/api_goal$(OBJ_EXT) api/api_interp$(OBJ_EXT) api/api_log$(OBJ_EXT) api/api_log_macros$(OBJ_EXT) api/api_model$(OBJ_EXT) api/api_numeral$(OBJ_EXT) api/api_params$(OBJ_EXT) api/api_parsers$(OBJ_EXT) api/api_polynomial$(OBJ_EXT) api/api_quant$(OBJ_EXT) api/api_rcf$(OBJ_EXT) api/api_solver$(OBJ_EXT) api/api_solver_old$(OBJ_EXT) api/api_stats$(OBJ_EXT) api/api_tactic$(OBJ_EXT) api/api_user_theory$(OBJ_EXT) api/z3_replayer$(OBJ_EXT) parsers/smt/smtparser$(LIB_EXT) tactic/portfolio/portfolio$(LIB_EXT) tactic/ufbv/ufbv_tactic$(LIB_EXT) tactic/smtlogics/smtlogic_tactics$(LIB_EXT) muz/fp/fp$(LIB_EXT) muz/duality/duality_intf$(LIB_EXT) muz/bmc/bmc$(LIB_EXT) muz/tab/tab$(LIB_EXT) muz/clp/clp$(LIB_EXT) muz/pdr/pdr$(LIB_EXT) muz/rel/rel$(LIB_EXT) muz/transforms/transforms$(LIB_EXT) muz/base/muz$(LIB_EXT) duality/duality$(LIB_EXT) qe/qe$(LIB_EXT) tactic/sls/sls_tactic$(LIB_EXT) smt/tactic/smt_tactic$(LIB_EXT) tactic/fpa/fpa_tactics$(LIB_EXT) tactic/bv/bv_tactics$(LIB_EXT) smt/user_plugin/user_plugin$(LIB_EXT) smt/smt$(LIB_EXT) smt/proto_model/proto_model$(LIB_EXT) smt/params/smt_params$(LIB_EXT) ast/rewriter/bit_blaster/bit_blaster$(LIB_EXT) ast/pattern/pattern$(LIB_EXT) ast/macros/macros$(LIB_EXT) ast/fpa/fpa$(LIB_EXT) ast/simplifier/simplifier$(LIB_EXT) ast/proof_checker/proof_checker$(LIB_EXT) parsers/smt2/smt2parser$(LIB_EXT) cmd_context/extra_cmds/extra_cmds$(LIB_EXT) cmd_context/cmd_context$(LIB_EXT) interp/interp$(LIB_EXT) solver/solver$(LIB_EXT) tactic/aig/aig_tactic$(LIB_EXT) math/subpaving/tactic/subpaving_tactic$(LIB_EXT) nlsat/tactic/nlsat_tactic$(LIB_EXT) tactic/arith/arith_tactics$(LIB_EXT) sat/tactic/sat_tactic$(LIB_EXT) tactic/core/core_tactics$(LIB_EXT) math/euclid/euclid$(LIB_EXT) math/grobner/grobner$(LIB_EXT) parsers/util/parser_util$(LIB_EXT) ast/substitution/substitution$(LIB_EXT) tactic/tactic$(LIB_EXT) model/model$(LIB_EXT) ast/normal_forms/normal_forms$(LIB_EXT) ast/rewriter/rewriter$(LIB_EXT) ast/ast$(LIB_EXT) math/subpaving/subpaving$(LIB_EXT) math/realclosure/realclosure$(LIB_EXT) math/interval/interval$(LIB_EXT) math/hilbert/hilbert$(LIB_EXT) nlsat/nlsat$(LIB_EXT) sat/sat$(LIB_EXT) math/polynomial/polynomial$(LIB_EXT) util/util$(LIB_EXT)
	$(LINK) $(SLINK_OUT_FLAG)libz3$(SO_EXT) $(SLINK_FLAGS) api/dll/dll$(OBJ_EXT) api/dll/gparams_register_modules$(OBJ_EXT) api/dll/install_tactic$(OBJ_EXT) api/dll/mem_initializer$(OBJ_EXT) api/api_algebraic$(OBJ_EXT) api/api_arith$(OBJ_EXT) api/api_array$(OBJ_EXT) api/api_ast$(OBJ_EXT) api/api_ast_map$(OBJ_EXT) api/api_ast_vector$(OBJ_EXT) api/api_bv$(OBJ_EXT) api/api_commands$(OBJ_EXT) api/api_config_params$(OBJ_EXT) api/api_context$(OBJ_EXT) api/api_datalog$(OBJ_EXT) api/api_datatype$(OBJ_EXT) api/api_goal$(OBJ_EXT) api/api_interp$(OBJ_EXT) api/api_log$(OBJ_EXT) api/api_log_macros$(OBJ_EXT) api/api_model$(OBJ_EXT) api/api_numeral$(OBJ_EXT) api/api_params$(OBJ_EXT) api/api_parsers$(OBJ_EXT) api/api_polynomial$(OBJ_EXT) api/api_quant$(OBJ_EXT) api/api_rcf$(OBJ_EXT) api/api_solver$(OBJ_EXT) api/api_solver_old$(OBJ_EXT) api/api_stats$(OBJ_EXT) api/api_tactic$(OBJ_EXT) api/api_user_theory$(OBJ_EXT) api/z3_replayer$(OBJ_EXT) parsers/smt/smtparser$(LIB_EXT) tactic/portfolio/portfolio$(LIB_EXT) tactic/ufbv/ufbv_tactic$(LIB_EXT) tactic/smtlogics/smtlogic_tactics$(LIB_EXT) muz/fp/fp$(LIB_EXT) muz/duality/duality_intf$(LIB_EXT) muz/bmc/bmc$(LIB_EXT) muz/tab/tab$(LIB_EXT) muz/clp/clp$(LIB_EXT) muz/pdr/pdr$(LIB_EXT) muz/rel/rel$(LIB_EXT) muz/transforms/transforms$(LIB_EXT) muz/base/muz$(LIB_EXT) duality/duality$(LIB_EXT) qe/qe$(LIB_EXT) tactic/sls/sls_tactic$(LIB_EXT) smt/tactic/smt_tactic$(LIB_EXT) tactic/fpa/fpa_tactics$(LIB_EXT) tactic/bv/bv_tactics$(LIB_EXT) smt/user_plugin/user_plugin$(LIB_EXT) smt/smt$(LIB_EXT) smt/proto_model/proto_model$(LIB_EXT) smt/params/smt_params$(LIB_EXT) ast/rewriter/bit_blaster/bit_blaster$(LIB_EXT) ast/pattern/pattern$(LIB_EXT) ast/macros/macros$(LIB_EXT) ast/fpa/fpa$(LIB_EXT) ast/simplifier/simplifier$(LIB_EXT) ast/proof_checker/proof_checker$(LIB_EXT) parsers/smt2/smt2parser$(LIB_EXT) cmd_context/extra_cmds/extra_cmds$(LIB_EXT) cmd_context/cmd_context$(LIB_EXT) interp/interp$(LIB_EXT) solver/solver$(LIB_EXT) tactic/aig/aig_tactic$(LIB_EXT) math/subpaving/tactic/subpaving_tactic$(LIB_EXT) nlsat/tactic/nlsat_tactic$(LIB_EXT) tactic/arith/arith_tactics$(LIB_EXT) sat/tactic/sat_tactic$(LIB_EXT) tactic/core/core_tactics$(LIB_EXT) math/euclid/euclid$(LIB_EXT) math/grobner/grobner$(LIB_EXT) parsers/util/parser_util$(LIB_EXT) ast/substitution/substitution$(LIB_EXT) tactic/tactic$(LIB_EXT) model/model$(LIB_EXT) ast/normal_forms/normal_forms$(LIB_EXT) ast/rewriter/rewriter$(LIB_EXT) ast/ast$(LIB_EXT) math/subpaving/subpaving$(LIB_EXT) math/realclosure/realclosure$(LIB_EXT) math/interval/interval$(LIB_EXT) math/hilbert/hilbert$(LIB_EXT) nlsat/nlsat$(LIB_EXT) sat/sat$(LIB_EXT) math/polynomial/polynomial$(LIB_EXT) util/util$(LIB_EXT)  $(SLINK_EXTRA_FLAGS)
api_dll: libz3$(SO_EXT)

libz3java$(SO_EXT): libz3$(SO_EXT) ../src/api/java/Native.cpp
	$(CXX) $(CXXFLAGS) $(CXX_OUT_FLAG)api/java/Native$(OBJ_EXT) -I"/System/Library/Frameworks/JavaVM.framework/Headers/" -I"/System/Library/Frameworks/JavaVM.framework/Headers//darwin" -I../src/api ../src/api/java/Native.cpp
	$(SLINK) $(SLINK_OUT_FLAG)libz3java$(SO_EXT) $(SLINK_FLAGS) api/java/Native$(OBJ_EXT) libz3$(SO_EXT)
com.microsoft.z3.jar: libz3java$(SO_EXT) ../src/api/java/AlgebraicNum.java ../src/api/java/ApplyResult.java ../src/api/java/ApplyResultDecRefQueue.java ../src/api/java/ArithExpr.java ../src/api/java/ArithSort.java ../src/api/java/ArrayExpr.java ../src/api/java/ArraySort.java ../src/api/java/AST.java ../src/api/java/ASTDecRefQueue.java ../src/api/java/ASTMap.java ../src/api/java/AstMapDecRefQueue.java ../src/api/java/ASTVector.java ../src/api/java/AstVectorDecRefQueue.java ../src/api/java/BitVecExpr.java ../src/api/java/BitVecNum.java ../src/api/java/BitVecSort.java ../src/api/java/BoolExpr.java ../src/api/java/BoolSort.java ../src/api/java/Constructor.java ../src/api/java/ConstructorList.java ../src/api/java/Context.java ../src/api/java/DatatypeExpr.java ../src/api/java/DatatypeSort.java ../src/api/java/EnumSort.java ../src/api/java/Expr.java ../src/api/java/FiniteDomainSort.java ../src/api/java/Fixedpoint.java ../src/api/java/FixedpointDecRefQueue.java ../src/api/java/FuncDecl.java ../src/api/java/FuncInterp.java ../src/api/java/FuncInterpDecRefQueue.java ../src/api/java/FuncInterpEntryDecRefQueue.java ../src/api/java/Global.java ../src/api/java/Goal.java ../src/api/java/GoalDecRefQueue.java ../src/api/java/IDecRefQueue.java ../src/api/java/IDisposable.java ../src/api/java/InterpolationContext.java ../src/api/java/IntExpr.java ../src/api/java/IntNum.java ../src/api/java/IntSort.java ../src/api/java/IntSymbol.java ../src/api/java/ListSort.java ../src/api/java/Log.java ../src/api/java/Model.java ../src/api/java/ModelDecRefQueue.java ../src/api/java/Native.java ../src/api/java/ParamDescrs.java ../src/api/java/ParamDescrsDecRefQueue.java ../src/api/java/Params.java ../src/api/java/ParamsDecRefQueue.java ../src/api/java/Pattern.java ../src/api/java/Probe.java ../src/api/java/ProbeDecRefQueue.java ../src/api/java/Quantifier.java ../src/api/java/RatNum.java ../src/api/java/RealExpr.java ../src/api/java/RealSort.java ../src/api/java/RelationSort.java ../src/api/java/SetSort.java ../src/api/java/Solver.java ../src/api/java/SolverDecRefQueue.java ../src/api/java/Sort.java ../src/api/java/Statistics.java ../src/api/java/StatisticsDecRefQueue.java ../src/api/java/Status.java ../src/api/java/StringSymbol.java ../src/api/java/Symbol.java ../src/api/java/Tactic.java ../src/api/java/TacticDecRefQueue.java ../src/api/java/TupleSort.java ../src/api/java/UninterpretedSort.java ../src/api/java/Version.java ../src/api/java/Z3Exception.java ../src/api/java/Z3Object.java ../src/api/java/enumerations/Z3_ast_kind.java ../src/api/java/enumerations/Z3_ast_print_mode.java ../src/api/java/enumerations/Z3_decl_kind.java ../src/api/java/enumerations/Z3_error_code.java ../src/api/java/enumerations/Z3_goal_prec.java ../src/api/java/enumerations/Z3_lbool.java ../src/api/java/enumerations/Z3_param_kind.java ../src/api/java/enumerations/Z3_parameter_kind.java ../src/api/java/enumerations/Z3_sort_kind.java ../src/api/java/enumerations/Z3_symbol_kind.java 
	"/usr/bin/javac" ../src/api/java/enumerations/*.java -d api/java/classes
	"/usr/bin/javac" -cp api/java/classes ../src/api/java/*.java -d api/java/classes
	"/usr/bin/jar" cfm com.microsoft.z3.jar ../src/api/java/manifest -C api/java/classes .
java: com.microsoft.z3.jar

cpp_example$(EXE_EXT): libz3$(SO_EXT) ../examples/c++/example.cpp
	$(CXX) $(OS_DEFINES) $(EXAMP_DEBUG_FLAG) $(LINK_OUT_FLAG)cpp_example$(EXE_EXT) $(LINK_FLAGS) -I../src/api -I../src/api/c++ ../examples/c++/example.cpp libz3$(SO_EXT) $(LINK_EXTRA_FLAGS)
_ex_cpp_example: cpp_example$(EXE_EXT)

iz3$(EXE_EXT): libz3$(SO_EXT) ../examples/interp/iz3.cpp
	$(CXX) $(OS_DEFINES) $(EXAMP_DEBUG_FLAG) $(LINK_OUT_FLAG)iz3$(EXE_EXT) $(LINK_FLAGS) -I../src/api -I../src/api/c++ ../examples/interp/iz3.cpp libz3$(SO_EXT) $(LINK_EXTRA_FLAGS)
_ex_iz3: iz3$(EXE_EXT)

z3_tptp$(EXE_EXT): libz3$(SO_EXT) ../examples/tptp/tptp5.cpp ../examples/tptp/tptp5.lex.cpp
	$(CXX) $(OS_DEFINES) $(EXAMP_DEBUG_FLAG) $(LINK_OUT_FLAG)z3_tptp$(EXE_EXT) $(LINK_FLAGS) -I../src/api -I../src/api/c++ ../examples/tptp/tptp5.cpp ../examples/tptp/tptp5.lex.cpp libz3$(SO_EXT) $(LINK_EXTRA_FLAGS)
_ex_z3_tptp: z3_tptp$(EXE_EXT)

c_example$(EXE_EXT): libz3$(SO_EXT) ../examples/c/test_capi.c
	$(CC) $(OS_DEFINES) $(EXAMP_DEBUG_FLAG) $(LINK_OUT_FLAG)c_example$(EXE_EXT) $(LINK_FLAGS) -I../src/api -I../src/api/c++ ../examples/c/test_capi.c libz3$(SO_EXT) $(LINK_EXTRA_FLAGS)
_ex_c_example: c_example$(EXE_EXT)

maxsat$(EXE_EXT): libz3$(SO_EXT) ../examples/maxsat/maxsat.c
	$(CC) $(OS_DEFINES) $(EXAMP_DEBUG_FLAG) $(LINK_OUT_FLAG)maxsat$(EXE_EXT) $(LINK_FLAGS) -I../src/api -I../src/api/c++ ../examples/maxsat/maxsat.c libz3$(SO_EXT) $(LINK_EXTRA_FLAGS)
_ex_maxsat: maxsat$(EXE_EXT)

JavaExample.class: com.microsoft.z3.jar ../examples/java/JavaExample.java
	"/usr/bin/javac" -cp com.microsoft.z3.jar  ../examples/java/JavaExample.java -d .
_ex_java_example: JavaExample.class

_ex_py_example: 

install:                                                                          
	@mkdir -p $(PREFIX)/bin
	@mkdir -p $(PREFIX)/include
	@mkdir -p $(PREFIX)/lib
	@cp ../src/api/z3.h $(PREFIX)/include/z3.h
	@cp ../src/api/z3_v1.h $(PREFIX)/include/z3_v1.h
	@cp ../src/api/z3_macros.h $(PREFIX)/include/z3_macros.h
	@cp ../src/api/z3_api.h $(PREFIX)/include/z3_api.h
	@cp ../src/api/z3_algebraic.h $(PREFIX)/include/z3_algebraic.h
	@cp ../src/api/z3_polynomial.h $(PREFIX)/include/z3_polynomial.h
	@cp ../src/api/z3_rcf.h $(PREFIX)/include/z3_rcf.h
	@cp ../src/api/z3_interp.h $(PREFIX)/include/z3_interp.h
	@cp z3$(EXE_EXT) $(PREFIX)/bin/z3$(EXE_EXT)
	@cp libz3$(SO_EXT) $(PREFIX)/lib/libz3$(SO_EXT)
	@cp libz3$(SO_EXT) /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/libz3$(SO_EXT)
	@cp ../src/api/c++/z3++.h $(PREFIX)/include/z3++.h
	@cp z3*.py /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages
	@cp z3*.pyc /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages
	@echo Z3 was successfully installed.

uninstall:
	@rm -f $(PREFIX)/include/z3.h
	@rm -f $(PREFIX)/include/z3_v1.h
	@rm -f $(PREFIX)/include/z3_macros.h
	@rm -f $(PREFIX)/include/z3_api.h
	@rm -f $(PREFIX)/include/z3_algebraic.h
	@rm -f $(PREFIX)/include/z3_polynomial.h
	@rm -f $(PREFIX)/include/z3_rcf.h
	@rm -f $(PREFIX)/include/z3_interp.h
	@rm -f $(PREFIX)/bin/z3$(EXE_EXT)
	@rm -f $(PREFIX)/bin/test-z3$(EXE_EXT)
	@rm -f $(PREFIX)/lib/libz3$(SO_EXT)
	@rm -f /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/libz3$(SO_EXT)
	@rm -f $(PREFIX)/lib/libz3$(LIB_EXT)
	@rm -f $(PREFIX)/include/z3++.h
	@rm -f /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/z3*.py
	@rm -f /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/z3*.pyc
	@rm -f /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/__pycache__/z3*.pyc
	@echo Z3 was successfully uninstalled.

